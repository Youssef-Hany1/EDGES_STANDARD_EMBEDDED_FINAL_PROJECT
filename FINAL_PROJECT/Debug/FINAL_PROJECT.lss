
FINAL_PROJECT.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000058c2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         000000e8  00800060  000058c2  00005936  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .stab         00003690  00000000  00000000  00005a20  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000095f  00000000  00000000  000090b0  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000140  00000000  00000000  00009a0f  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 00000170  00000000  00000000  00009b4f  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c49  00000000  00000000  00009cbf  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eeb  00000000  00000000  0000b908  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000dad  00000000  00000000  0000c7f3  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000160  00000000  00000000  0000d5a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000028d  00000000  00000000  0000d700  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000007ce  00000000  00000000  0000d98d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000050  00000000  00000000  0000e15b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
       4:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       8:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
       c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      10:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      14:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      18:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      1c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      20:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      24:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      28:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      2c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      30:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      34:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      38:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      3c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      40:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      44:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      48:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      4c:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>
      50:	0c 94 3f 00 	jmp	0x7e	; 0x7e <__bad_interrupt>

00000054 <__ctors_end>:
      54:	11 24       	eor	r1, r1
      56:	1f be       	out	0x3f, r1	; 63
      58:	cf e5       	ldi	r28, 0x5F	; 95
      5a:	d8 e0       	ldi	r29, 0x08	; 8
      5c:	de bf       	out	0x3e, r29	; 62
      5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
      60:	11 e0       	ldi	r17, 0x01	; 1
      62:	a0 e6       	ldi	r26, 0x60	; 96
      64:	b0 e0       	ldi	r27, 0x00	; 0
      66:	e2 ec       	ldi	r30, 0xC2	; 194
      68:	f8 e5       	ldi	r31, 0x58	; 88
      6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
      6c:	05 90       	lpm	r0, Z+
      6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
      70:	a8 34       	cpi	r26, 0x48	; 72
      72:	b1 07       	cpc	r27, r17
      74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>
      76:	0e 94 9b 05 	call	0xb36	; 0xb36 <main>
      7a:	0c 94 5f 2c 	jmp	0x58be	; 0x58be <_exit>

0000007e <__bad_interrupt>:
      7e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000082 <__fixunssfsi>:
      82:	ef 92       	push	r14
      84:	ff 92       	push	r15
      86:	0f 93       	push	r16
      88:	1f 93       	push	r17
      8a:	7b 01       	movw	r14, r22
      8c:	8c 01       	movw	r16, r24
      8e:	20 e0       	ldi	r18, 0x00	; 0
      90:	30 e0       	ldi	r19, 0x00	; 0
      92:	40 e0       	ldi	r20, 0x00	; 0
      94:	5f e4       	ldi	r21, 0x4F	; 79
      96:	0e 94 41 03 	call	0x682	; 0x682 <__gesf2>
      9a:	88 23       	and	r24, r24
      9c:	8c f0       	brlt	.+34     	; 0xc0 <__fixunssfsi+0x3e>
      9e:	c8 01       	movw	r24, r16
      a0:	b7 01       	movw	r22, r14
      a2:	20 e0       	ldi	r18, 0x00	; 0
      a4:	30 e0       	ldi	r19, 0x00	; 0
      a6:	40 e0       	ldi	r20, 0x00	; 0
      a8:	5f e4       	ldi	r21, 0x4F	; 79
      aa:	0e 94 b9 01 	call	0x372	; 0x372 <__subsf3>
      ae:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      b2:	9b 01       	movw	r18, r22
      b4:	ac 01       	movw	r20, r24
      b6:	20 50       	subi	r18, 0x00	; 0
      b8:	30 40       	sbci	r19, 0x00	; 0
      ba:	40 40       	sbci	r20, 0x00	; 0
      bc:	50 48       	sbci	r21, 0x80	; 128
      be:	06 c0       	rjmp	.+12     	; 0xcc <__fixunssfsi+0x4a>
      c0:	c8 01       	movw	r24, r16
      c2:	b7 01       	movw	r22, r14
      c4:	0e 94 a1 03 	call	0x742	; 0x742 <__fixsfsi>
      c8:	9b 01       	movw	r18, r22
      ca:	ac 01       	movw	r20, r24
      cc:	b9 01       	movw	r22, r18
      ce:	ca 01       	movw	r24, r20
      d0:	1f 91       	pop	r17
      d2:	0f 91       	pop	r16
      d4:	ff 90       	pop	r15
      d6:	ef 90       	pop	r14
      d8:	08 95       	ret

000000da <_fpadd_parts>:
      da:	a0 e0       	ldi	r26, 0x00	; 0
      dc:	b0 e0       	ldi	r27, 0x00	; 0
      de:	e3 e7       	ldi	r30, 0x73	; 115
      e0:	f0 e0       	ldi	r31, 0x00	; 0
      e2:	0c 94 e3 2b 	jmp	0x57c6	; 0x57c6 <__prologue_saves__>
      e6:	dc 01       	movw	r26, r24
      e8:	2b 01       	movw	r4, r22
      ea:	fa 01       	movw	r30, r20
      ec:	9c 91       	ld	r25, X
      ee:	92 30       	cpi	r25, 0x02	; 2
      f0:	08 f4       	brcc	.+2      	; 0xf4 <_fpadd_parts+0x1a>
      f2:	39 c1       	rjmp	.+626    	; 0x366 <_fpadd_parts+0x28c>
      f4:	eb 01       	movw	r28, r22
      f6:	88 81       	ld	r24, Y
      f8:	82 30       	cpi	r24, 0x02	; 2
      fa:	08 f4       	brcc	.+2      	; 0xfe <_fpadd_parts+0x24>
      fc:	33 c1       	rjmp	.+614    	; 0x364 <_fpadd_parts+0x28a>
      fe:	94 30       	cpi	r25, 0x04	; 4
     100:	69 f4       	brne	.+26     	; 0x11c <_fpadd_parts+0x42>
     102:	84 30       	cpi	r24, 0x04	; 4
     104:	09 f0       	breq	.+2      	; 0x108 <_fpadd_parts+0x2e>
     106:	2f c1       	rjmp	.+606    	; 0x366 <_fpadd_parts+0x28c>
     108:	11 96       	adiw	r26, 0x01	; 1
     10a:	9c 91       	ld	r25, X
     10c:	11 97       	sbiw	r26, 0x01	; 1
     10e:	89 81       	ldd	r24, Y+1	; 0x01
     110:	98 17       	cp	r25, r24
     112:	09 f4       	brne	.+2      	; 0x116 <_fpadd_parts+0x3c>
     114:	28 c1       	rjmp	.+592    	; 0x366 <_fpadd_parts+0x28c>
     116:	a0 e4       	ldi	r26, 0x40	; 64
     118:	b1 e0       	ldi	r27, 0x01	; 1
     11a:	25 c1       	rjmp	.+586    	; 0x366 <_fpadd_parts+0x28c>
     11c:	84 30       	cpi	r24, 0x04	; 4
     11e:	09 f4       	brne	.+2      	; 0x122 <_fpadd_parts+0x48>
     120:	21 c1       	rjmp	.+578    	; 0x364 <_fpadd_parts+0x28a>
     122:	82 30       	cpi	r24, 0x02	; 2
     124:	a9 f4       	brne	.+42     	; 0x150 <_fpadd_parts+0x76>
     126:	92 30       	cpi	r25, 0x02	; 2
     128:	09 f0       	breq	.+2      	; 0x12c <_fpadd_parts+0x52>
     12a:	1d c1       	rjmp	.+570    	; 0x366 <_fpadd_parts+0x28c>
     12c:	9a 01       	movw	r18, r20
     12e:	ad 01       	movw	r20, r26
     130:	88 e0       	ldi	r24, 0x08	; 8
     132:	ea 01       	movw	r28, r20
     134:	09 90       	ld	r0, Y+
     136:	ae 01       	movw	r20, r28
     138:	e9 01       	movw	r28, r18
     13a:	09 92       	st	Y+, r0
     13c:	9e 01       	movw	r18, r28
     13e:	81 50       	subi	r24, 0x01	; 1
     140:	c1 f7       	brne	.-16     	; 0x132 <_fpadd_parts+0x58>
     142:	e2 01       	movw	r28, r4
     144:	89 81       	ldd	r24, Y+1	; 0x01
     146:	11 96       	adiw	r26, 0x01	; 1
     148:	9c 91       	ld	r25, X
     14a:	89 23       	and	r24, r25
     14c:	81 83       	std	Z+1, r24	; 0x01
     14e:	08 c1       	rjmp	.+528    	; 0x360 <_fpadd_parts+0x286>
     150:	92 30       	cpi	r25, 0x02	; 2
     152:	09 f4       	brne	.+2      	; 0x156 <_fpadd_parts+0x7c>
     154:	07 c1       	rjmp	.+526    	; 0x364 <_fpadd_parts+0x28a>
     156:	12 96       	adiw	r26, 0x02	; 2
     158:	2d 90       	ld	r2, X+
     15a:	3c 90       	ld	r3, X
     15c:	13 97       	sbiw	r26, 0x03	; 3
     15e:	eb 01       	movw	r28, r22
     160:	8a 81       	ldd	r24, Y+2	; 0x02
     162:	9b 81       	ldd	r25, Y+3	; 0x03
     164:	14 96       	adiw	r26, 0x04	; 4
     166:	ad 90       	ld	r10, X+
     168:	bd 90       	ld	r11, X+
     16a:	cd 90       	ld	r12, X+
     16c:	dc 90       	ld	r13, X
     16e:	17 97       	sbiw	r26, 0x07	; 7
     170:	ec 80       	ldd	r14, Y+4	; 0x04
     172:	fd 80       	ldd	r15, Y+5	; 0x05
     174:	0e 81       	ldd	r16, Y+6	; 0x06
     176:	1f 81       	ldd	r17, Y+7	; 0x07
     178:	91 01       	movw	r18, r2
     17a:	28 1b       	sub	r18, r24
     17c:	39 0b       	sbc	r19, r25
     17e:	b9 01       	movw	r22, r18
     180:	37 ff       	sbrs	r19, 7
     182:	04 c0       	rjmp	.+8      	; 0x18c <_fpadd_parts+0xb2>
     184:	66 27       	eor	r22, r22
     186:	77 27       	eor	r23, r23
     188:	62 1b       	sub	r22, r18
     18a:	73 0b       	sbc	r23, r19
     18c:	60 32       	cpi	r22, 0x20	; 32
     18e:	71 05       	cpc	r23, r1
     190:	0c f0       	brlt	.+2      	; 0x194 <_fpadd_parts+0xba>
     192:	61 c0       	rjmp	.+194    	; 0x256 <_fpadd_parts+0x17c>
     194:	12 16       	cp	r1, r18
     196:	13 06       	cpc	r1, r19
     198:	6c f5       	brge	.+90     	; 0x1f4 <_fpadd_parts+0x11a>
     19a:	37 01       	movw	r6, r14
     19c:	48 01       	movw	r8, r16
     19e:	06 2e       	mov	r0, r22
     1a0:	04 c0       	rjmp	.+8      	; 0x1aa <_fpadd_parts+0xd0>
     1a2:	96 94       	lsr	r9
     1a4:	87 94       	ror	r8
     1a6:	77 94       	ror	r7
     1a8:	67 94       	ror	r6
     1aa:	0a 94       	dec	r0
     1ac:	d2 f7       	brpl	.-12     	; 0x1a2 <_fpadd_parts+0xc8>
     1ae:	21 e0       	ldi	r18, 0x01	; 1
     1b0:	30 e0       	ldi	r19, 0x00	; 0
     1b2:	40 e0       	ldi	r20, 0x00	; 0
     1b4:	50 e0       	ldi	r21, 0x00	; 0
     1b6:	04 c0       	rjmp	.+8      	; 0x1c0 <_fpadd_parts+0xe6>
     1b8:	22 0f       	add	r18, r18
     1ba:	33 1f       	adc	r19, r19
     1bc:	44 1f       	adc	r20, r20
     1be:	55 1f       	adc	r21, r21
     1c0:	6a 95       	dec	r22
     1c2:	d2 f7       	brpl	.-12     	; 0x1b8 <_fpadd_parts+0xde>
     1c4:	21 50       	subi	r18, 0x01	; 1
     1c6:	30 40       	sbci	r19, 0x00	; 0
     1c8:	40 40       	sbci	r20, 0x00	; 0
     1ca:	50 40       	sbci	r21, 0x00	; 0
     1cc:	2e 21       	and	r18, r14
     1ce:	3f 21       	and	r19, r15
     1d0:	40 23       	and	r20, r16
     1d2:	51 23       	and	r21, r17
     1d4:	21 15       	cp	r18, r1
     1d6:	31 05       	cpc	r19, r1
     1d8:	41 05       	cpc	r20, r1
     1da:	51 05       	cpc	r21, r1
     1dc:	21 f0       	breq	.+8      	; 0x1e6 <_fpadd_parts+0x10c>
     1de:	21 e0       	ldi	r18, 0x01	; 1
     1e0:	30 e0       	ldi	r19, 0x00	; 0
     1e2:	40 e0       	ldi	r20, 0x00	; 0
     1e4:	50 e0       	ldi	r21, 0x00	; 0
     1e6:	79 01       	movw	r14, r18
     1e8:	8a 01       	movw	r16, r20
     1ea:	e6 28       	or	r14, r6
     1ec:	f7 28       	or	r15, r7
     1ee:	08 29       	or	r16, r8
     1f0:	19 29       	or	r17, r9
     1f2:	3c c0       	rjmp	.+120    	; 0x26c <_fpadd_parts+0x192>
     1f4:	23 2b       	or	r18, r19
     1f6:	d1 f1       	breq	.+116    	; 0x26c <_fpadd_parts+0x192>
     1f8:	26 0e       	add	r2, r22
     1fa:	37 1e       	adc	r3, r23
     1fc:	35 01       	movw	r6, r10
     1fe:	46 01       	movw	r8, r12
     200:	06 2e       	mov	r0, r22
     202:	04 c0       	rjmp	.+8      	; 0x20c <_fpadd_parts+0x132>
     204:	96 94       	lsr	r9
     206:	87 94       	ror	r8
     208:	77 94       	ror	r7
     20a:	67 94       	ror	r6
     20c:	0a 94       	dec	r0
     20e:	d2 f7       	brpl	.-12     	; 0x204 <_fpadd_parts+0x12a>
     210:	21 e0       	ldi	r18, 0x01	; 1
     212:	30 e0       	ldi	r19, 0x00	; 0
     214:	40 e0       	ldi	r20, 0x00	; 0
     216:	50 e0       	ldi	r21, 0x00	; 0
     218:	04 c0       	rjmp	.+8      	; 0x222 <_fpadd_parts+0x148>
     21a:	22 0f       	add	r18, r18
     21c:	33 1f       	adc	r19, r19
     21e:	44 1f       	adc	r20, r20
     220:	55 1f       	adc	r21, r21
     222:	6a 95       	dec	r22
     224:	d2 f7       	brpl	.-12     	; 0x21a <_fpadd_parts+0x140>
     226:	21 50       	subi	r18, 0x01	; 1
     228:	30 40       	sbci	r19, 0x00	; 0
     22a:	40 40       	sbci	r20, 0x00	; 0
     22c:	50 40       	sbci	r21, 0x00	; 0
     22e:	2a 21       	and	r18, r10
     230:	3b 21       	and	r19, r11
     232:	4c 21       	and	r20, r12
     234:	5d 21       	and	r21, r13
     236:	21 15       	cp	r18, r1
     238:	31 05       	cpc	r19, r1
     23a:	41 05       	cpc	r20, r1
     23c:	51 05       	cpc	r21, r1
     23e:	21 f0       	breq	.+8      	; 0x248 <_fpadd_parts+0x16e>
     240:	21 e0       	ldi	r18, 0x01	; 1
     242:	30 e0       	ldi	r19, 0x00	; 0
     244:	40 e0       	ldi	r20, 0x00	; 0
     246:	50 e0       	ldi	r21, 0x00	; 0
     248:	59 01       	movw	r10, r18
     24a:	6a 01       	movw	r12, r20
     24c:	a6 28       	or	r10, r6
     24e:	b7 28       	or	r11, r7
     250:	c8 28       	or	r12, r8
     252:	d9 28       	or	r13, r9
     254:	0b c0       	rjmp	.+22     	; 0x26c <_fpadd_parts+0x192>
     256:	82 15       	cp	r24, r2
     258:	93 05       	cpc	r25, r3
     25a:	2c f0       	brlt	.+10     	; 0x266 <_fpadd_parts+0x18c>
     25c:	1c 01       	movw	r2, r24
     25e:	aa 24       	eor	r10, r10
     260:	bb 24       	eor	r11, r11
     262:	65 01       	movw	r12, r10
     264:	03 c0       	rjmp	.+6      	; 0x26c <_fpadd_parts+0x192>
     266:	ee 24       	eor	r14, r14
     268:	ff 24       	eor	r15, r15
     26a:	87 01       	movw	r16, r14
     26c:	11 96       	adiw	r26, 0x01	; 1
     26e:	9c 91       	ld	r25, X
     270:	d2 01       	movw	r26, r4
     272:	11 96       	adiw	r26, 0x01	; 1
     274:	8c 91       	ld	r24, X
     276:	98 17       	cp	r25, r24
     278:	09 f4       	brne	.+2      	; 0x27c <_fpadd_parts+0x1a2>
     27a:	45 c0       	rjmp	.+138    	; 0x306 <_fpadd_parts+0x22c>
     27c:	99 23       	and	r25, r25
     27e:	39 f0       	breq	.+14     	; 0x28e <_fpadd_parts+0x1b4>
     280:	a8 01       	movw	r20, r16
     282:	97 01       	movw	r18, r14
     284:	2a 19       	sub	r18, r10
     286:	3b 09       	sbc	r19, r11
     288:	4c 09       	sbc	r20, r12
     28a:	5d 09       	sbc	r21, r13
     28c:	06 c0       	rjmp	.+12     	; 0x29a <_fpadd_parts+0x1c0>
     28e:	a6 01       	movw	r20, r12
     290:	95 01       	movw	r18, r10
     292:	2e 19       	sub	r18, r14
     294:	3f 09       	sbc	r19, r15
     296:	40 0b       	sbc	r20, r16
     298:	51 0b       	sbc	r21, r17
     29a:	57 fd       	sbrc	r21, 7
     29c:	08 c0       	rjmp	.+16     	; 0x2ae <_fpadd_parts+0x1d4>
     29e:	11 82       	std	Z+1, r1	; 0x01
     2a0:	33 82       	std	Z+3, r3	; 0x03
     2a2:	22 82       	std	Z+2, r2	; 0x02
     2a4:	24 83       	std	Z+4, r18	; 0x04
     2a6:	35 83       	std	Z+5, r19	; 0x05
     2a8:	46 83       	std	Z+6, r20	; 0x06
     2aa:	57 83       	std	Z+7, r21	; 0x07
     2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <_fpadd_parts+0x20e>
     2ae:	81 e0       	ldi	r24, 0x01	; 1
     2b0:	81 83       	std	Z+1, r24	; 0x01
     2b2:	33 82       	std	Z+3, r3	; 0x03
     2b4:	22 82       	std	Z+2, r2	; 0x02
     2b6:	88 27       	eor	r24, r24
     2b8:	99 27       	eor	r25, r25
     2ba:	dc 01       	movw	r26, r24
     2bc:	82 1b       	sub	r24, r18
     2be:	93 0b       	sbc	r25, r19
     2c0:	a4 0b       	sbc	r26, r20
     2c2:	b5 0b       	sbc	r27, r21
     2c4:	84 83       	std	Z+4, r24	; 0x04
     2c6:	95 83       	std	Z+5, r25	; 0x05
     2c8:	a6 83       	std	Z+6, r26	; 0x06
     2ca:	b7 83       	std	Z+7, r27	; 0x07
     2cc:	0d c0       	rjmp	.+26     	; 0x2e8 <_fpadd_parts+0x20e>
     2ce:	22 0f       	add	r18, r18
     2d0:	33 1f       	adc	r19, r19
     2d2:	44 1f       	adc	r20, r20
     2d4:	55 1f       	adc	r21, r21
     2d6:	24 83       	std	Z+4, r18	; 0x04
     2d8:	35 83       	std	Z+5, r19	; 0x05
     2da:	46 83       	std	Z+6, r20	; 0x06
     2dc:	57 83       	std	Z+7, r21	; 0x07
     2de:	82 81       	ldd	r24, Z+2	; 0x02
     2e0:	93 81       	ldd	r25, Z+3	; 0x03
     2e2:	01 97       	sbiw	r24, 0x01	; 1
     2e4:	93 83       	std	Z+3, r25	; 0x03
     2e6:	82 83       	std	Z+2, r24	; 0x02
     2e8:	24 81       	ldd	r18, Z+4	; 0x04
     2ea:	35 81       	ldd	r19, Z+5	; 0x05
     2ec:	46 81       	ldd	r20, Z+6	; 0x06
     2ee:	57 81       	ldd	r21, Z+7	; 0x07
     2f0:	da 01       	movw	r26, r20
     2f2:	c9 01       	movw	r24, r18
     2f4:	01 97       	sbiw	r24, 0x01	; 1
     2f6:	a1 09       	sbc	r26, r1
     2f8:	b1 09       	sbc	r27, r1
     2fa:	8f 5f       	subi	r24, 0xFF	; 255
     2fc:	9f 4f       	sbci	r25, 0xFF	; 255
     2fe:	af 4f       	sbci	r26, 0xFF	; 255
     300:	bf 43       	sbci	r27, 0x3F	; 63
     302:	28 f3       	brcs	.-54     	; 0x2ce <_fpadd_parts+0x1f4>
     304:	0b c0       	rjmp	.+22     	; 0x31c <_fpadd_parts+0x242>
     306:	91 83       	std	Z+1, r25	; 0x01
     308:	33 82       	std	Z+3, r3	; 0x03
     30a:	22 82       	std	Z+2, r2	; 0x02
     30c:	ea 0c       	add	r14, r10
     30e:	fb 1c       	adc	r15, r11
     310:	0c 1d       	adc	r16, r12
     312:	1d 1d       	adc	r17, r13
     314:	e4 82       	std	Z+4, r14	; 0x04
     316:	f5 82       	std	Z+5, r15	; 0x05
     318:	06 83       	std	Z+6, r16	; 0x06
     31a:	17 83       	std	Z+7, r17	; 0x07
     31c:	83 e0       	ldi	r24, 0x03	; 3
     31e:	80 83       	st	Z, r24
     320:	24 81       	ldd	r18, Z+4	; 0x04
     322:	35 81       	ldd	r19, Z+5	; 0x05
     324:	46 81       	ldd	r20, Z+6	; 0x06
     326:	57 81       	ldd	r21, Z+7	; 0x07
     328:	57 ff       	sbrs	r21, 7
     32a:	1a c0       	rjmp	.+52     	; 0x360 <_fpadd_parts+0x286>
     32c:	c9 01       	movw	r24, r18
     32e:	aa 27       	eor	r26, r26
     330:	97 fd       	sbrc	r25, 7
     332:	a0 95       	com	r26
     334:	ba 2f       	mov	r27, r26
     336:	81 70       	andi	r24, 0x01	; 1
     338:	90 70       	andi	r25, 0x00	; 0
     33a:	a0 70       	andi	r26, 0x00	; 0
     33c:	b0 70       	andi	r27, 0x00	; 0
     33e:	56 95       	lsr	r21
     340:	47 95       	ror	r20
     342:	37 95       	ror	r19
     344:	27 95       	ror	r18
     346:	82 2b       	or	r24, r18
     348:	93 2b       	or	r25, r19
     34a:	a4 2b       	or	r26, r20
     34c:	b5 2b       	or	r27, r21
     34e:	84 83       	std	Z+4, r24	; 0x04
     350:	95 83       	std	Z+5, r25	; 0x05
     352:	a6 83       	std	Z+6, r26	; 0x06
     354:	b7 83       	std	Z+7, r27	; 0x07
     356:	82 81       	ldd	r24, Z+2	; 0x02
     358:	93 81       	ldd	r25, Z+3	; 0x03
     35a:	01 96       	adiw	r24, 0x01	; 1
     35c:	93 83       	std	Z+3, r25	; 0x03
     35e:	82 83       	std	Z+2, r24	; 0x02
     360:	df 01       	movw	r26, r30
     362:	01 c0       	rjmp	.+2      	; 0x366 <_fpadd_parts+0x28c>
     364:	d2 01       	movw	r26, r4
     366:	cd 01       	movw	r24, r26
     368:	cd b7       	in	r28, 0x3d	; 61
     36a:	de b7       	in	r29, 0x3e	; 62
     36c:	e2 e1       	ldi	r30, 0x12	; 18
     36e:	0c 94 ff 2b 	jmp	0x57fe	; 0x57fe <__epilogue_restores__>

00000372 <__subsf3>:
     372:	a0 e2       	ldi	r26, 0x20	; 32
     374:	b0 e0       	ldi	r27, 0x00	; 0
     376:	ef eb       	ldi	r30, 0xBF	; 191
     378:	f1 e0       	ldi	r31, 0x01	; 1
     37a:	0c 94 ef 2b 	jmp	0x57de	; 0x57de <__prologue_saves__+0x18>
     37e:	69 83       	std	Y+1, r22	; 0x01
     380:	7a 83       	std	Y+2, r23	; 0x02
     382:	8b 83       	std	Y+3, r24	; 0x03
     384:	9c 83       	std	Y+4, r25	; 0x04
     386:	2d 83       	std	Y+5, r18	; 0x05
     388:	3e 83       	std	Y+6, r19	; 0x06
     38a:	4f 83       	std	Y+7, r20	; 0x07
     38c:	58 87       	std	Y+8, r21	; 0x08
     38e:	e9 e0       	ldi	r30, 0x09	; 9
     390:	ee 2e       	mov	r14, r30
     392:	f1 2c       	mov	r15, r1
     394:	ec 0e       	add	r14, r28
     396:	fd 1e       	adc	r15, r29
     398:	ce 01       	movw	r24, r28
     39a:	01 96       	adiw	r24, 0x01	; 1
     39c:	b7 01       	movw	r22, r14
     39e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3a2:	8e 01       	movw	r16, r28
     3a4:	0f 5e       	subi	r16, 0xEF	; 239
     3a6:	1f 4f       	sbci	r17, 0xFF	; 255
     3a8:	ce 01       	movw	r24, r28
     3aa:	05 96       	adiw	r24, 0x05	; 5
     3ac:	b8 01       	movw	r22, r16
     3ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     3b2:	8a 89       	ldd	r24, Y+18	; 0x12
     3b4:	91 e0       	ldi	r25, 0x01	; 1
     3b6:	89 27       	eor	r24, r25
     3b8:	8a 8b       	std	Y+18, r24	; 0x12
     3ba:	c7 01       	movw	r24, r14
     3bc:	b8 01       	movw	r22, r16
     3be:	ae 01       	movw	r20, r28
     3c0:	47 5e       	subi	r20, 0xE7	; 231
     3c2:	5f 4f       	sbci	r21, 0xFF	; 255
     3c4:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     3c8:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     3cc:	a0 96       	adiw	r28, 0x20	; 32
     3ce:	e6 e0       	ldi	r30, 0x06	; 6
     3d0:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__epilogue_restores__+0x18>

000003d4 <__addsf3>:
     3d4:	a0 e2       	ldi	r26, 0x20	; 32
     3d6:	b0 e0       	ldi	r27, 0x00	; 0
     3d8:	e0 ef       	ldi	r30, 0xF0	; 240
     3da:	f1 e0       	ldi	r31, 0x01	; 1
     3dc:	0c 94 ef 2b 	jmp	0x57de	; 0x57de <__prologue_saves__+0x18>
     3e0:	69 83       	std	Y+1, r22	; 0x01
     3e2:	7a 83       	std	Y+2, r23	; 0x02
     3e4:	8b 83       	std	Y+3, r24	; 0x03
     3e6:	9c 83       	std	Y+4, r25	; 0x04
     3e8:	2d 83       	std	Y+5, r18	; 0x05
     3ea:	3e 83       	std	Y+6, r19	; 0x06
     3ec:	4f 83       	std	Y+7, r20	; 0x07
     3ee:	58 87       	std	Y+8, r21	; 0x08
     3f0:	f9 e0       	ldi	r31, 0x09	; 9
     3f2:	ef 2e       	mov	r14, r31
     3f4:	f1 2c       	mov	r15, r1
     3f6:	ec 0e       	add	r14, r28
     3f8:	fd 1e       	adc	r15, r29
     3fa:	ce 01       	movw	r24, r28
     3fc:	01 96       	adiw	r24, 0x01	; 1
     3fe:	b7 01       	movw	r22, r14
     400:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     404:	8e 01       	movw	r16, r28
     406:	0f 5e       	subi	r16, 0xEF	; 239
     408:	1f 4f       	sbci	r17, 0xFF	; 255
     40a:	ce 01       	movw	r24, r28
     40c:	05 96       	adiw	r24, 0x05	; 5
     40e:	b8 01       	movw	r22, r16
     410:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     414:	c7 01       	movw	r24, r14
     416:	b8 01       	movw	r22, r16
     418:	ae 01       	movw	r20, r28
     41a:	47 5e       	subi	r20, 0xE7	; 231
     41c:	5f 4f       	sbci	r21, 0xFF	; 255
     41e:	0e 94 6d 00 	call	0xda	; 0xda <_fpadd_parts>
     422:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     426:	a0 96       	adiw	r28, 0x20	; 32
     428:	e6 e0       	ldi	r30, 0x06	; 6
     42a:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__epilogue_restores__+0x18>

0000042e <__mulsf3>:
     42e:	a0 e2       	ldi	r26, 0x20	; 32
     430:	b0 e0       	ldi	r27, 0x00	; 0
     432:	ed e1       	ldi	r30, 0x1D	; 29
     434:	f2 e0       	ldi	r31, 0x02	; 2
     436:	0c 94 e3 2b 	jmp	0x57c6	; 0x57c6 <__prologue_saves__>
     43a:	69 83       	std	Y+1, r22	; 0x01
     43c:	7a 83       	std	Y+2, r23	; 0x02
     43e:	8b 83       	std	Y+3, r24	; 0x03
     440:	9c 83       	std	Y+4, r25	; 0x04
     442:	2d 83       	std	Y+5, r18	; 0x05
     444:	3e 83       	std	Y+6, r19	; 0x06
     446:	4f 83       	std	Y+7, r20	; 0x07
     448:	58 87       	std	Y+8, r21	; 0x08
     44a:	ce 01       	movw	r24, r28
     44c:	01 96       	adiw	r24, 0x01	; 1
     44e:	be 01       	movw	r22, r28
     450:	67 5f       	subi	r22, 0xF7	; 247
     452:	7f 4f       	sbci	r23, 0xFF	; 255
     454:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     458:	ce 01       	movw	r24, r28
     45a:	05 96       	adiw	r24, 0x05	; 5
     45c:	be 01       	movw	r22, r28
     45e:	6f 5e       	subi	r22, 0xEF	; 239
     460:	7f 4f       	sbci	r23, 0xFF	; 255
     462:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     466:	99 85       	ldd	r25, Y+9	; 0x09
     468:	92 30       	cpi	r25, 0x02	; 2
     46a:	88 f0       	brcs	.+34     	; 0x48e <__mulsf3+0x60>
     46c:	89 89       	ldd	r24, Y+17	; 0x11
     46e:	82 30       	cpi	r24, 0x02	; 2
     470:	c8 f0       	brcs	.+50     	; 0x4a4 <__mulsf3+0x76>
     472:	94 30       	cpi	r25, 0x04	; 4
     474:	19 f4       	brne	.+6      	; 0x47c <__mulsf3+0x4e>
     476:	82 30       	cpi	r24, 0x02	; 2
     478:	51 f4       	brne	.+20     	; 0x48e <__mulsf3+0x60>
     47a:	04 c0       	rjmp	.+8      	; 0x484 <__mulsf3+0x56>
     47c:	84 30       	cpi	r24, 0x04	; 4
     47e:	29 f4       	brne	.+10     	; 0x48a <__mulsf3+0x5c>
     480:	92 30       	cpi	r25, 0x02	; 2
     482:	81 f4       	brne	.+32     	; 0x4a4 <__mulsf3+0x76>
     484:	80 e4       	ldi	r24, 0x40	; 64
     486:	91 e0       	ldi	r25, 0x01	; 1
     488:	c6 c0       	rjmp	.+396    	; 0x616 <__mulsf3+0x1e8>
     48a:	92 30       	cpi	r25, 0x02	; 2
     48c:	49 f4       	brne	.+18     	; 0x4a0 <__mulsf3+0x72>
     48e:	20 e0       	ldi	r18, 0x00	; 0
     490:	9a 85       	ldd	r25, Y+10	; 0x0a
     492:	8a 89       	ldd	r24, Y+18	; 0x12
     494:	98 13       	cpse	r25, r24
     496:	21 e0       	ldi	r18, 0x01	; 1
     498:	2a 87       	std	Y+10, r18	; 0x0a
     49a:	ce 01       	movw	r24, r28
     49c:	09 96       	adiw	r24, 0x09	; 9
     49e:	bb c0       	rjmp	.+374    	; 0x616 <__mulsf3+0x1e8>
     4a0:	82 30       	cpi	r24, 0x02	; 2
     4a2:	49 f4       	brne	.+18     	; 0x4b6 <__mulsf3+0x88>
     4a4:	20 e0       	ldi	r18, 0x00	; 0
     4a6:	9a 85       	ldd	r25, Y+10	; 0x0a
     4a8:	8a 89       	ldd	r24, Y+18	; 0x12
     4aa:	98 13       	cpse	r25, r24
     4ac:	21 e0       	ldi	r18, 0x01	; 1
     4ae:	2a 8b       	std	Y+18, r18	; 0x12
     4b0:	ce 01       	movw	r24, r28
     4b2:	41 96       	adiw	r24, 0x11	; 17
     4b4:	b0 c0       	rjmp	.+352    	; 0x616 <__mulsf3+0x1e8>
     4b6:	2d 84       	ldd	r2, Y+13	; 0x0d
     4b8:	3e 84       	ldd	r3, Y+14	; 0x0e
     4ba:	4f 84       	ldd	r4, Y+15	; 0x0f
     4bc:	58 88       	ldd	r5, Y+16	; 0x10
     4be:	6d 88       	ldd	r6, Y+21	; 0x15
     4c0:	7e 88       	ldd	r7, Y+22	; 0x16
     4c2:	8f 88       	ldd	r8, Y+23	; 0x17
     4c4:	98 8c       	ldd	r9, Y+24	; 0x18
     4c6:	ee 24       	eor	r14, r14
     4c8:	ff 24       	eor	r15, r15
     4ca:	87 01       	movw	r16, r14
     4cc:	aa 24       	eor	r10, r10
     4ce:	bb 24       	eor	r11, r11
     4d0:	65 01       	movw	r12, r10
     4d2:	40 e0       	ldi	r20, 0x00	; 0
     4d4:	50 e0       	ldi	r21, 0x00	; 0
     4d6:	60 e0       	ldi	r22, 0x00	; 0
     4d8:	70 e0       	ldi	r23, 0x00	; 0
     4da:	e0 e0       	ldi	r30, 0x00	; 0
     4dc:	f0 e0       	ldi	r31, 0x00	; 0
     4de:	c1 01       	movw	r24, r2
     4e0:	81 70       	andi	r24, 0x01	; 1
     4e2:	90 70       	andi	r25, 0x00	; 0
     4e4:	89 2b       	or	r24, r25
     4e6:	e9 f0       	breq	.+58     	; 0x522 <__mulsf3+0xf4>
     4e8:	e6 0c       	add	r14, r6
     4ea:	f7 1c       	adc	r15, r7
     4ec:	08 1d       	adc	r16, r8
     4ee:	19 1d       	adc	r17, r9
     4f0:	9a 01       	movw	r18, r20
     4f2:	ab 01       	movw	r20, r22
     4f4:	2a 0d       	add	r18, r10
     4f6:	3b 1d       	adc	r19, r11
     4f8:	4c 1d       	adc	r20, r12
     4fa:	5d 1d       	adc	r21, r13
     4fc:	80 e0       	ldi	r24, 0x00	; 0
     4fe:	90 e0       	ldi	r25, 0x00	; 0
     500:	a0 e0       	ldi	r26, 0x00	; 0
     502:	b0 e0       	ldi	r27, 0x00	; 0
     504:	e6 14       	cp	r14, r6
     506:	f7 04       	cpc	r15, r7
     508:	08 05       	cpc	r16, r8
     50a:	19 05       	cpc	r17, r9
     50c:	20 f4       	brcc	.+8      	; 0x516 <__mulsf3+0xe8>
     50e:	81 e0       	ldi	r24, 0x01	; 1
     510:	90 e0       	ldi	r25, 0x00	; 0
     512:	a0 e0       	ldi	r26, 0x00	; 0
     514:	b0 e0       	ldi	r27, 0x00	; 0
     516:	ba 01       	movw	r22, r20
     518:	a9 01       	movw	r20, r18
     51a:	48 0f       	add	r20, r24
     51c:	59 1f       	adc	r21, r25
     51e:	6a 1f       	adc	r22, r26
     520:	7b 1f       	adc	r23, r27
     522:	aa 0c       	add	r10, r10
     524:	bb 1c       	adc	r11, r11
     526:	cc 1c       	adc	r12, r12
     528:	dd 1c       	adc	r13, r13
     52a:	97 fe       	sbrs	r9, 7
     52c:	08 c0       	rjmp	.+16     	; 0x53e <__mulsf3+0x110>
     52e:	81 e0       	ldi	r24, 0x01	; 1
     530:	90 e0       	ldi	r25, 0x00	; 0
     532:	a0 e0       	ldi	r26, 0x00	; 0
     534:	b0 e0       	ldi	r27, 0x00	; 0
     536:	a8 2a       	or	r10, r24
     538:	b9 2a       	or	r11, r25
     53a:	ca 2a       	or	r12, r26
     53c:	db 2a       	or	r13, r27
     53e:	31 96       	adiw	r30, 0x01	; 1
     540:	e0 32       	cpi	r30, 0x20	; 32
     542:	f1 05       	cpc	r31, r1
     544:	49 f0       	breq	.+18     	; 0x558 <__mulsf3+0x12a>
     546:	66 0c       	add	r6, r6
     548:	77 1c       	adc	r7, r7
     54a:	88 1c       	adc	r8, r8
     54c:	99 1c       	adc	r9, r9
     54e:	56 94       	lsr	r5
     550:	47 94       	ror	r4
     552:	37 94       	ror	r3
     554:	27 94       	ror	r2
     556:	c3 cf       	rjmp	.-122    	; 0x4de <__mulsf3+0xb0>
     558:	fa 85       	ldd	r31, Y+10	; 0x0a
     55a:	ea 89       	ldd	r30, Y+18	; 0x12
     55c:	2b 89       	ldd	r18, Y+19	; 0x13
     55e:	3c 89       	ldd	r19, Y+20	; 0x14
     560:	8b 85       	ldd	r24, Y+11	; 0x0b
     562:	9c 85       	ldd	r25, Y+12	; 0x0c
     564:	28 0f       	add	r18, r24
     566:	39 1f       	adc	r19, r25
     568:	2e 5f       	subi	r18, 0xFE	; 254
     56a:	3f 4f       	sbci	r19, 0xFF	; 255
     56c:	17 c0       	rjmp	.+46     	; 0x59c <__mulsf3+0x16e>
     56e:	ca 01       	movw	r24, r20
     570:	81 70       	andi	r24, 0x01	; 1
     572:	90 70       	andi	r25, 0x00	; 0
     574:	89 2b       	or	r24, r25
     576:	61 f0       	breq	.+24     	; 0x590 <__mulsf3+0x162>
     578:	16 95       	lsr	r17
     57a:	07 95       	ror	r16
     57c:	f7 94       	ror	r15
     57e:	e7 94       	ror	r14
     580:	80 e0       	ldi	r24, 0x00	; 0
     582:	90 e0       	ldi	r25, 0x00	; 0
     584:	a0 e0       	ldi	r26, 0x00	; 0
     586:	b0 e8       	ldi	r27, 0x80	; 128
     588:	e8 2a       	or	r14, r24
     58a:	f9 2a       	or	r15, r25
     58c:	0a 2b       	or	r16, r26
     58e:	1b 2b       	or	r17, r27
     590:	76 95       	lsr	r23
     592:	67 95       	ror	r22
     594:	57 95       	ror	r21
     596:	47 95       	ror	r20
     598:	2f 5f       	subi	r18, 0xFF	; 255
     59a:	3f 4f       	sbci	r19, 0xFF	; 255
     59c:	77 fd       	sbrc	r23, 7
     59e:	e7 cf       	rjmp	.-50     	; 0x56e <__mulsf3+0x140>
     5a0:	0c c0       	rjmp	.+24     	; 0x5ba <__mulsf3+0x18c>
     5a2:	44 0f       	add	r20, r20
     5a4:	55 1f       	adc	r21, r21
     5a6:	66 1f       	adc	r22, r22
     5a8:	77 1f       	adc	r23, r23
     5aa:	17 fd       	sbrc	r17, 7
     5ac:	41 60       	ori	r20, 0x01	; 1
     5ae:	ee 0c       	add	r14, r14
     5b0:	ff 1c       	adc	r15, r15
     5b2:	00 1f       	adc	r16, r16
     5b4:	11 1f       	adc	r17, r17
     5b6:	21 50       	subi	r18, 0x01	; 1
     5b8:	30 40       	sbci	r19, 0x00	; 0
     5ba:	40 30       	cpi	r20, 0x00	; 0
     5bc:	90 e0       	ldi	r25, 0x00	; 0
     5be:	59 07       	cpc	r21, r25
     5c0:	90 e0       	ldi	r25, 0x00	; 0
     5c2:	69 07       	cpc	r22, r25
     5c4:	90 e4       	ldi	r25, 0x40	; 64
     5c6:	79 07       	cpc	r23, r25
     5c8:	60 f3       	brcs	.-40     	; 0x5a2 <__mulsf3+0x174>
     5ca:	2b 8f       	std	Y+27, r18	; 0x1b
     5cc:	3c 8f       	std	Y+28, r19	; 0x1c
     5ce:	db 01       	movw	r26, r22
     5d0:	ca 01       	movw	r24, r20
     5d2:	8f 77       	andi	r24, 0x7F	; 127
     5d4:	90 70       	andi	r25, 0x00	; 0
     5d6:	a0 70       	andi	r26, 0x00	; 0
     5d8:	b0 70       	andi	r27, 0x00	; 0
     5da:	80 34       	cpi	r24, 0x40	; 64
     5dc:	91 05       	cpc	r25, r1
     5de:	a1 05       	cpc	r26, r1
     5e0:	b1 05       	cpc	r27, r1
     5e2:	61 f4       	brne	.+24     	; 0x5fc <__mulsf3+0x1ce>
     5e4:	47 fd       	sbrc	r20, 7
     5e6:	0a c0       	rjmp	.+20     	; 0x5fc <__mulsf3+0x1ce>
     5e8:	e1 14       	cp	r14, r1
     5ea:	f1 04       	cpc	r15, r1
     5ec:	01 05       	cpc	r16, r1
     5ee:	11 05       	cpc	r17, r1
     5f0:	29 f0       	breq	.+10     	; 0x5fc <__mulsf3+0x1ce>
     5f2:	40 5c       	subi	r20, 0xC0	; 192
     5f4:	5f 4f       	sbci	r21, 0xFF	; 255
     5f6:	6f 4f       	sbci	r22, 0xFF	; 255
     5f8:	7f 4f       	sbci	r23, 0xFF	; 255
     5fa:	40 78       	andi	r20, 0x80	; 128
     5fc:	1a 8e       	std	Y+26, r1	; 0x1a
     5fe:	fe 17       	cp	r31, r30
     600:	11 f0       	breq	.+4      	; 0x606 <__mulsf3+0x1d8>
     602:	81 e0       	ldi	r24, 0x01	; 1
     604:	8a 8f       	std	Y+26, r24	; 0x1a
     606:	4d 8f       	std	Y+29, r20	; 0x1d
     608:	5e 8f       	std	Y+30, r21	; 0x1e
     60a:	6f 8f       	std	Y+31, r22	; 0x1f
     60c:	78 a3       	std	Y+32, r23	; 0x20
     60e:	83 e0       	ldi	r24, 0x03	; 3
     610:	89 8f       	std	Y+25, r24	; 0x19
     612:	ce 01       	movw	r24, r28
     614:	49 96       	adiw	r24, 0x19	; 25
     616:	0e 94 f5 03 	call	0x7ea	; 0x7ea <__pack_f>
     61a:	a0 96       	adiw	r28, 0x20	; 32
     61c:	e2 e1       	ldi	r30, 0x12	; 18
     61e:	0c 94 ff 2b 	jmp	0x57fe	; 0x57fe <__epilogue_restores__>

00000622 <__gtsf2>:
     622:	a8 e1       	ldi	r26, 0x18	; 24
     624:	b0 e0       	ldi	r27, 0x00	; 0
     626:	e7 e1       	ldi	r30, 0x17	; 23
     628:	f3 e0       	ldi	r31, 0x03	; 3
     62a:	0c 94 ef 2b 	jmp	0x57de	; 0x57de <__prologue_saves__+0x18>
     62e:	69 83       	std	Y+1, r22	; 0x01
     630:	7a 83       	std	Y+2, r23	; 0x02
     632:	8b 83       	std	Y+3, r24	; 0x03
     634:	9c 83       	std	Y+4, r25	; 0x04
     636:	2d 83       	std	Y+5, r18	; 0x05
     638:	3e 83       	std	Y+6, r19	; 0x06
     63a:	4f 83       	std	Y+7, r20	; 0x07
     63c:	58 87       	std	Y+8, r21	; 0x08
     63e:	89 e0       	ldi	r24, 0x09	; 9
     640:	e8 2e       	mov	r14, r24
     642:	f1 2c       	mov	r15, r1
     644:	ec 0e       	add	r14, r28
     646:	fd 1e       	adc	r15, r29
     648:	ce 01       	movw	r24, r28
     64a:	01 96       	adiw	r24, 0x01	; 1
     64c:	b7 01       	movw	r22, r14
     64e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     652:	8e 01       	movw	r16, r28
     654:	0f 5e       	subi	r16, 0xEF	; 239
     656:	1f 4f       	sbci	r17, 0xFF	; 255
     658:	ce 01       	movw	r24, r28
     65a:	05 96       	adiw	r24, 0x05	; 5
     65c:	b8 01       	movw	r22, r16
     65e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     662:	89 85       	ldd	r24, Y+9	; 0x09
     664:	82 30       	cpi	r24, 0x02	; 2
     666:	40 f0       	brcs	.+16     	; 0x678 <__gtsf2+0x56>
     668:	89 89       	ldd	r24, Y+17	; 0x11
     66a:	82 30       	cpi	r24, 0x02	; 2
     66c:	28 f0       	brcs	.+10     	; 0x678 <__gtsf2+0x56>
     66e:	c7 01       	movw	r24, r14
     670:	b8 01       	movw	r22, r16
     672:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     676:	01 c0       	rjmp	.+2      	; 0x67a <__gtsf2+0x58>
     678:	8f ef       	ldi	r24, 0xFF	; 255
     67a:	68 96       	adiw	r28, 0x18	; 24
     67c:	e6 e0       	ldi	r30, 0x06	; 6
     67e:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__epilogue_restores__+0x18>

00000682 <__gesf2>:
     682:	a8 e1       	ldi	r26, 0x18	; 24
     684:	b0 e0       	ldi	r27, 0x00	; 0
     686:	e7 e4       	ldi	r30, 0x47	; 71
     688:	f3 e0       	ldi	r31, 0x03	; 3
     68a:	0c 94 ef 2b 	jmp	0x57de	; 0x57de <__prologue_saves__+0x18>
     68e:	69 83       	std	Y+1, r22	; 0x01
     690:	7a 83       	std	Y+2, r23	; 0x02
     692:	8b 83       	std	Y+3, r24	; 0x03
     694:	9c 83       	std	Y+4, r25	; 0x04
     696:	2d 83       	std	Y+5, r18	; 0x05
     698:	3e 83       	std	Y+6, r19	; 0x06
     69a:	4f 83       	std	Y+7, r20	; 0x07
     69c:	58 87       	std	Y+8, r21	; 0x08
     69e:	89 e0       	ldi	r24, 0x09	; 9
     6a0:	e8 2e       	mov	r14, r24
     6a2:	f1 2c       	mov	r15, r1
     6a4:	ec 0e       	add	r14, r28
     6a6:	fd 1e       	adc	r15, r29
     6a8:	ce 01       	movw	r24, r28
     6aa:	01 96       	adiw	r24, 0x01	; 1
     6ac:	b7 01       	movw	r22, r14
     6ae:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6b2:	8e 01       	movw	r16, r28
     6b4:	0f 5e       	subi	r16, 0xEF	; 239
     6b6:	1f 4f       	sbci	r17, 0xFF	; 255
     6b8:	ce 01       	movw	r24, r28
     6ba:	05 96       	adiw	r24, 0x05	; 5
     6bc:	b8 01       	movw	r22, r16
     6be:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     6c2:	89 85       	ldd	r24, Y+9	; 0x09
     6c4:	82 30       	cpi	r24, 0x02	; 2
     6c6:	40 f0       	brcs	.+16     	; 0x6d8 <__gesf2+0x56>
     6c8:	89 89       	ldd	r24, Y+17	; 0x11
     6ca:	82 30       	cpi	r24, 0x02	; 2
     6cc:	28 f0       	brcs	.+10     	; 0x6d8 <__gesf2+0x56>
     6ce:	c7 01       	movw	r24, r14
     6d0:	b8 01       	movw	r22, r16
     6d2:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     6d6:	01 c0       	rjmp	.+2      	; 0x6da <__gesf2+0x58>
     6d8:	8f ef       	ldi	r24, 0xFF	; 255
     6da:	68 96       	adiw	r28, 0x18	; 24
     6dc:	e6 e0       	ldi	r30, 0x06	; 6
     6de:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__epilogue_restores__+0x18>

000006e2 <__ltsf2>:
     6e2:	a8 e1       	ldi	r26, 0x18	; 24
     6e4:	b0 e0       	ldi	r27, 0x00	; 0
     6e6:	e7 e7       	ldi	r30, 0x77	; 119
     6e8:	f3 e0       	ldi	r31, 0x03	; 3
     6ea:	0c 94 ef 2b 	jmp	0x57de	; 0x57de <__prologue_saves__+0x18>
     6ee:	69 83       	std	Y+1, r22	; 0x01
     6f0:	7a 83       	std	Y+2, r23	; 0x02
     6f2:	8b 83       	std	Y+3, r24	; 0x03
     6f4:	9c 83       	std	Y+4, r25	; 0x04
     6f6:	2d 83       	std	Y+5, r18	; 0x05
     6f8:	3e 83       	std	Y+6, r19	; 0x06
     6fa:	4f 83       	std	Y+7, r20	; 0x07
     6fc:	58 87       	std	Y+8, r21	; 0x08
     6fe:	89 e0       	ldi	r24, 0x09	; 9
     700:	e8 2e       	mov	r14, r24
     702:	f1 2c       	mov	r15, r1
     704:	ec 0e       	add	r14, r28
     706:	fd 1e       	adc	r15, r29
     708:	ce 01       	movw	r24, r28
     70a:	01 96       	adiw	r24, 0x01	; 1
     70c:	b7 01       	movw	r22, r14
     70e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     712:	8e 01       	movw	r16, r28
     714:	0f 5e       	subi	r16, 0xEF	; 239
     716:	1f 4f       	sbci	r17, 0xFF	; 255
     718:	ce 01       	movw	r24, r28
     71a:	05 96       	adiw	r24, 0x05	; 5
     71c:	b8 01       	movw	r22, r16
     71e:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     722:	89 85       	ldd	r24, Y+9	; 0x09
     724:	82 30       	cpi	r24, 0x02	; 2
     726:	40 f0       	brcs	.+16     	; 0x738 <__ltsf2+0x56>
     728:	89 89       	ldd	r24, Y+17	; 0x11
     72a:	82 30       	cpi	r24, 0x02	; 2
     72c:	28 f0       	brcs	.+10     	; 0x738 <__ltsf2+0x56>
     72e:	c7 01       	movw	r24, r14
     730:	b8 01       	movw	r22, r16
     732:	0e 94 42 05 	call	0xa84	; 0xa84 <__fpcmp_parts_f>
     736:	01 c0       	rjmp	.+2      	; 0x73a <__ltsf2+0x58>
     738:	81 e0       	ldi	r24, 0x01	; 1
     73a:	68 96       	adiw	r28, 0x18	; 24
     73c:	e6 e0       	ldi	r30, 0x06	; 6
     73e:	0c 94 0b 2c 	jmp	0x5816	; 0x5816 <__epilogue_restores__+0x18>

00000742 <__fixsfsi>:
     742:	ac e0       	ldi	r26, 0x0C	; 12
     744:	b0 e0       	ldi	r27, 0x00	; 0
     746:	e7 ea       	ldi	r30, 0xA7	; 167
     748:	f3 e0       	ldi	r31, 0x03	; 3
     74a:	0c 94 f3 2b 	jmp	0x57e6	; 0x57e6 <__prologue_saves__+0x20>
     74e:	69 83       	std	Y+1, r22	; 0x01
     750:	7a 83       	std	Y+2, r23	; 0x02
     752:	8b 83       	std	Y+3, r24	; 0x03
     754:	9c 83       	std	Y+4, r25	; 0x04
     756:	ce 01       	movw	r24, r28
     758:	01 96       	adiw	r24, 0x01	; 1
     75a:	be 01       	movw	r22, r28
     75c:	6b 5f       	subi	r22, 0xFB	; 251
     75e:	7f 4f       	sbci	r23, 0xFF	; 255
     760:	0e 94 ca 04 	call	0x994	; 0x994 <__unpack_f>
     764:	8d 81       	ldd	r24, Y+5	; 0x05
     766:	82 30       	cpi	r24, 0x02	; 2
     768:	61 f1       	breq	.+88     	; 0x7c2 <__fixsfsi+0x80>
     76a:	82 30       	cpi	r24, 0x02	; 2
     76c:	50 f1       	brcs	.+84     	; 0x7c2 <__fixsfsi+0x80>
     76e:	84 30       	cpi	r24, 0x04	; 4
     770:	21 f4       	brne	.+8      	; 0x77a <__fixsfsi+0x38>
     772:	8e 81       	ldd	r24, Y+6	; 0x06
     774:	88 23       	and	r24, r24
     776:	51 f1       	breq	.+84     	; 0x7cc <__fixsfsi+0x8a>
     778:	2e c0       	rjmp	.+92     	; 0x7d6 <__fixsfsi+0x94>
     77a:	2f 81       	ldd	r18, Y+7	; 0x07
     77c:	38 85       	ldd	r19, Y+8	; 0x08
     77e:	37 fd       	sbrc	r19, 7
     780:	20 c0       	rjmp	.+64     	; 0x7c2 <__fixsfsi+0x80>
     782:	6e 81       	ldd	r22, Y+6	; 0x06
     784:	2f 31       	cpi	r18, 0x1F	; 31
     786:	31 05       	cpc	r19, r1
     788:	1c f0       	brlt	.+6      	; 0x790 <__fixsfsi+0x4e>
     78a:	66 23       	and	r22, r22
     78c:	f9 f0       	breq	.+62     	; 0x7cc <__fixsfsi+0x8a>
     78e:	23 c0       	rjmp	.+70     	; 0x7d6 <__fixsfsi+0x94>
     790:	8e e1       	ldi	r24, 0x1E	; 30
     792:	90 e0       	ldi	r25, 0x00	; 0
     794:	82 1b       	sub	r24, r18
     796:	93 0b       	sbc	r25, r19
     798:	29 85       	ldd	r18, Y+9	; 0x09
     79a:	3a 85       	ldd	r19, Y+10	; 0x0a
     79c:	4b 85       	ldd	r20, Y+11	; 0x0b
     79e:	5c 85       	ldd	r21, Y+12	; 0x0c
     7a0:	04 c0       	rjmp	.+8      	; 0x7aa <__fixsfsi+0x68>
     7a2:	56 95       	lsr	r21
     7a4:	47 95       	ror	r20
     7a6:	37 95       	ror	r19
     7a8:	27 95       	ror	r18
     7aa:	8a 95       	dec	r24
     7ac:	d2 f7       	brpl	.-12     	; 0x7a2 <__fixsfsi+0x60>
     7ae:	66 23       	and	r22, r22
     7b0:	b1 f0       	breq	.+44     	; 0x7de <__fixsfsi+0x9c>
     7b2:	50 95       	com	r21
     7b4:	40 95       	com	r20
     7b6:	30 95       	com	r19
     7b8:	21 95       	neg	r18
     7ba:	3f 4f       	sbci	r19, 0xFF	; 255
     7bc:	4f 4f       	sbci	r20, 0xFF	; 255
     7be:	5f 4f       	sbci	r21, 0xFF	; 255
     7c0:	0e c0       	rjmp	.+28     	; 0x7de <__fixsfsi+0x9c>
     7c2:	20 e0       	ldi	r18, 0x00	; 0
     7c4:	30 e0       	ldi	r19, 0x00	; 0
     7c6:	40 e0       	ldi	r20, 0x00	; 0
     7c8:	50 e0       	ldi	r21, 0x00	; 0
     7ca:	09 c0       	rjmp	.+18     	; 0x7de <__fixsfsi+0x9c>
     7cc:	2f ef       	ldi	r18, 0xFF	; 255
     7ce:	3f ef       	ldi	r19, 0xFF	; 255
     7d0:	4f ef       	ldi	r20, 0xFF	; 255
     7d2:	5f e7       	ldi	r21, 0x7F	; 127
     7d4:	04 c0       	rjmp	.+8      	; 0x7de <__fixsfsi+0x9c>
     7d6:	20 e0       	ldi	r18, 0x00	; 0
     7d8:	30 e0       	ldi	r19, 0x00	; 0
     7da:	40 e0       	ldi	r20, 0x00	; 0
     7dc:	50 e8       	ldi	r21, 0x80	; 128
     7de:	b9 01       	movw	r22, r18
     7e0:	ca 01       	movw	r24, r20
     7e2:	2c 96       	adiw	r28, 0x0c	; 12
     7e4:	e2 e0       	ldi	r30, 0x02	; 2
     7e6:	0c 94 0f 2c 	jmp	0x581e	; 0x581e <__epilogue_restores__+0x20>

000007ea <__pack_f>:
     7ea:	df 92       	push	r13
     7ec:	ef 92       	push	r14
     7ee:	ff 92       	push	r15
     7f0:	0f 93       	push	r16
     7f2:	1f 93       	push	r17
     7f4:	fc 01       	movw	r30, r24
     7f6:	e4 80       	ldd	r14, Z+4	; 0x04
     7f8:	f5 80       	ldd	r15, Z+5	; 0x05
     7fa:	06 81       	ldd	r16, Z+6	; 0x06
     7fc:	17 81       	ldd	r17, Z+7	; 0x07
     7fe:	d1 80       	ldd	r13, Z+1	; 0x01
     800:	80 81       	ld	r24, Z
     802:	82 30       	cpi	r24, 0x02	; 2
     804:	48 f4       	brcc	.+18     	; 0x818 <__pack_f+0x2e>
     806:	80 e0       	ldi	r24, 0x00	; 0
     808:	90 e0       	ldi	r25, 0x00	; 0
     80a:	a0 e1       	ldi	r26, 0x10	; 16
     80c:	b0 e0       	ldi	r27, 0x00	; 0
     80e:	e8 2a       	or	r14, r24
     810:	f9 2a       	or	r15, r25
     812:	0a 2b       	or	r16, r26
     814:	1b 2b       	or	r17, r27
     816:	a5 c0       	rjmp	.+330    	; 0x962 <__stack+0x103>
     818:	84 30       	cpi	r24, 0x04	; 4
     81a:	09 f4       	brne	.+2      	; 0x81e <__pack_f+0x34>
     81c:	9f c0       	rjmp	.+318    	; 0x95c <__stack+0xfd>
     81e:	82 30       	cpi	r24, 0x02	; 2
     820:	21 f4       	brne	.+8      	; 0x82a <__pack_f+0x40>
     822:	ee 24       	eor	r14, r14
     824:	ff 24       	eor	r15, r15
     826:	87 01       	movw	r16, r14
     828:	05 c0       	rjmp	.+10     	; 0x834 <__pack_f+0x4a>
     82a:	e1 14       	cp	r14, r1
     82c:	f1 04       	cpc	r15, r1
     82e:	01 05       	cpc	r16, r1
     830:	11 05       	cpc	r17, r1
     832:	19 f4       	brne	.+6      	; 0x83a <__pack_f+0x50>
     834:	e0 e0       	ldi	r30, 0x00	; 0
     836:	f0 e0       	ldi	r31, 0x00	; 0
     838:	96 c0       	rjmp	.+300    	; 0x966 <__stack+0x107>
     83a:	62 81       	ldd	r22, Z+2	; 0x02
     83c:	73 81       	ldd	r23, Z+3	; 0x03
     83e:	9f ef       	ldi	r25, 0xFF	; 255
     840:	62 38       	cpi	r22, 0x82	; 130
     842:	79 07       	cpc	r23, r25
     844:	0c f0       	brlt	.+2      	; 0x848 <__pack_f+0x5e>
     846:	5b c0       	rjmp	.+182    	; 0x8fe <__stack+0x9f>
     848:	22 e8       	ldi	r18, 0x82	; 130
     84a:	3f ef       	ldi	r19, 0xFF	; 255
     84c:	26 1b       	sub	r18, r22
     84e:	37 0b       	sbc	r19, r23
     850:	2a 31       	cpi	r18, 0x1A	; 26
     852:	31 05       	cpc	r19, r1
     854:	2c f0       	brlt	.+10     	; 0x860 <__stack+0x1>
     856:	20 e0       	ldi	r18, 0x00	; 0
     858:	30 e0       	ldi	r19, 0x00	; 0
     85a:	40 e0       	ldi	r20, 0x00	; 0
     85c:	50 e0       	ldi	r21, 0x00	; 0
     85e:	2a c0       	rjmp	.+84     	; 0x8b4 <__stack+0x55>
     860:	b8 01       	movw	r22, r16
     862:	a7 01       	movw	r20, r14
     864:	02 2e       	mov	r0, r18
     866:	04 c0       	rjmp	.+8      	; 0x870 <__stack+0x11>
     868:	76 95       	lsr	r23
     86a:	67 95       	ror	r22
     86c:	57 95       	ror	r21
     86e:	47 95       	ror	r20
     870:	0a 94       	dec	r0
     872:	d2 f7       	brpl	.-12     	; 0x868 <__stack+0x9>
     874:	81 e0       	ldi	r24, 0x01	; 1
     876:	90 e0       	ldi	r25, 0x00	; 0
     878:	a0 e0       	ldi	r26, 0x00	; 0
     87a:	b0 e0       	ldi	r27, 0x00	; 0
     87c:	04 c0       	rjmp	.+8      	; 0x886 <__stack+0x27>
     87e:	88 0f       	add	r24, r24
     880:	99 1f       	adc	r25, r25
     882:	aa 1f       	adc	r26, r26
     884:	bb 1f       	adc	r27, r27
     886:	2a 95       	dec	r18
     888:	d2 f7       	brpl	.-12     	; 0x87e <__stack+0x1f>
     88a:	01 97       	sbiw	r24, 0x01	; 1
     88c:	a1 09       	sbc	r26, r1
     88e:	b1 09       	sbc	r27, r1
     890:	8e 21       	and	r24, r14
     892:	9f 21       	and	r25, r15
     894:	a0 23       	and	r26, r16
     896:	b1 23       	and	r27, r17
     898:	00 97       	sbiw	r24, 0x00	; 0
     89a:	a1 05       	cpc	r26, r1
     89c:	b1 05       	cpc	r27, r1
     89e:	21 f0       	breq	.+8      	; 0x8a8 <__stack+0x49>
     8a0:	81 e0       	ldi	r24, 0x01	; 1
     8a2:	90 e0       	ldi	r25, 0x00	; 0
     8a4:	a0 e0       	ldi	r26, 0x00	; 0
     8a6:	b0 e0       	ldi	r27, 0x00	; 0
     8a8:	9a 01       	movw	r18, r20
     8aa:	ab 01       	movw	r20, r22
     8ac:	28 2b       	or	r18, r24
     8ae:	39 2b       	or	r19, r25
     8b0:	4a 2b       	or	r20, r26
     8b2:	5b 2b       	or	r21, r27
     8b4:	da 01       	movw	r26, r20
     8b6:	c9 01       	movw	r24, r18
     8b8:	8f 77       	andi	r24, 0x7F	; 127
     8ba:	90 70       	andi	r25, 0x00	; 0
     8bc:	a0 70       	andi	r26, 0x00	; 0
     8be:	b0 70       	andi	r27, 0x00	; 0
     8c0:	80 34       	cpi	r24, 0x40	; 64
     8c2:	91 05       	cpc	r25, r1
     8c4:	a1 05       	cpc	r26, r1
     8c6:	b1 05       	cpc	r27, r1
     8c8:	39 f4       	brne	.+14     	; 0x8d8 <__stack+0x79>
     8ca:	27 ff       	sbrs	r18, 7
     8cc:	09 c0       	rjmp	.+18     	; 0x8e0 <__stack+0x81>
     8ce:	20 5c       	subi	r18, 0xC0	; 192
     8d0:	3f 4f       	sbci	r19, 0xFF	; 255
     8d2:	4f 4f       	sbci	r20, 0xFF	; 255
     8d4:	5f 4f       	sbci	r21, 0xFF	; 255
     8d6:	04 c0       	rjmp	.+8      	; 0x8e0 <__stack+0x81>
     8d8:	21 5c       	subi	r18, 0xC1	; 193
     8da:	3f 4f       	sbci	r19, 0xFF	; 255
     8dc:	4f 4f       	sbci	r20, 0xFF	; 255
     8de:	5f 4f       	sbci	r21, 0xFF	; 255
     8e0:	e0 e0       	ldi	r30, 0x00	; 0
     8e2:	f0 e0       	ldi	r31, 0x00	; 0
     8e4:	20 30       	cpi	r18, 0x00	; 0
     8e6:	a0 e0       	ldi	r26, 0x00	; 0
     8e8:	3a 07       	cpc	r19, r26
     8ea:	a0 e0       	ldi	r26, 0x00	; 0
     8ec:	4a 07       	cpc	r20, r26
     8ee:	a0 e4       	ldi	r26, 0x40	; 64
     8f0:	5a 07       	cpc	r21, r26
     8f2:	10 f0       	brcs	.+4      	; 0x8f8 <__stack+0x99>
     8f4:	e1 e0       	ldi	r30, 0x01	; 1
     8f6:	f0 e0       	ldi	r31, 0x00	; 0
     8f8:	79 01       	movw	r14, r18
     8fa:	8a 01       	movw	r16, r20
     8fc:	27 c0       	rjmp	.+78     	; 0x94c <__stack+0xed>
     8fe:	60 38       	cpi	r22, 0x80	; 128
     900:	71 05       	cpc	r23, r1
     902:	64 f5       	brge	.+88     	; 0x95c <__stack+0xfd>
     904:	fb 01       	movw	r30, r22
     906:	e1 58       	subi	r30, 0x81	; 129
     908:	ff 4f       	sbci	r31, 0xFF	; 255
     90a:	d8 01       	movw	r26, r16
     90c:	c7 01       	movw	r24, r14
     90e:	8f 77       	andi	r24, 0x7F	; 127
     910:	90 70       	andi	r25, 0x00	; 0
     912:	a0 70       	andi	r26, 0x00	; 0
     914:	b0 70       	andi	r27, 0x00	; 0
     916:	80 34       	cpi	r24, 0x40	; 64
     918:	91 05       	cpc	r25, r1
     91a:	a1 05       	cpc	r26, r1
     91c:	b1 05       	cpc	r27, r1
     91e:	39 f4       	brne	.+14     	; 0x92e <__stack+0xcf>
     920:	e7 fe       	sbrs	r14, 7
     922:	0d c0       	rjmp	.+26     	; 0x93e <__stack+0xdf>
     924:	80 e4       	ldi	r24, 0x40	; 64
     926:	90 e0       	ldi	r25, 0x00	; 0
     928:	a0 e0       	ldi	r26, 0x00	; 0
     92a:	b0 e0       	ldi	r27, 0x00	; 0
     92c:	04 c0       	rjmp	.+8      	; 0x936 <__stack+0xd7>
     92e:	8f e3       	ldi	r24, 0x3F	; 63
     930:	90 e0       	ldi	r25, 0x00	; 0
     932:	a0 e0       	ldi	r26, 0x00	; 0
     934:	b0 e0       	ldi	r27, 0x00	; 0
     936:	e8 0e       	add	r14, r24
     938:	f9 1e       	adc	r15, r25
     93a:	0a 1f       	adc	r16, r26
     93c:	1b 1f       	adc	r17, r27
     93e:	17 ff       	sbrs	r17, 7
     940:	05 c0       	rjmp	.+10     	; 0x94c <__stack+0xed>
     942:	16 95       	lsr	r17
     944:	07 95       	ror	r16
     946:	f7 94       	ror	r15
     948:	e7 94       	ror	r14
     94a:	31 96       	adiw	r30, 0x01	; 1
     94c:	87 e0       	ldi	r24, 0x07	; 7
     94e:	16 95       	lsr	r17
     950:	07 95       	ror	r16
     952:	f7 94       	ror	r15
     954:	e7 94       	ror	r14
     956:	8a 95       	dec	r24
     958:	d1 f7       	brne	.-12     	; 0x94e <__stack+0xef>
     95a:	05 c0       	rjmp	.+10     	; 0x966 <__stack+0x107>
     95c:	ee 24       	eor	r14, r14
     95e:	ff 24       	eor	r15, r15
     960:	87 01       	movw	r16, r14
     962:	ef ef       	ldi	r30, 0xFF	; 255
     964:	f0 e0       	ldi	r31, 0x00	; 0
     966:	6e 2f       	mov	r22, r30
     968:	67 95       	ror	r22
     96a:	66 27       	eor	r22, r22
     96c:	67 95       	ror	r22
     96e:	90 2f       	mov	r25, r16
     970:	9f 77       	andi	r25, 0x7F	; 127
     972:	d7 94       	ror	r13
     974:	dd 24       	eor	r13, r13
     976:	d7 94       	ror	r13
     978:	8e 2f       	mov	r24, r30
     97a:	86 95       	lsr	r24
     97c:	49 2f       	mov	r20, r25
     97e:	46 2b       	or	r20, r22
     980:	58 2f       	mov	r21, r24
     982:	5d 29       	or	r21, r13
     984:	b7 01       	movw	r22, r14
     986:	ca 01       	movw	r24, r20
     988:	1f 91       	pop	r17
     98a:	0f 91       	pop	r16
     98c:	ff 90       	pop	r15
     98e:	ef 90       	pop	r14
     990:	df 90       	pop	r13
     992:	08 95       	ret

00000994 <__unpack_f>:
     994:	fc 01       	movw	r30, r24
     996:	db 01       	movw	r26, r22
     998:	40 81       	ld	r20, Z
     99a:	51 81       	ldd	r21, Z+1	; 0x01
     99c:	22 81       	ldd	r18, Z+2	; 0x02
     99e:	62 2f       	mov	r22, r18
     9a0:	6f 77       	andi	r22, 0x7F	; 127
     9a2:	70 e0       	ldi	r23, 0x00	; 0
     9a4:	22 1f       	adc	r18, r18
     9a6:	22 27       	eor	r18, r18
     9a8:	22 1f       	adc	r18, r18
     9aa:	93 81       	ldd	r25, Z+3	; 0x03
     9ac:	89 2f       	mov	r24, r25
     9ae:	88 0f       	add	r24, r24
     9b0:	82 2b       	or	r24, r18
     9b2:	28 2f       	mov	r18, r24
     9b4:	30 e0       	ldi	r19, 0x00	; 0
     9b6:	99 1f       	adc	r25, r25
     9b8:	99 27       	eor	r25, r25
     9ba:	99 1f       	adc	r25, r25
     9bc:	11 96       	adiw	r26, 0x01	; 1
     9be:	9c 93       	st	X, r25
     9c0:	11 97       	sbiw	r26, 0x01	; 1
     9c2:	21 15       	cp	r18, r1
     9c4:	31 05       	cpc	r19, r1
     9c6:	a9 f5       	brne	.+106    	; 0xa32 <__unpack_f+0x9e>
     9c8:	41 15       	cp	r20, r1
     9ca:	51 05       	cpc	r21, r1
     9cc:	61 05       	cpc	r22, r1
     9ce:	71 05       	cpc	r23, r1
     9d0:	11 f4       	brne	.+4      	; 0x9d6 <__unpack_f+0x42>
     9d2:	82 e0       	ldi	r24, 0x02	; 2
     9d4:	37 c0       	rjmp	.+110    	; 0xa44 <__unpack_f+0xb0>
     9d6:	82 e8       	ldi	r24, 0x82	; 130
     9d8:	9f ef       	ldi	r25, 0xFF	; 255
     9da:	13 96       	adiw	r26, 0x03	; 3
     9dc:	9c 93       	st	X, r25
     9de:	8e 93       	st	-X, r24
     9e0:	12 97       	sbiw	r26, 0x02	; 2
     9e2:	9a 01       	movw	r18, r20
     9e4:	ab 01       	movw	r20, r22
     9e6:	67 e0       	ldi	r22, 0x07	; 7
     9e8:	22 0f       	add	r18, r18
     9ea:	33 1f       	adc	r19, r19
     9ec:	44 1f       	adc	r20, r20
     9ee:	55 1f       	adc	r21, r21
     9f0:	6a 95       	dec	r22
     9f2:	d1 f7       	brne	.-12     	; 0x9e8 <__unpack_f+0x54>
     9f4:	83 e0       	ldi	r24, 0x03	; 3
     9f6:	8c 93       	st	X, r24
     9f8:	0d c0       	rjmp	.+26     	; 0xa14 <__unpack_f+0x80>
     9fa:	22 0f       	add	r18, r18
     9fc:	33 1f       	adc	r19, r19
     9fe:	44 1f       	adc	r20, r20
     a00:	55 1f       	adc	r21, r21
     a02:	12 96       	adiw	r26, 0x02	; 2
     a04:	8d 91       	ld	r24, X+
     a06:	9c 91       	ld	r25, X
     a08:	13 97       	sbiw	r26, 0x03	; 3
     a0a:	01 97       	sbiw	r24, 0x01	; 1
     a0c:	13 96       	adiw	r26, 0x03	; 3
     a0e:	9c 93       	st	X, r25
     a10:	8e 93       	st	-X, r24
     a12:	12 97       	sbiw	r26, 0x02	; 2
     a14:	20 30       	cpi	r18, 0x00	; 0
     a16:	80 e0       	ldi	r24, 0x00	; 0
     a18:	38 07       	cpc	r19, r24
     a1a:	80 e0       	ldi	r24, 0x00	; 0
     a1c:	48 07       	cpc	r20, r24
     a1e:	80 e4       	ldi	r24, 0x40	; 64
     a20:	58 07       	cpc	r21, r24
     a22:	58 f3       	brcs	.-42     	; 0x9fa <__unpack_f+0x66>
     a24:	14 96       	adiw	r26, 0x04	; 4
     a26:	2d 93       	st	X+, r18
     a28:	3d 93       	st	X+, r19
     a2a:	4d 93       	st	X+, r20
     a2c:	5c 93       	st	X, r21
     a2e:	17 97       	sbiw	r26, 0x07	; 7
     a30:	08 95       	ret
     a32:	2f 3f       	cpi	r18, 0xFF	; 255
     a34:	31 05       	cpc	r19, r1
     a36:	79 f4       	brne	.+30     	; 0xa56 <__unpack_f+0xc2>
     a38:	41 15       	cp	r20, r1
     a3a:	51 05       	cpc	r21, r1
     a3c:	61 05       	cpc	r22, r1
     a3e:	71 05       	cpc	r23, r1
     a40:	19 f4       	brne	.+6      	; 0xa48 <__unpack_f+0xb4>
     a42:	84 e0       	ldi	r24, 0x04	; 4
     a44:	8c 93       	st	X, r24
     a46:	08 95       	ret
     a48:	64 ff       	sbrs	r22, 4
     a4a:	03 c0       	rjmp	.+6      	; 0xa52 <__unpack_f+0xbe>
     a4c:	81 e0       	ldi	r24, 0x01	; 1
     a4e:	8c 93       	st	X, r24
     a50:	12 c0       	rjmp	.+36     	; 0xa76 <__unpack_f+0xe2>
     a52:	1c 92       	st	X, r1
     a54:	10 c0       	rjmp	.+32     	; 0xa76 <__unpack_f+0xe2>
     a56:	2f 57       	subi	r18, 0x7F	; 127
     a58:	30 40       	sbci	r19, 0x00	; 0
     a5a:	13 96       	adiw	r26, 0x03	; 3
     a5c:	3c 93       	st	X, r19
     a5e:	2e 93       	st	-X, r18
     a60:	12 97       	sbiw	r26, 0x02	; 2
     a62:	83 e0       	ldi	r24, 0x03	; 3
     a64:	8c 93       	st	X, r24
     a66:	87 e0       	ldi	r24, 0x07	; 7
     a68:	44 0f       	add	r20, r20
     a6a:	55 1f       	adc	r21, r21
     a6c:	66 1f       	adc	r22, r22
     a6e:	77 1f       	adc	r23, r23
     a70:	8a 95       	dec	r24
     a72:	d1 f7       	brne	.-12     	; 0xa68 <__unpack_f+0xd4>
     a74:	70 64       	ori	r23, 0x40	; 64
     a76:	14 96       	adiw	r26, 0x04	; 4
     a78:	4d 93       	st	X+, r20
     a7a:	5d 93       	st	X+, r21
     a7c:	6d 93       	st	X+, r22
     a7e:	7c 93       	st	X, r23
     a80:	17 97       	sbiw	r26, 0x07	; 7
     a82:	08 95       	ret

00000a84 <__fpcmp_parts_f>:
     a84:	1f 93       	push	r17
     a86:	dc 01       	movw	r26, r24
     a88:	fb 01       	movw	r30, r22
     a8a:	9c 91       	ld	r25, X
     a8c:	92 30       	cpi	r25, 0x02	; 2
     a8e:	08 f4       	brcc	.+2      	; 0xa92 <__fpcmp_parts_f+0xe>
     a90:	47 c0       	rjmp	.+142    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a92:	80 81       	ld	r24, Z
     a94:	82 30       	cpi	r24, 0x02	; 2
     a96:	08 f4       	brcc	.+2      	; 0xa9a <__fpcmp_parts_f+0x16>
     a98:	43 c0       	rjmp	.+134    	; 0xb20 <__fpcmp_parts_f+0x9c>
     a9a:	94 30       	cpi	r25, 0x04	; 4
     a9c:	51 f4       	brne	.+20     	; 0xab2 <__fpcmp_parts_f+0x2e>
     a9e:	11 96       	adiw	r26, 0x01	; 1
     aa0:	1c 91       	ld	r17, X
     aa2:	84 30       	cpi	r24, 0x04	; 4
     aa4:	99 f5       	brne	.+102    	; 0xb0c <__fpcmp_parts_f+0x88>
     aa6:	81 81       	ldd	r24, Z+1	; 0x01
     aa8:	68 2f       	mov	r22, r24
     aaa:	70 e0       	ldi	r23, 0x00	; 0
     aac:	61 1b       	sub	r22, r17
     aae:	71 09       	sbc	r23, r1
     ab0:	3f c0       	rjmp	.+126    	; 0xb30 <__fpcmp_parts_f+0xac>
     ab2:	84 30       	cpi	r24, 0x04	; 4
     ab4:	21 f0       	breq	.+8      	; 0xabe <__fpcmp_parts_f+0x3a>
     ab6:	92 30       	cpi	r25, 0x02	; 2
     ab8:	31 f4       	brne	.+12     	; 0xac6 <__fpcmp_parts_f+0x42>
     aba:	82 30       	cpi	r24, 0x02	; 2
     abc:	b9 f1       	breq	.+110    	; 0xb2c <__fpcmp_parts_f+0xa8>
     abe:	81 81       	ldd	r24, Z+1	; 0x01
     ac0:	88 23       	and	r24, r24
     ac2:	89 f1       	breq	.+98     	; 0xb26 <__fpcmp_parts_f+0xa2>
     ac4:	2d c0       	rjmp	.+90     	; 0xb20 <__fpcmp_parts_f+0x9c>
     ac6:	11 96       	adiw	r26, 0x01	; 1
     ac8:	1c 91       	ld	r17, X
     aca:	11 97       	sbiw	r26, 0x01	; 1
     acc:	82 30       	cpi	r24, 0x02	; 2
     ace:	f1 f0       	breq	.+60     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad0:	81 81       	ldd	r24, Z+1	; 0x01
     ad2:	18 17       	cp	r17, r24
     ad4:	d9 f4       	brne	.+54     	; 0xb0c <__fpcmp_parts_f+0x88>
     ad6:	12 96       	adiw	r26, 0x02	; 2
     ad8:	2d 91       	ld	r18, X+
     ada:	3c 91       	ld	r19, X
     adc:	13 97       	sbiw	r26, 0x03	; 3
     ade:	82 81       	ldd	r24, Z+2	; 0x02
     ae0:	93 81       	ldd	r25, Z+3	; 0x03
     ae2:	82 17       	cp	r24, r18
     ae4:	93 07       	cpc	r25, r19
     ae6:	94 f0       	brlt	.+36     	; 0xb0c <__fpcmp_parts_f+0x88>
     ae8:	28 17       	cp	r18, r24
     aea:	39 07       	cpc	r19, r25
     aec:	bc f0       	brlt	.+46     	; 0xb1c <__fpcmp_parts_f+0x98>
     aee:	14 96       	adiw	r26, 0x04	; 4
     af0:	8d 91       	ld	r24, X+
     af2:	9d 91       	ld	r25, X+
     af4:	0d 90       	ld	r0, X+
     af6:	bc 91       	ld	r27, X
     af8:	a0 2d       	mov	r26, r0
     afa:	24 81       	ldd	r18, Z+4	; 0x04
     afc:	35 81       	ldd	r19, Z+5	; 0x05
     afe:	46 81       	ldd	r20, Z+6	; 0x06
     b00:	57 81       	ldd	r21, Z+7	; 0x07
     b02:	28 17       	cp	r18, r24
     b04:	39 07       	cpc	r19, r25
     b06:	4a 07       	cpc	r20, r26
     b08:	5b 07       	cpc	r21, r27
     b0a:	18 f4       	brcc	.+6      	; 0xb12 <__fpcmp_parts_f+0x8e>
     b0c:	11 23       	and	r17, r17
     b0e:	41 f0       	breq	.+16     	; 0xb20 <__fpcmp_parts_f+0x9c>
     b10:	0a c0       	rjmp	.+20     	; 0xb26 <__fpcmp_parts_f+0xa2>
     b12:	82 17       	cp	r24, r18
     b14:	93 07       	cpc	r25, r19
     b16:	a4 07       	cpc	r26, r20
     b18:	b5 07       	cpc	r27, r21
     b1a:	40 f4       	brcc	.+16     	; 0xb2c <__fpcmp_parts_f+0xa8>
     b1c:	11 23       	and	r17, r17
     b1e:	19 f0       	breq	.+6      	; 0xb26 <__fpcmp_parts_f+0xa2>
     b20:	61 e0       	ldi	r22, 0x01	; 1
     b22:	70 e0       	ldi	r23, 0x00	; 0
     b24:	05 c0       	rjmp	.+10     	; 0xb30 <__fpcmp_parts_f+0xac>
     b26:	6f ef       	ldi	r22, 0xFF	; 255
     b28:	7f ef       	ldi	r23, 0xFF	; 255
     b2a:	02 c0       	rjmp	.+4      	; 0xb30 <__fpcmp_parts_f+0xac>
     b2c:	60 e0       	ldi	r22, 0x00	; 0
     b2e:	70 e0       	ldi	r23, 0x00	; 0
     b30:	cb 01       	movw	r24, r22
     b32:	1f 91       	pop	r17
     b34:	08 95       	ret

00000b36 <main>:

/*******************************************************************************
 *                             main function                                   *
 *******************************************************************************/
int main(void)
{
     b36:	0f 93       	push	r16
     b38:	1f 93       	push	r17
     b3a:	df 93       	push	r29
     b3c:	cf 93       	push	r28
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	c2 56       	subi	r28, 0x62	; 98
     b44:	d1 40       	sbci	r29, 0x01	; 1
     b46:	0f b6       	in	r0, 0x3f	; 63
     b48:	f8 94       	cli
     b4a:	de bf       	out	0x3e, r29	; 62
     b4c:	0f be       	out	0x3f, r0	; 63
     b4e:	cd bf       	out	0x3d, r28	; 61
	unsigned char state = START_MENU;
     b50:	fe 01       	movw	r30, r28
     b52:	e0 5a       	subi	r30, 0xA0	; 160
     b54:	fe 4f       	sbci	r31, 0xFE	; 254
     b56:	10 82       	st	Z, r1
	unsigned char user_input = 0;
     b58:	fe 01       	movw	r30, r28
     b5a:	e1 5a       	subi	r30, 0xA1	; 161
     b5c:	fe 4f       	sbci	r31, 0xFE	; 254
     b5e:	10 82       	st	Z, r1

	// Initialize LEDs
	SET_BIT(DDRC,0);
     b60:	a4 e3       	ldi	r26, 0x34	; 52
     b62:	b0 e0       	ldi	r27, 0x00	; 0
     b64:	e4 e3       	ldi	r30, 0x34	; 52
     b66:	f0 e0       	ldi	r31, 0x00	; 0
     b68:	80 81       	ld	r24, Z
     b6a:	81 60       	ori	r24, 0x01	; 1
     b6c:	8c 93       	st	X, r24
	SET_BIT(DDRC,1);
     b6e:	a4 e3       	ldi	r26, 0x34	; 52
     b70:	b0 e0       	ldi	r27, 0x00	; 0
     b72:	e4 e3       	ldi	r30, 0x34	; 52
     b74:	f0 e0       	ldi	r31, 0x00	; 0
     b76:	80 81       	ld	r24, Z
     b78:	82 60       	ori	r24, 0x02	; 2
     b7a:	8c 93       	st	X, r24
	SET_BIT(DDRC,2);
     b7c:	a4 e3       	ldi	r26, 0x34	; 52
     b7e:	b0 e0       	ldi	r27, 0x00	; 0
     b80:	e4 e3       	ldi	r30, 0x34	; 52
     b82:	f0 e0       	ldi	r31, 0x00	; 0
     b84:	80 81       	ld	r24, Z
     b86:	84 60       	ori	r24, 0x04	; 4
     b88:	8c 93       	st	X, r24
	CLR_BIT(PORTC,0);
     b8a:	a5 e3       	ldi	r26, 0x35	; 53
     b8c:	b0 e0       	ldi	r27, 0x00	; 0
     b8e:	e5 e3       	ldi	r30, 0x35	; 53
     b90:	f0 e0       	ldi	r31, 0x00	; 0
     b92:	80 81       	ld	r24, Z
     b94:	8e 7f       	andi	r24, 0xFE	; 254
     b96:	8c 93       	st	X, r24
	CLR_BIT(PORTC,1);
     b98:	a5 e3       	ldi	r26, 0x35	; 53
     b9a:	b0 e0       	ldi	r27, 0x00	; 0
     b9c:	e5 e3       	ldi	r30, 0x35	; 53
     b9e:	f0 e0       	ldi	r31, 0x00	; 0
     ba0:	80 81       	ld	r24, Z
     ba2:	8d 7f       	andi	r24, 0xFD	; 253
     ba4:	8c 93       	st	X, r24
	CLR_BIT(PORTC,2);
     ba6:	a5 e3       	ldi	r26, 0x35	; 53
     ba8:	b0 e0       	ldi	r27, 0x00	; 0
     baa:	e5 e3       	ldi	r30, 0x35	; 53
     bac:	f0 e0       	ldi	r31, 0x00	; 0
     bae:	80 81       	ld	r24, Z
     bb0:	8b 7f       	andi	r24, 0xFB	; 251
     bb2:	8c 93       	st	X, r24

	// Initialize LCD
	LCD_init();
     bb4:	0e 94 fa 1f 	call	0x3ff4	; 0x3ff4 <LCD_init>

	while (1) {
		switch (state) {
     bb8:	fe 01       	movw	r30, r28
     bba:	e0 5a       	subi	r30, 0xA0	; 160
     bbc:	fe 4f       	sbci	r31, 0xFE	; 254
     bbe:	80 81       	ld	r24, Z
     bc0:	28 2f       	mov	r18, r24
     bc2:	30 e0       	ldi	r19, 0x00	; 0
     bc4:	cf 59       	subi	r28, 0x9F	; 159
     bc6:	de 4f       	sbci	r29, 0xFE	; 254
     bc8:	39 83       	std	Y+1, r19	; 0x01
     bca:	28 83       	st	Y, r18
     bcc:	c1 56       	subi	r28, 0x61	; 97
     bce:	d1 40       	sbci	r29, 0x01	; 1
     bd0:	cf 59       	subi	r28, 0x9F	; 159
     bd2:	de 4f       	sbci	r29, 0xFE	; 254
     bd4:	88 81       	ld	r24, Y
     bd6:	99 81       	ldd	r25, Y+1	; 0x01
     bd8:	c1 56       	subi	r28, 0x61	; 97
     bda:	d1 40       	sbci	r29, 0x01	; 1
     bdc:	82 30       	cpi	r24, 0x02	; 2
     bde:	91 05       	cpc	r25, r1
     be0:	09 f4       	brne	.+2      	; 0xbe4 <main+0xae>
     be2:	24 c5       	rjmp	.+2632   	; 0x162c <main+0xaf6>
     be4:	cf 59       	subi	r28, 0x9F	; 159
     be6:	de 4f       	sbci	r29, 0xFE	; 254
     be8:	e8 81       	ld	r30, Y
     bea:	f9 81       	ldd	r31, Y+1	; 0x01
     bec:	c1 56       	subi	r28, 0x61	; 97
     bee:	d1 40       	sbci	r29, 0x01	; 1
     bf0:	e3 30       	cpi	r30, 0x03	; 3
     bf2:	f1 05       	cpc	r31, r1
     bf4:	ac f4       	brge	.+42     	; 0xc20 <main+0xea>
     bf6:	cf 59       	subi	r28, 0x9F	; 159
     bf8:	de 4f       	sbci	r29, 0xFE	; 254
     bfa:	28 81       	ld	r18, Y
     bfc:	39 81       	ldd	r19, Y+1	; 0x01
     bfe:	c1 56       	subi	r28, 0x61	; 97
     c00:	d1 40       	sbci	r29, 0x01	; 1
     c02:	21 15       	cp	r18, r1
     c04:	31 05       	cpc	r19, r1
     c06:	79 f1       	breq	.+94     	; 0xc66 <main+0x130>
     c08:	cf 59       	subi	r28, 0x9F	; 159
     c0a:	de 4f       	sbci	r29, 0xFE	; 254
     c0c:	88 81       	ld	r24, Y
     c0e:	99 81       	ldd	r25, Y+1	; 0x01
     c10:	c1 56       	subi	r28, 0x61	; 97
     c12:	d1 40       	sbci	r29, 0x01	; 1
     c14:	81 30       	cpi	r24, 0x01	; 1
     c16:	91 05       	cpc	r25, r1
     c18:	09 f4       	brne	.+2      	; 0xc1c <main+0xe6>
     c1a:	01 c5       	rjmp	.+2562   	; 0x161e <main+0xae8>
     c1c:	0c 94 47 18 	jmp	0x308e	; 0x308e <main+0x2558>
     c20:	cf 59       	subi	r28, 0x9F	; 159
     c22:	de 4f       	sbci	r29, 0xFE	; 254
     c24:	e8 81       	ld	r30, Y
     c26:	f9 81       	ldd	r31, Y+1	; 0x01
     c28:	c1 56       	subi	r28, 0x61	; 97
     c2a:	d1 40       	sbci	r29, 0x01	; 1
     c2c:	e4 30       	cpi	r30, 0x04	; 4
     c2e:	f1 05       	cpc	r31, r1
     c30:	11 f4       	brne	.+4      	; 0xc36 <main+0x100>
     c32:	0c 94 82 12 	jmp	0x2504	; 0x2504 <main+0x19ce>
     c36:	cf 59       	subi	r28, 0x9F	; 159
     c38:	de 4f       	sbci	r29, 0xFE	; 254
     c3a:	28 81       	ld	r18, Y
     c3c:	39 81       	ldd	r19, Y+1	; 0x01
     c3e:	c1 56       	subi	r28, 0x61	; 97
     c40:	d1 40       	sbci	r29, 0x01	; 1
     c42:	24 30       	cpi	r18, 0x04	; 4
     c44:	31 05       	cpc	r19, r1
     c46:	14 f4       	brge	.+4      	; 0xc4c <main+0x116>
     c48:	0c 94 cc 0e 	jmp	0x1d98	; 0x1d98 <main+0x1262>
     c4c:	cf 59       	subi	r28, 0x9F	; 159
     c4e:	de 4f       	sbci	r29, 0xFE	; 254
     c50:	88 81       	ld	r24, Y
     c52:	99 81       	ldd	r25, Y+1	; 0x01
     c54:	c1 56       	subi	r28, 0x61	; 97
     c56:	d1 40       	sbci	r29, 0x01	; 1
     c58:	85 30       	cpi	r24, 0x05	; 5
     c5a:	91 05       	cpc	r25, r1
     c5c:	11 f4       	brne	.+4      	; 0xc62 <main+0x12c>
     c5e:	0c 94 34 16 	jmp	0x2c68	; 0x2c68 <main+0x2132>
     c62:	0c 94 47 18 	jmp	0x308e	; 0x308e <main+0x2558>
			case START_MENU:
				LCD_displayString("Start Engine (1)");
     c66:	80 e6       	ldi	r24, 0x60	; 96
     c68:	90 e0       	ldi	r25, 0x00	; 0
     c6a:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
				user_input = KEYPAD_getPressedKey();
     c6e:	0e 94 8e 29 	call	0x531c	; 0x531c <KEYPAD_getPressedKey>
     c72:	fe 01       	movw	r30, r28
     c74:	e1 5a       	subi	r30, 0xA1	; 161
     c76:	fe 4f       	sbci	r31, 0xFE	; 254
     c78:	80 83       	st	Z, r24
				if (user_input == 1) {
     c7a:	fe 01       	movw	r30, r28
     c7c:	e1 5a       	subi	r30, 0xA1	; 161
     c7e:	fe 4f       	sbci	r31, 0xFE	; 254
     c80:	80 81       	ld	r24, Z
     c82:	81 30       	cpi	r24, 0x01	; 1
     c84:	09 f0       	breq	.+2      	; 0xc88 <main+0x152>
     c86:	0b c4       	rjmp	.+2070   	; 0x149e <main+0x968>
					LCD_clearScreen();
     c88:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					LCD_displayString("Engine ON");
     c8c:	81 e7       	ldi	r24, 0x71	; 113
     c8e:	90 e0       	ldi	r25, 0x00	; 0
     c90:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
					SET_BIT(PORTC,0);
     c94:	a5 e3       	ldi	r26, 0x35	; 53
     c96:	b0 e0       	ldi	r27, 0x00	; 0
     c98:	e5 e3       	ldi	r30, 0x35	; 53
     c9a:	f0 e0       	ldi	r31, 0x00	; 0
     c9c:	80 81       	ld	r24, Z
     c9e:	81 60       	ori	r24, 0x01	; 1
     ca0:	8c 93       	st	X, r24
					SET_BIT(PORTC,1);
     ca2:	a5 e3       	ldi	r26, 0x35	; 53
     ca4:	b0 e0       	ldi	r27, 0x00	; 0
     ca6:	e5 e3       	ldi	r30, 0x35	; 53
     ca8:	f0 e0       	ldi	r31, 0x00	; 0
     caa:	80 81       	ld	r24, Z
     cac:	82 60       	ori	r24, 0x02	; 2
     cae:	8c 93       	st	X, r24
					SET_BIT(PORTC,2);
     cb0:	a5 e3       	ldi	r26, 0x35	; 53
     cb2:	b0 e0       	ldi	r27, 0x00	; 0
     cb4:	e5 e3       	ldi	r30, 0x35	; 53
     cb6:	f0 e0       	ldi	r31, 0x00	; 0
     cb8:	80 81       	ld	r24, Z
     cba:	84 60       	ori	r24, 0x04	; 4
     cbc:	8c 93       	st	X, r24
     cbe:	fe 01       	movw	r30, r28
     cc0:	e5 5a       	subi	r30, 0xA5	; 165
     cc2:	fe 4f       	sbci	r31, 0xFE	; 254
     cc4:	80 e0       	ldi	r24, 0x00	; 0
     cc6:	90 e0       	ldi	r25, 0x00	; 0
     cc8:	a6 e9       	ldi	r26, 0x96	; 150
     cca:	b3 e4       	ldi	r27, 0x43	; 67
     ccc:	80 83       	st	Z, r24
     cce:	91 83       	std	Z+1, r25	; 0x01
     cd0:	a2 83       	std	Z+2, r26	; 0x02
     cd2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     cd4:	8e 01       	movw	r16, r28
     cd6:	09 5a       	subi	r16, 0xA9	; 169
     cd8:	1e 4f       	sbci	r17, 0xFE	; 254
     cda:	fe 01       	movw	r30, r28
     cdc:	e5 5a       	subi	r30, 0xA5	; 165
     cde:	fe 4f       	sbci	r31, 0xFE	; 254
     ce0:	60 81       	ld	r22, Z
     ce2:	71 81       	ldd	r23, Z+1	; 0x01
     ce4:	82 81       	ldd	r24, Z+2	; 0x02
     ce6:	93 81       	ldd	r25, Z+3	; 0x03
     ce8:	20 e0       	ldi	r18, 0x00	; 0
     cea:	30 e0       	ldi	r19, 0x00	; 0
     cec:	4a e7       	ldi	r20, 0x7A	; 122
     cee:	55 e4       	ldi	r21, 0x45	; 69
     cf0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     cf4:	dc 01       	movw	r26, r24
     cf6:	cb 01       	movw	r24, r22
     cf8:	f8 01       	movw	r30, r16
     cfa:	80 83       	st	Z, r24
     cfc:	91 83       	std	Z+1, r25	; 0x01
     cfe:	a2 83       	std	Z+2, r26	; 0x02
     d00:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     d02:	fe 01       	movw	r30, r28
     d04:	e9 5a       	subi	r30, 0xA9	; 169
     d06:	fe 4f       	sbci	r31, 0xFE	; 254
     d08:	60 81       	ld	r22, Z
     d0a:	71 81       	ldd	r23, Z+1	; 0x01
     d0c:	82 81       	ldd	r24, Z+2	; 0x02
     d0e:	93 81       	ldd	r25, Z+3	; 0x03
     d10:	20 e0       	ldi	r18, 0x00	; 0
     d12:	30 e0       	ldi	r19, 0x00	; 0
     d14:	40 e8       	ldi	r20, 0x80	; 128
     d16:	5f e3       	ldi	r21, 0x3F	; 63
     d18:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     d1c:	88 23       	and	r24, r24
     d1e:	44 f4       	brge	.+16     	; 0xd30 <main+0x1fa>
		__ticks = 1;
     d20:	fe 01       	movw	r30, r28
     d22:	eb 5a       	subi	r30, 0xAB	; 171
     d24:	fe 4f       	sbci	r31, 0xFE	; 254
     d26:	81 e0       	ldi	r24, 0x01	; 1
     d28:	90 e0       	ldi	r25, 0x00	; 0
     d2a:	91 83       	std	Z+1, r25	; 0x01
     d2c:	80 83       	st	Z, r24
     d2e:	64 c0       	rjmp	.+200    	; 0xdf8 <main+0x2c2>
	else if (__tmp > 65535)
     d30:	fe 01       	movw	r30, r28
     d32:	e9 5a       	subi	r30, 0xA9	; 169
     d34:	fe 4f       	sbci	r31, 0xFE	; 254
     d36:	60 81       	ld	r22, Z
     d38:	71 81       	ldd	r23, Z+1	; 0x01
     d3a:	82 81       	ldd	r24, Z+2	; 0x02
     d3c:	93 81       	ldd	r25, Z+3	; 0x03
     d3e:	20 e0       	ldi	r18, 0x00	; 0
     d40:	3f ef       	ldi	r19, 0xFF	; 255
     d42:	4f e7       	ldi	r20, 0x7F	; 127
     d44:	57 e4       	ldi	r21, 0x47	; 71
     d46:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     d4a:	18 16       	cp	r1, r24
     d4c:	0c f0       	brlt	.+2      	; 0xd50 <main+0x21a>
     d4e:	43 c0       	rjmp	.+134    	; 0xdd6 <main+0x2a0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     d50:	fe 01       	movw	r30, r28
     d52:	e5 5a       	subi	r30, 0xA5	; 165
     d54:	fe 4f       	sbci	r31, 0xFE	; 254
     d56:	60 81       	ld	r22, Z
     d58:	71 81       	ldd	r23, Z+1	; 0x01
     d5a:	82 81       	ldd	r24, Z+2	; 0x02
     d5c:	93 81       	ldd	r25, Z+3	; 0x03
     d5e:	20 e0       	ldi	r18, 0x00	; 0
     d60:	30 e0       	ldi	r19, 0x00	; 0
     d62:	40 e2       	ldi	r20, 0x20	; 32
     d64:	51 e4       	ldi	r21, 0x41	; 65
     d66:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     d6a:	dc 01       	movw	r26, r24
     d6c:	cb 01       	movw	r24, r22
     d6e:	8e 01       	movw	r16, r28
     d70:	0b 5a       	subi	r16, 0xAB	; 171
     d72:	1e 4f       	sbci	r17, 0xFE	; 254
     d74:	bc 01       	movw	r22, r24
     d76:	cd 01       	movw	r24, r26
     d78:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     d7c:	dc 01       	movw	r26, r24
     d7e:	cb 01       	movw	r24, r22
     d80:	f8 01       	movw	r30, r16
     d82:	91 83       	std	Z+1, r25	; 0x01
     d84:	80 83       	st	Z, r24
     d86:	1f c0       	rjmp	.+62     	; 0xdc6 <main+0x290>
     d88:	fe 01       	movw	r30, r28
     d8a:	ed 5a       	subi	r30, 0xAD	; 173
     d8c:	fe 4f       	sbci	r31, 0xFE	; 254
     d8e:	80 e9       	ldi	r24, 0x90	; 144
     d90:	91 e0       	ldi	r25, 0x01	; 1
     d92:	91 83       	std	Z+1, r25	; 0x01
     d94:	80 83       	st	Z, r24
    milliseconds can be achieved.
 */
void
_delay_loop_2(uint16_t __count)
{
	__asm__ volatile (
     d96:	fe 01       	movw	r30, r28
     d98:	ed 5a       	subi	r30, 0xAD	; 173
     d9a:	fe 4f       	sbci	r31, 0xFE	; 254
     d9c:	80 81       	ld	r24, Z
     d9e:	91 81       	ldd	r25, Z+1	; 0x01
     da0:	01 97       	sbiw	r24, 0x01	; 1
     da2:	f1 f7       	brne	.-4      	; 0xda0 <main+0x26a>
     da4:	fe 01       	movw	r30, r28
     da6:	ed 5a       	subi	r30, 0xAD	; 173
     da8:	fe 4f       	sbci	r31, 0xFE	; 254
     daa:	91 83       	std	Z+1, r25	; 0x01
     dac:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     dae:	de 01       	movw	r26, r28
     db0:	ab 5a       	subi	r26, 0xAB	; 171
     db2:	be 4f       	sbci	r27, 0xFE	; 254
     db4:	fe 01       	movw	r30, r28
     db6:	eb 5a       	subi	r30, 0xAB	; 171
     db8:	fe 4f       	sbci	r31, 0xFE	; 254
     dba:	80 81       	ld	r24, Z
     dbc:	91 81       	ldd	r25, Z+1	; 0x01
     dbe:	01 97       	sbiw	r24, 0x01	; 1
     dc0:	11 96       	adiw	r26, 0x01	; 1
     dc2:	9c 93       	st	X, r25
     dc4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     dc6:	fe 01       	movw	r30, r28
     dc8:	eb 5a       	subi	r30, 0xAB	; 171
     dca:	fe 4f       	sbci	r31, 0xFE	; 254
     dcc:	80 81       	ld	r24, Z
     dce:	91 81       	ldd	r25, Z+1	; 0x01
     dd0:	00 97       	sbiw	r24, 0x00	; 0
     dd2:	d1 f6       	brne	.-76     	; 0xd88 <main+0x252>
     dd4:	27 c0       	rjmp	.+78     	; 0xe24 <main+0x2ee>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     dd6:	8e 01       	movw	r16, r28
     dd8:	0b 5a       	subi	r16, 0xAB	; 171
     dda:	1e 4f       	sbci	r17, 0xFE	; 254
     ddc:	fe 01       	movw	r30, r28
     dde:	e9 5a       	subi	r30, 0xA9	; 169
     de0:	fe 4f       	sbci	r31, 0xFE	; 254
     de2:	60 81       	ld	r22, Z
     de4:	71 81       	ldd	r23, Z+1	; 0x01
     de6:	82 81       	ldd	r24, Z+2	; 0x02
     de8:	93 81       	ldd	r25, Z+3	; 0x03
     dea:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     dee:	dc 01       	movw	r26, r24
     df0:	cb 01       	movw	r24, r22
     df2:	f8 01       	movw	r30, r16
     df4:	91 83       	std	Z+1, r25	; 0x01
     df6:	80 83       	st	Z, r24
     df8:	de 01       	movw	r26, r28
     dfa:	af 5a       	subi	r26, 0xAF	; 175
     dfc:	be 4f       	sbci	r27, 0xFE	; 254
     dfe:	fe 01       	movw	r30, r28
     e00:	eb 5a       	subi	r30, 0xAB	; 171
     e02:	fe 4f       	sbci	r31, 0xFE	; 254
     e04:	80 81       	ld	r24, Z
     e06:	91 81       	ldd	r25, Z+1	; 0x01
     e08:	8d 93       	st	X+, r24
     e0a:	9c 93       	st	X, r25
     e0c:	fe 01       	movw	r30, r28
     e0e:	ef 5a       	subi	r30, 0xAF	; 175
     e10:	fe 4f       	sbci	r31, 0xFE	; 254
     e12:	80 81       	ld	r24, Z
     e14:	91 81       	ldd	r25, Z+1	; 0x01
     e16:	01 97       	sbiw	r24, 0x01	; 1
     e18:	f1 f7       	brne	.-4      	; 0xe16 <main+0x2e0>
     e1a:	fe 01       	movw	r30, r28
     e1c:	ef 5a       	subi	r30, 0xAF	; 175
     e1e:	fe 4f       	sbci	r31, 0xFE	; 254
     e20:	91 83       	std	Z+1, r25	; 0x01
     e22:	80 83       	st	Z, r24
					_delay_ms(300);
					CLR_BIT(PORTC,0);
     e24:	a5 e3       	ldi	r26, 0x35	; 53
     e26:	b0 e0       	ldi	r27, 0x00	; 0
     e28:	e5 e3       	ldi	r30, 0x35	; 53
     e2a:	f0 e0       	ldi	r31, 0x00	; 0
     e2c:	80 81       	ld	r24, Z
     e2e:	8e 7f       	andi	r24, 0xFE	; 254
     e30:	8c 93       	st	X, r24
					CLR_BIT(PORTC,1);
     e32:	a5 e3       	ldi	r26, 0x35	; 53
     e34:	b0 e0       	ldi	r27, 0x00	; 0
     e36:	e5 e3       	ldi	r30, 0x35	; 53
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	8d 7f       	andi	r24, 0xFD	; 253
     e3e:	8c 93       	st	X, r24
					CLR_BIT(PORTC,2);
     e40:	a5 e3       	ldi	r26, 0x35	; 53
     e42:	b0 e0       	ldi	r27, 0x00	; 0
     e44:	e5 e3       	ldi	r30, 0x35	; 53
     e46:	f0 e0       	ldi	r31, 0x00	; 0
     e48:	80 81       	ld	r24, Z
     e4a:	8b 7f       	andi	r24, 0xFB	; 251
     e4c:	8c 93       	st	X, r24
     e4e:	fe 01       	movw	r30, r28
     e50:	e3 5b       	subi	r30, 0xB3	; 179
     e52:	fe 4f       	sbci	r31, 0xFE	; 254
     e54:	80 e0       	ldi	r24, 0x00	; 0
     e56:	90 e0       	ldi	r25, 0x00	; 0
     e58:	a6 e9       	ldi	r26, 0x96	; 150
     e5a:	b3 e4       	ldi	r27, 0x43	; 67
     e5c:	80 83       	st	Z, r24
     e5e:	91 83       	std	Z+1, r25	; 0x01
     e60:	a2 83       	std	Z+2, r26	; 0x02
     e62:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     e64:	8e 01       	movw	r16, r28
     e66:	07 5b       	subi	r16, 0xB7	; 183
     e68:	1e 4f       	sbci	r17, 0xFE	; 254
     e6a:	fe 01       	movw	r30, r28
     e6c:	e3 5b       	subi	r30, 0xB3	; 179
     e6e:	fe 4f       	sbci	r31, 0xFE	; 254
     e70:	60 81       	ld	r22, Z
     e72:	71 81       	ldd	r23, Z+1	; 0x01
     e74:	82 81       	ldd	r24, Z+2	; 0x02
     e76:	93 81       	ldd	r25, Z+3	; 0x03
     e78:	20 e0       	ldi	r18, 0x00	; 0
     e7a:	30 e0       	ldi	r19, 0x00	; 0
     e7c:	4a e7       	ldi	r20, 0x7A	; 122
     e7e:	55 e4       	ldi	r21, 0x45	; 69
     e80:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     e84:	dc 01       	movw	r26, r24
     e86:	cb 01       	movw	r24, r22
     e88:	f8 01       	movw	r30, r16
     e8a:	80 83       	st	Z, r24
     e8c:	91 83       	std	Z+1, r25	; 0x01
     e8e:	a2 83       	std	Z+2, r26	; 0x02
     e90:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
     e92:	fe 01       	movw	r30, r28
     e94:	e7 5b       	subi	r30, 0xB7	; 183
     e96:	fe 4f       	sbci	r31, 0xFE	; 254
     e98:	60 81       	ld	r22, Z
     e9a:	71 81       	ldd	r23, Z+1	; 0x01
     e9c:	82 81       	ldd	r24, Z+2	; 0x02
     e9e:	93 81       	ldd	r25, Z+3	; 0x03
     ea0:	20 e0       	ldi	r18, 0x00	; 0
     ea2:	30 e0       	ldi	r19, 0x00	; 0
     ea4:	40 e8       	ldi	r20, 0x80	; 128
     ea6:	5f e3       	ldi	r21, 0x3F	; 63
     ea8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
     eac:	88 23       	and	r24, r24
     eae:	44 f4       	brge	.+16     	; 0xec0 <main+0x38a>
		__ticks = 1;
     eb0:	fe 01       	movw	r30, r28
     eb2:	e9 5b       	subi	r30, 0xB9	; 185
     eb4:	fe 4f       	sbci	r31, 0xFE	; 254
     eb6:	81 e0       	ldi	r24, 0x01	; 1
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	91 83       	std	Z+1, r25	; 0x01
     ebc:	80 83       	st	Z, r24
     ebe:	64 c0       	rjmp	.+200    	; 0xf88 <main+0x452>
	else if (__tmp > 65535)
     ec0:	fe 01       	movw	r30, r28
     ec2:	e7 5b       	subi	r30, 0xB7	; 183
     ec4:	fe 4f       	sbci	r31, 0xFE	; 254
     ec6:	60 81       	ld	r22, Z
     ec8:	71 81       	ldd	r23, Z+1	; 0x01
     eca:	82 81       	ldd	r24, Z+2	; 0x02
     ecc:	93 81       	ldd	r25, Z+3	; 0x03
     ece:	20 e0       	ldi	r18, 0x00	; 0
     ed0:	3f ef       	ldi	r19, 0xFF	; 255
     ed2:	4f e7       	ldi	r20, 0x7F	; 127
     ed4:	57 e4       	ldi	r21, 0x47	; 71
     ed6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
     eda:	18 16       	cp	r1, r24
     edc:	0c f0       	brlt	.+2      	; 0xee0 <main+0x3aa>
     ede:	43 c0       	rjmp	.+134    	; 0xf66 <main+0x430>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
     ee0:	fe 01       	movw	r30, r28
     ee2:	e3 5b       	subi	r30, 0xB3	; 179
     ee4:	fe 4f       	sbci	r31, 0xFE	; 254
     ee6:	60 81       	ld	r22, Z
     ee8:	71 81       	ldd	r23, Z+1	; 0x01
     eea:	82 81       	ldd	r24, Z+2	; 0x02
     eec:	93 81       	ldd	r25, Z+3	; 0x03
     eee:	20 e0       	ldi	r18, 0x00	; 0
     ef0:	30 e0       	ldi	r19, 0x00	; 0
     ef2:	40 e2       	ldi	r20, 0x20	; 32
     ef4:	51 e4       	ldi	r21, 0x41	; 65
     ef6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
     efa:	dc 01       	movw	r26, r24
     efc:	cb 01       	movw	r24, r22
     efe:	8e 01       	movw	r16, r28
     f00:	09 5b       	subi	r16, 0xB9	; 185
     f02:	1e 4f       	sbci	r17, 0xFE	; 254
     f04:	bc 01       	movw	r22, r24
     f06:	cd 01       	movw	r24, r26
     f08:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f0c:	dc 01       	movw	r26, r24
     f0e:	cb 01       	movw	r24, r22
     f10:	f8 01       	movw	r30, r16
     f12:	91 83       	std	Z+1, r25	; 0x01
     f14:	80 83       	st	Z, r24
     f16:	1f c0       	rjmp	.+62     	; 0xf56 <main+0x420>
     f18:	fe 01       	movw	r30, r28
     f1a:	eb 5b       	subi	r30, 0xBB	; 187
     f1c:	fe 4f       	sbci	r31, 0xFE	; 254
     f1e:	80 e9       	ldi	r24, 0x90	; 144
     f20:	91 e0       	ldi	r25, 0x01	; 1
     f22:	91 83       	std	Z+1, r25	; 0x01
     f24:	80 83       	st	Z, r24
     f26:	fe 01       	movw	r30, r28
     f28:	eb 5b       	subi	r30, 0xBB	; 187
     f2a:	fe 4f       	sbci	r31, 0xFE	; 254
     f2c:	80 81       	ld	r24, Z
     f2e:	91 81       	ldd	r25, Z+1	; 0x01
     f30:	01 97       	sbiw	r24, 0x01	; 1
     f32:	f1 f7       	brne	.-4      	; 0xf30 <main+0x3fa>
     f34:	fe 01       	movw	r30, r28
     f36:	eb 5b       	subi	r30, 0xBB	; 187
     f38:	fe 4f       	sbci	r31, 0xFE	; 254
     f3a:	91 83       	std	Z+1, r25	; 0x01
     f3c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
     f3e:	de 01       	movw	r26, r28
     f40:	a9 5b       	subi	r26, 0xB9	; 185
     f42:	be 4f       	sbci	r27, 0xFE	; 254
     f44:	fe 01       	movw	r30, r28
     f46:	e9 5b       	subi	r30, 0xB9	; 185
     f48:	fe 4f       	sbci	r31, 0xFE	; 254
     f4a:	80 81       	ld	r24, Z
     f4c:	91 81       	ldd	r25, Z+1	; 0x01
     f4e:	01 97       	sbiw	r24, 0x01	; 1
     f50:	11 96       	adiw	r26, 0x01	; 1
     f52:	9c 93       	st	X, r25
     f54:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
     f56:	fe 01       	movw	r30, r28
     f58:	e9 5b       	subi	r30, 0xB9	; 185
     f5a:	fe 4f       	sbci	r31, 0xFE	; 254
     f5c:	80 81       	ld	r24, Z
     f5e:	91 81       	ldd	r25, Z+1	; 0x01
     f60:	00 97       	sbiw	r24, 0x00	; 0
     f62:	d1 f6       	brne	.-76     	; 0xf18 <main+0x3e2>
     f64:	27 c0       	rjmp	.+78     	; 0xfb4 <main+0x47e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
     f66:	8e 01       	movw	r16, r28
     f68:	09 5b       	subi	r16, 0xB9	; 185
     f6a:	1e 4f       	sbci	r17, 0xFE	; 254
     f6c:	fe 01       	movw	r30, r28
     f6e:	e7 5b       	subi	r30, 0xB7	; 183
     f70:	fe 4f       	sbci	r31, 0xFE	; 254
     f72:	60 81       	ld	r22, Z
     f74:	71 81       	ldd	r23, Z+1	; 0x01
     f76:	82 81       	ldd	r24, Z+2	; 0x02
     f78:	93 81       	ldd	r25, Z+3	; 0x03
     f7a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
     f7e:	dc 01       	movw	r26, r24
     f80:	cb 01       	movw	r24, r22
     f82:	f8 01       	movw	r30, r16
     f84:	91 83       	std	Z+1, r25	; 0x01
     f86:	80 83       	st	Z, r24
     f88:	de 01       	movw	r26, r28
     f8a:	ad 5b       	subi	r26, 0xBD	; 189
     f8c:	be 4f       	sbci	r27, 0xFE	; 254
     f8e:	fe 01       	movw	r30, r28
     f90:	e9 5b       	subi	r30, 0xB9	; 185
     f92:	fe 4f       	sbci	r31, 0xFE	; 254
     f94:	80 81       	ld	r24, Z
     f96:	91 81       	ldd	r25, Z+1	; 0x01
     f98:	8d 93       	st	X+, r24
     f9a:	9c 93       	st	X, r25
     f9c:	fe 01       	movw	r30, r28
     f9e:	ed 5b       	subi	r30, 0xBD	; 189
     fa0:	fe 4f       	sbci	r31, 0xFE	; 254
     fa2:	80 81       	ld	r24, Z
     fa4:	91 81       	ldd	r25, Z+1	; 0x01
     fa6:	01 97       	sbiw	r24, 0x01	; 1
     fa8:	f1 f7       	brne	.-4      	; 0xfa6 <main+0x470>
     faa:	fe 01       	movw	r30, r28
     fac:	ed 5b       	subi	r30, 0xBD	; 189
     fae:	fe 4f       	sbci	r31, 0xFE	; 254
     fb0:	91 83       	std	Z+1, r25	; 0x01
     fb2:	80 83       	st	Z, r24
					_delay_ms(300);
					SET_BIT(PORTC,0);
     fb4:	a5 e3       	ldi	r26, 0x35	; 53
     fb6:	b0 e0       	ldi	r27, 0x00	; 0
     fb8:	e5 e3       	ldi	r30, 0x35	; 53
     fba:	f0 e0       	ldi	r31, 0x00	; 0
     fbc:	80 81       	ld	r24, Z
     fbe:	81 60       	ori	r24, 0x01	; 1
     fc0:	8c 93       	st	X, r24
					SET_BIT(PORTC,1);
     fc2:	a5 e3       	ldi	r26, 0x35	; 53
     fc4:	b0 e0       	ldi	r27, 0x00	; 0
     fc6:	e5 e3       	ldi	r30, 0x35	; 53
     fc8:	f0 e0       	ldi	r31, 0x00	; 0
     fca:	80 81       	ld	r24, Z
     fcc:	82 60       	ori	r24, 0x02	; 2
     fce:	8c 93       	st	X, r24
					SET_BIT(PORTC,2);
     fd0:	a5 e3       	ldi	r26, 0x35	; 53
     fd2:	b0 e0       	ldi	r27, 0x00	; 0
     fd4:	e5 e3       	ldi	r30, 0x35	; 53
     fd6:	f0 e0       	ldi	r31, 0x00	; 0
     fd8:	80 81       	ld	r24, Z
     fda:	84 60       	ori	r24, 0x04	; 4
     fdc:	8c 93       	st	X, r24
     fde:	fe 01       	movw	r30, r28
     fe0:	e1 5c       	subi	r30, 0xC1	; 193
     fe2:	fe 4f       	sbci	r31, 0xFE	; 254
     fe4:	80 e0       	ldi	r24, 0x00	; 0
     fe6:	90 e0       	ldi	r25, 0x00	; 0
     fe8:	a6 e9       	ldi	r26, 0x96	; 150
     fea:	b3 e4       	ldi	r27, 0x43	; 67
     fec:	80 83       	st	Z, r24
     fee:	91 83       	std	Z+1, r25	; 0x01
     ff0:	a2 83       	std	Z+2, r26	; 0x02
     ff2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
     ff4:	8e 01       	movw	r16, r28
     ff6:	05 5c       	subi	r16, 0xC5	; 197
     ff8:	1e 4f       	sbci	r17, 0xFE	; 254
     ffa:	fe 01       	movw	r30, r28
     ffc:	e1 5c       	subi	r30, 0xC1	; 193
     ffe:	fe 4f       	sbci	r31, 0xFE	; 254
    1000:	60 81       	ld	r22, Z
    1002:	71 81       	ldd	r23, Z+1	; 0x01
    1004:	82 81       	ldd	r24, Z+2	; 0x02
    1006:	93 81       	ldd	r25, Z+3	; 0x03
    1008:	20 e0       	ldi	r18, 0x00	; 0
    100a:	30 e0       	ldi	r19, 0x00	; 0
    100c:	4a e7       	ldi	r20, 0x7A	; 122
    100e:	55 e4       	ldi	r21, 0x45	; 69
    1010:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1014:	dc 01       	movw	r26, r24
    1016:	cb 01       	movw	r24, r22
    1018:	f8 01       	movw	r30, r16
    101a:	80 83       	st	Z, r24
    101c:	91 83       	std	Z+1, r25	; 0x01
    101e:	a2 83       	std	Z+2, r26	; 0x02
    1020:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1022:	fe 01       	movw	r30, r28
    1024:	e5 5c       	subi	r30, 0xC5	; 197
    1026:	fe 4f       	sbci	r31, 0xFE	; 254
    1028:	60 81       	ld	r22, Z
    102a:	71 81       	ldd	r23, Z+1	; 0x01
    102c:	82 81       	ldd	r24, Z+2	; 0x02
    102e:	93 81       	ldd	r25, Z+3	; 0x03
    1030:	20 e0       	ldi	r18, 0x00	; 0
    1032:	30 e0       	ldi	r19, 0x00	; 0
    1034:	40 e8       	ldi	r20, 0x80	; 128
    1036:	5f e3       	ldi	r21, 0x3F	; 63
    1038:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    103c:	88 23       	and	r24, r24
    103e:	44 f4       	brge	.+16     	; 0x1050 <main+0x51a>
		__ticks = 1;
    1040:	fe 01       	movw	r30, r28
    1042:	e7 5c       	subi	r30, 0xC7	; 199
    1044:	fe 4f       	sbci	r31, 0xFE	; 254
    1046:	81 e0       	ldi	r24, 0x01	; 1
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	91 83       	std	Z+1, r25	; 0x01
    104c:	80 83       	st	Z, r24
    104e:	64 c0       	rjmp	.+200    	; 0x1118 <main+0x5e2>
	else if (__tmp > 65535)
    1050:	fe 01       	movw	r30, r28
    1052:	e5 5c       	subi	r30, 0xC5	; 197
    1054:	fe 4f       	sbci	r31, 0xFE	; 254
    1056:	60 81       	ld	r22, Z
    1058:	71 81       	ldd	r23, Z+1	; 0x01
    105a:	82 81       	ldd	r24, Z+2	; 0x02
    105c:	93 81       	ldd	r25, Z+3	; 0x03
    105e:	20 e0       	ldi	r18, 0x00	; 0
    1060:	3f ef       	ldi	r19, 0xFF	; 255
    1062:	4f e7       	ldi	r20, 0x7F	; 127
    1064:	57 e4       	ldi	r21, 0x47	; 71
    1066:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    106a:	18 16       	cp	r1, r24
    106c:	0c f0       	brlt	.+2      	; 0x1070 <main+0x53a>
    106e:	43 c0       	rjmp	.+134    	; 0x10f6 <main+0x5c0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1070:	fe 01       	movw	r30, r28
    1072:	e1 5c       	subi	r30, 0xC1	; 193
    1074:	fe 4f       	sbci	r31, 0xFE	; 254
    1076:	60 81       	ld	r22, Z
    1078:	71 81       	ldd	r23, Z+1	; 0x01
    107a:	82 81       	ldd	r24, Z+2	; 0x02
    107c:	93 81       	ldd	r25, Z+3	; 0x03
    107e:	20 e0       	ldi	r18, 0x00	; 0
    1080:	30 e0       	ldi	r19, 0x00	; 0
    1082:	40 e2       	ldi	r20, 0x20	; 32
    1084:	51 e4       	ldi	r21, 0x41	; 65
    1086:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    108a:	dc 01       	movw	r26, r24
    108c:	cb 01       	movw	r24, r22
    108e:	8e 01       	movw	r16, r28
    1090:	07 5c       	subi	r16, 0xC7	; 199
    1092:	1e 4f       	sbci	r17, 0xFE	; 254
    1094:	bc 01       	movw	r22, r24
    1096:	cd 01       	movw	r24, r26
    1098:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    109c:	dc 01       	movw	r26, r24
    109e:	cb 01       	movw	r24, r22
    10a0:	f8 01       	movw	r30, r16
    10a2:	91 83       	std	Z+1, r25	; 0x01
    10a4:	80 83       	st	Z, r24
    10a6:	1f c0       	rjmp	.+62     	; 0x10e6 <main+0x5b0>
    10a8:	fe 01       	movw	r30, r28
    10aa:	e9 5c       	subi	r30, 0xC9	; 201
    10ac:	fe 4f       	sbci	r31, 0xFE	; 254
    10ae:	80 e9       	ldi	r24, 0x90	; 144
    10b0:	91 e0       	ldi	r25, 0x01	; 1
    10b2:	91 83       	std	Z+1, r25	; 0x01
    10b4:	80 83       	st	Z, r24
    10b6:	fe 01       	movw	r30, r28
    10b8:	e9 5c       	subi	r30, 0xC9	; 201
    10ba:	fe 4f       	sbci	r31, 0xFE	; 254
    10bc:	80 81       	ld	r24, Z
    10be:	91 81       	ldd	r25, Z+1	; 0x01
    10c0:	01 97       	sbiw	r24, 0x01	; 1
    10c2:	f1 f7       	brne	.-4      	; 0x10c0 <main+0x58a>
    10c4:	fe 01       	movw	r30, r28
    10c6:	e9 5c       	subi	r30, 0xC9	; 201
    10c8:	fe 4f       	sbci	r31, 0xFE	; 254
    10ca:	91 83       	std	Z+1, r25	; 0x01
    10cc:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    10ce:	de 01       	movw	r26, r28
    10d0:	a7 5c       	subi	r26, 0xC7	; 199
    10d2:	be 4f       	sbci	r27, 0xFE	; 254
    10d4:	fe 01       	movw	r30, r28
    10d6:	e7 5c       	subi	r30, 0xC7	; 199
    10d8:	fe 4f       	sbci	r31, 0xFE	; 254
    10da:	80 81       	ld	r24, Z
    10dc:	91 81       	ldd	r25, Z+1	; 0x01
    10de:	01 97       	sbiw	r24, 0x01	; 1
    10e0:	11 96       	adiw	r26, 0x01	; 1
    10e2:	9c 93       	st	X, r25
    10e4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    10e6:	fe 01       	movw	r30, r28
    10e8:	e7 5c       	subi	r30, 0xC7	; 199
    10ea:	fe 4f       	sbci	r31, 0xFE	; 254
    10ec:	80 81       	ld	r24, Z
    10ee:	91 81       	ldd	r25, Z+1	; 0x01
    10f0:	00 97       	sbiw	r24, 0x00	; 0
    10f2:	d1 f6       	brne	.-76     	; 0x10a8 <main+0x572>
    10f4:	27 c0       	rjmp	.+78     	; 0x1144 <main+0x60e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    10f6:	8e 01       	movw	r16, r28
    10f8:	07 5c       	subi	r16, 0xC7	; 199
    10fa:	1e 4f       	sbci	r17, 0xFE	; 254
    10fc:	fe 01       	movw	r30, r28
    10fe:	e5 5c       	subi	r30, 0xC5	; 197
    1100:	fe 4f       	sbci	r31, 0xFE	; 254
    1102:	60 81       	ld	r22, Z
    1104:	71 81       	ldd	r23, Z+1	; 0x01
    1106:	82 81       	ldd	r24, Z+2	; 0x02
    1108:	93 81       	ldd	r25, Z+3	; 0x03
    110a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    110e:	dc 01       	movw	r26, r24
    1110:	cb 01       	movw	r24, r22
    1112:	f8 01       	movw	r30, r16
    1114:	91 83       	std	Z+1, r25	; 0x01
    1116:	80 83       	st	Z, r24
    1118:	de 01       	movw	r26, r28
    111a:	ab 5c       	subi	r26, 0xCB	; 203
    111c:	be 4f       	sbci	r27, 0xFE	; 254
    111e:	fe 01       	movw	r30, r28
    1120:	e7 5c       	subi	r30, 0xC7	; 199
    1122:	fe 4f       	sbci	r31, 0xFE	; 254
    1124:	80 81       	ld	r24, Z
    1126:	91 81       	ldd	r25, Z+1	; 0x01
    1128:	8d 93       	st	X+, r24
    112a:	9c 93       	st	X, r25
    112c:	fe 01       	movw	r30, r28
    112e:	eb 5c       	subi	r30, 0xCB	; 203
    1130:	fe 4f       	sbci	r31, 0xFE	; 254
    1132:	80 81       	ld	r24, Z
    1134:	91 81       	ldd	r25, Z+1	; 0x01
    1136:	01 97       	sbiw	r24, 0x01	; 1
    1138:	f1 f7       	brne	.-4      	; 0x1136 <main+0x600>
    113a:	fe 01       	movw	r30, r28
    113c:	eb 5c       	subi	r30, 0xCB	; 203
    113e:	fe 4f       	sbci	r31, 0xFE	; 254
    1140:	91 83       	std	Z+1, r25	; 0x01
    1142:	80 83       	st	Z, r24
					_delay_ms(300);
					CLR_BIT(PORTC,0);
    1144:	a5 e3       	ldi	r26, 0x35	; 53
    1146:	b0 e0       	ldi	r27, 0x00	; 0
    1148:	e5 e3       	ldi	r30, 0x35	; 53
    114a:	f0 e0       	ldi	r31, 0x00	; 0
    114c:	80 81       	ld	r24, Z
    114e:	8e 7f       	andi	r24, 0xFE	; 254
    1150:	8c 93       	st	X, r24
					CLR_BIT(PORTC,1);
    1152:	a5 e3       	ldi	r26, 0x35	; 53
    1154:	b0 e0       	ldi	r27, 0x00	; 0
    1156:	e5 e3       	ldi	r30, 0x35	; 53
    1158:	f0 e0       	ldi	r31, 0x00	; 0
    115a:	80 81       	ld	r24, Z
    115c:	8d 7f       	andi	r24, 0xFD	; 253
    115e:	8c 93       	st	X, r24
					CLR_BIT(PORTC,2);
    1160:	a5 e3       	ldi	r26, 0x35	; 53
    1162:	b0 e0       	ldi	r27, 0x00	; 0
    1164:	e5 e3       	ldi	r30, 0x35	; 53
    1166:	f0 e0       	ldi	r31, 0x00	; 0
    1168:	80 81       	ld	r24, Z
    116a:	8b 7f       	andi	r24, 0xFB	; 251
    116c:	8c 93       	st	X, r24
    116e:	fe 01       	movw	r30, r28
    1170:	ef 5c       	subi	r30, 0xCF	; 207
    1172:	fe 4f       	sbci	r31, 0xFE	; 254
    1174:	80 e0       	ldi	r24, 0x00	; 0
    1176:	90 e0       	ldi	r25, 0x00	; 0
    1178:	a6 e9       	ldi	r26, 0x96	; 150
    117a:	b3 e4       	ldi	r27, 0x43	; 67
    117c:	80 83       	st	Z, r24
    117e:	91 83       	std	Z+1, r25	; 0x01
    1180:	a2 83       	std	Z+2, r26	; 0x02
    1182:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1184:	8e 01       	movw	r16, r28
    1186:	03 5d       	subi	r16, 0xD3	; 211
    1188:	1e 4f       	sbci	r17, 0xFE	; 254
    118a:	fe 01       	movw	r30, r28
    118c:	ef 5c       	subi	r30, 0xCF	; 207
    118e:	fe 4f       	sbci	r31, 0xFE	; 254
    1190:	60 81       	ld	r22, Z
    1192:	71 81       	ldd	r23, Z+1	; 0x01
    1194:	82 81       	ldd	r24, Z+2	; 0x02
    1196:	93 81       	ldd	r25, Z+3	; 0x03
    1198:	20 e0       	ldi	r18, 0x00	; 0
    119a:	30 e0       	ldi	r19, 0x00	; 0
    119c:	4a e7       	ldi	r20, 0x7A	; 122
    119e:	55 e4       	ldi	r21, 0x45	; 69
    11a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    11a4:	dc 01       	movw	r26, r24
    11a6:	cb 01       	movw	r24, r22
    11a8:	f8 01       	movw	r30, r16
    11aa:	80 83       	st	Z, r24
    11ac:	91 83       	std	Z+1, r25	; 0x01
    11ae:	a2 83       	std	Z+2, r26	; 0x02
    11b0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    11b2:	fe 01       	movw	r30, r28
    11b4:	e3 5d       	subi	r30, 0xD3	; 211
    11b6:	fe 4f       	sbci	r31, 0xFE	; 254
    11b8:	60 81       	ld	r22, Z
    11ba:	71 81       	ldd	r23, Z+1	; 0x01
    11bc:	82 81       	ldd	r24, Z+2	; 0x02
    11be:	93 81       	ldd	r25, Z+3	; 0x03
    11c0:	20 e0       	ldi	r18, 0x00	; 0
    11c2:	30 e0       	ldi	r19, 0x00	; 0
    11c4:	40 e8       	ldi	r20, 0x80	; 128
    11c6:	5f e3       	ldi	r21, 0x3F	; 63
    11c8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    11cc:	88 23       	and	r24, r24
    11ce:	44 f4       	brge	.+16     	; 0x11e0 <main+0x6aa>
		__ticks = 1;
    11d0:	fe 01       	movw	r30, r28
    11d2:	e5 5d       	subi	r30, 0xD5	; 213
    11d4:	fe 4f       	sbci	r31, 0xFE	; 254
    11d6:	81 e0       	ldi	r24, 0x01	; 1
    11d8:	90 e0       	ldi	r25, 0x00	; 0
    11da:	91 83       	std	Z+1, r25	; 0x01
    11dc:	80 83       	st	Z, r24
    11de:	64 c0       	rjmp	.+200    	; 0x12a8 <main+0x772>
	else if (__tmp > 65535)
    11e0:	fe 01       	movw	r30, r28
    11e2:	e3 5d       	subi	r30, 0xD3	; 211
    11e4:	fe 4f       	sbci	r31, 0xFE	; 254
    11e6:	60 81       	ld	r22, Z
    11e8:	71 81       	ldd	r23, Z+1	; 0x01
    11ea:	82 81       	ldd	r24, Z+2	; 0x02
    11ec:	93 81       	ldd	r25, Z+3	; 0x03
    11ee:	20 e0       	ldi	r18, 0x00	; 0
    11f0:	3f ef       	ldi	r19, 0xFF	; 255
    11f2:	4f e7       	ldi	r20, 0x7F	; 127
    11f4:	57 e4       	ldi	r21, 0x47	; 71
    11f6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    11fa:	18 16       	cp	r1, r24
    11fc:	0c f0       	brlt	.+2      	; 0x1200 <main+0x6ca>
    11fe:	43 c0       	rjmp	.+134    	; 0x1286 <main+0x750>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1200:	fe 01       	movw	r30, r28
    1202:	ef 5c       	subi	r30, 0xCF	; 207
    1204:	fe 4f       	sbci	r31, 0xFE	; 254
    1206:	60 81       	ld	r22, Z
    1208:	71 81       	ldd	r23, Z+1	; 0x01
    120a:	82 81       	ldd	r24, Z+2	; 0x02
    120c:	93 81       	ldd	r25, Z+3	; 0x03
    120e:	20 e0       	ldi	r18, 0x00	; 0
    1210:	30 e0       	ldi	r19, 0x00	; 0
    1212:	40 e2       	ldi	r20, 0x20	; 32
    1214:	51 e4       	ldi	r21, 0x41	; 65
    1216:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    121a:	dc 01       	movw	r26, r24
    121c:	cb 01       	movw	r24, r22
    121e:	8e 01       	movw	r16, r28
    1220:	05 5d       	subi	r16, 0xD5	; 213
    1222:	1e 4f       	sbci	r17, 0xFE	; 254
    1224:	bc 01       	movw	r22, r24
    1226:	cd 01       	movw	r24, r26
    1228:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    122c:	dc 01       	movw	r26, r24
    122e:	cb 01       	movw	r24, r22
    1230:	f8 01       	movw	r30, r16
    1232:	91 83       	std	Z+1, r25	; 0x01
    1234:	80 83       	st	Z, r24
    1236:	1f c0       	rjmp	.+62     	; 0x1276 <main+0x740>
    1238:	fe 01       	movw	r30, r28
    123a:	e7 5d       	subi	r30, 0xD7	; 215
    123c:	fe 4f       	sbci	r31, 0xFE	; 254
    123e:	80 e9       	ldi	r24, 0x90	; 144
    1240:	91 e0       	ldi	r25, 0x01	; 1
    1242:	91 83       	std	Z+1, r25	; 0x01
    1244:	80 83       	st	Z, r24
    1246:	fe 01       	movw	r30, r28
    1248:	e7 5d       	subi	r30, 0xD7	; 215
    124a:	fe 4f       	sbci	r31, 0xFE	; 254
    124c:	80 81       	ld	r24, Z
    124e:	91 81       	ldd	r25, Z+1	; 0x01
    1250:	01 97       	sbiw	r24, 0x01	; 1
    1252:	f1 f7       	brne	.-4      	; 0x1250 <main+0x71a>
    1254:	fe 01       	movw	r30, r28
    1256:	e7 5d       	subi	r30, 0xD7	; 215
    1258:	fe 4f       	sbci	r31, 0xFE	; 254
    125a:	91 83       	std	Z+1, r25	; 0x01
    125c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    125e:	de 01       	movw	r26, r28
    1260:	a5 5d       	subi	r26, 0xD5	; 213
    1262:	be 4f       	sbci	r27, 0xFE	; 254
    1264:	fe 01       	movw	r30, r28
    1266:	e5 5d       	subi	r30, 0xD5	; 213
    1268:	fe 4f       	sbci	r31, 0xFE	; 254
    126a:	80 81       	ld	r24, Z
    126c:	91 81       	ldd	r25, Z+1	; 0x01
    126e:	01 97       	sbiw	r24, 0x01	; 1
    1270:	11 96       	adiw	r26, 0x01	; 1
    1272:	9c 93       	st	X, r25
    1274:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1276:	fe 01       	movw	r30, r28
    1278:	e5 5d       	subi	r30, 0xD5	; 213
    127a:	fe 4f       	sbci	r31, 0xFE	; 254
    127c:	80 81       	ld	r24, Z
    127e:	91 81       	ldd	r25, Z+1	; 0x01
    1280:	00 97       	sbiw	r24, 0x00	; 0
    1282:	d1 f6       	brne	.-76     	; 0x1238 <main+0x702>
    1284:	27 c0       	rjmp	.+78     	; 0x12d4 <main+0x79e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1286:	8e 01       	movw	r16, r28
    1288:	05 5d       	subi	r16, 0xD5	; 213
    128a:	1e 4f       	sbci	r17, 0xFE	; 254
    128c:	fe 01       	movw	r30, r28
    128e:	e3 5d       	subi	r30, 0xD3	; 211
    1290:	fe 4f       	sbci	r31, 0xFE	; 254
    1292:	60 81       	ld	r22, Z
    1294:	71 81       	ldd	r23, Z+1	; 0x01
    1296:	82 81       	ldd	r24, Z+2	; 0x02
    1298:	93 81       	ldd	r25, Z+3	; 0x03
    129a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    129e:	dc 01       	movw	r26, r24
    12a0:	cb 01       	movw	r24, r22
    12a2:	f8 01       	movw	r30, r16
    12a4:	91 83       	std	Z+1, r25	; 0x01
    12a6:	80 83       	st	Z, r24
    12a8:	de 01       	movw	r26, r28
    12aa:	a9 5d       	subi	r26, 0xD9	; 217
    12ac:	be 4f       	sbci	r27, 0xFE	; 254
    12ae:	fe 01       	movw	r30, r28
    12b0:	e5 5d       	subi	r30, 0xD5	; 213
    12b2:	fe 4f       	sbci	r31, 0xFE	; 254
    12b4:	80 81       	ld	r24, Z
    12b6:	91 81       	ldd	r25, Z+1	; 0x01
    12b8:	8d 93       	st	X+, r24
    12ba:	9c 93       	st	X, r25
    12bc:	fe 01       	movw	r30, r28
    12be:	e9 5d       	subi	r30, 0xD9	; 217
    12c0:	fe 4f       	sbci	r31, 0xFE	; 254
    12c2:	80 81       	ld	r24, Z
    12c4:	91 81       	ldd	r25, Z+1	; 0x01
    12c6:	01 97       	sbiw	r24, 0x01	; 1
    12c8:	f1 f7       	brne	.-4      	; 0x12c6 <main+0x790>
    12ca:	fe 01       	movw	r30, r28
    12cc:	e9 5d       	subi	r30, 0xD9	; 217
    12ce:	fe 4f       	sbci	r31, 0xFE	; 254
    12d0:	91 83       	std	Z+1, r25	; 0x01
    12d2:	80 83       	st	Z, r24
					_delay_ms(300);
					SET_BIT(PORTC,0);
    12d4:	a5 e3       	ldi	r26, 0x35	; 53
    12d6:	b0 e0       	ldi	r27, 0x00	; 0
    12d8:	e5 e3       	ldi	r30, 0x35	; 53
    12da:	f0 e0       	ldi	r31, 0x00	; 0
    12dc:	80 81       	ld	r24, Z
    12de:	81 60       	ori	r24, 0x01	; 1
    12e0:	8c 93       	st	X, r24
					SET_BIT(PORTC,1);
    12e2:	a5 e3       	ldi	r26, 0x35	; 53
    12e4:	b0 e0       	ldi	r27, 0x00	; 0
    12e6:	e5 e3       	ldi	r30, 0x35	; 53
    12e8:	f0 e0       	ldi	r31, 0x00	; 0
    12ea:	80 81       	ld	r24, Z
    12ec:	82 60       	ori	r24, 0x02	; 2
    12ee:	8c 93       	st	X, r24
					SET_BIT(PORTC,2);
    12f0:	a5 e3       	ldi	r26, 0x35	; 53
    12f2:	b0 e0       	ldi	r27, 0x00	; 0
    12f4:	e5 e3       	ldi	r30, 0x35	; 53
    12f6:	f0 e0       	ldi	r31, 0x00	; 0
    12f8:	80 81       	ld	r24, Z
    12fa:	84 60       	ori	r24, 0x04	; 4
    12fc:	8c 93       	st	X, r24
    12fe:	fe 01       	movw	r30, r28
    1300:	ed 5d       	subi	r30, 0xDD	; 221
    1302:	fe 4f       	sbci	r31, 0xFE	; 254
    1304:	80 e0       	ldi	r24, 0x00	; 0
    1306:	90 e0       	ldi	r25, 0x00	; 0
    1308:	a6 e9       	ldi	r26, 0x96	; 150
    130a:	b3 e4       	ldi	r27, 0x43	; 67
    130c:	80 83       	st	Z, r24
    130e:	91 83       	std	Z+1, r25	; 0x01
    1310:	a2 83       	std	Z+2, r26	; 0x02
    1312:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1314:	8e 01       	movw	r16, r28
    1316:	01 5e       	subi	r16, 0xE1	; 225
    1318:	1e 4f       	sbci	r17, 0xFE	; 254
    131a:	fe 01       	movw	r30, r28
    131c:	ed 5d       	subi	r30, 0xDD	; 221
    131e:	fe 4f       	sbci	r31, 0xFE	; 254
    1320:	60 81       	ld	r22, Z
    1322:	71 81       	ldd	r23, Z+1	; 0x01
    1324:	82 81       	ldd	r24, Z+2	; 0x02
    1326:	93 81       	ldd	r25, Z+3	; 0x03
    1328:	20 e0       	ldi	r18, 0x00	; 0
    132a:	30 e0       	ldi	r19, 0x00	; 0
    132c:	4a e7       	ldi	r20, 0x7A	; 122
    132e:	55 e4       	ldi	r21, 0x45	; 69
    1330:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1334:	dc 01       	movw	r26, r24
    1336:	cb 01       	movw	r24, r22
    1338:	f8 01       	movw	r30, r16
    133a:	80 83       	st	Z, r24
    133c:	91 83       	std	Z+1, r25	; 0x01
    133e:	a2 83       	std	Z+2, r26	; 0x02
    1340:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1342:	fe 01       	movw	r30, r28
    1344:	e1 5e       	subi	r30, 0xE1	; 225
    1346:	fe 4f       	sbci	r31, 0xFE	; 254
    1348:	60 81       	ld	r22, Z
    134a:	71 81       	ldd	r23, Z+1	; 0x01
    134c:	82 81       	ldd	r24, Z+2	; 0x02
    134e:	93 81       	ldd	r25, Z+3	; 0x03
    1350:	20 e0       	ldi	r18, 0x00	; 0
    1352:	30 e0       	ldi	r19, 0x00	; 0
    1354:	40 e8       	ldi	r20, 0x80	; 128
    1356:	5f e3       	ldi	r21, 0x3F	; 63
    1358:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    135c:	88 23       	and	r24, r24
    135e:	44 f4       	brge	.+16     	; 0x1370 <main+0x83a>
		__ticks = 1;
    1360:	fe 01       	movw	r30, r28
    1362:	e3 5e       	subi	r30, 0xE3	; 227
    1364:	fe 4f       	sbci	r31, 0xFE	; 254
    1366:	81 e0       	ldi	r24, 0x01	; 1
    1368:	90 e0       	ldi	r25, 0x00	; 0
    136a:	91 83       	std	Z+1, r25	; 0x01
    136c:	80 83       	st	Z, r24
    136e:	64 c0       	rjmp	.+200    	; 0x1438 <main+0x902>
	else if (__tmp > 65535)
    1370:	fe 01       	movw	r30, r28
    1372:	e1 5e       	subi	r30, 0xE1	; 225
    1374:	fe 4f       	sbci	r31, 0xFE	; 254
    1376:	60 81       	ld	r22, Z
    1378:	71 81       	ldd	r23, Z+1	; 0x01
    137a:	82 81       	ldd	r24, Z+2	; 0x02
    137c:	93 81       	ldd	r25, Z+3	; 0x03
    137e:	20 e0       	ldi	r18, 0x00	; 0
    1380:	3f ef       	ldi	r19, 0xFF	; 255
    1382:	4f e7       	ldi	r20, 0x7F	; 127
    1384:	57 e4       	ldi	r21, 0x47	; 71
    1386:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    138a:	18 16       	cp	r1, r24
    138c:	0c f0       	brlt	.+2      	; 0x1390 <main+0x85a>
    138e:	43 c0       	rjmp	.+134    	; 0x1416 <main+0x8e0>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1390:	fe 01       	movw	r30, r28
    1392:	ed 5d       	subi	r30, 0xDD	; 221
    1394:	fe 4f       	sbci	r31, 0xFE	; 254
    1396:	60 81       	ld	r22, Z
    1398:	71 81       	ldd	r23, Z+1	; 0x01
    139a:	82 81       	ldd	r24, Z+2	; 0x02
    139c:	93 81       	ldd	r25, Z+3	; 0x03
    139e:	20 e0       	ldi	r18, 0x00	; 0
    13a0:	30 e0       	ldi	r19, 0x00	; 0
    13a2:	40 e2       	ldi	r20, 0x20	; 32
    13a4:	51 e4       	ldi	r21, 0x41	; 65
    13a6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    13aa:	dc 01       	movw	r26, r24
    13ac:	cb 01       	movw	r24, r22
    13ae:	8e 01       	movw	r16, r28
    13b0:	03 5e       	subi	r16, 0xE3	; 227
    13b2:	1e 4f       	sbci	r17, 0xFE	; 254
    13b4:	bc 01       	movw	r22, r24
    13b6:	cd 01       	movw	r24, r26
    13b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    13bc:	dc 01       	movw	r26, r24
    13be:	cb 01       	movw	r24, r22
    13c0:	f8 01       	movw	r30, r16
    13c2:	91 83       	std	Z+1, r25	; 0x01
    13c4:	80 83       	st	Z, r24
    13c6:	1f c0       	rjmp	.+62     	; 0x1406 <main+0x8d0>
    13c8:	fe 01       	movw	r30, r28
    13ca:	e5 5e       	subi	r30, 0xE5	; 229
    13cc:	fe 4f       	sbci	r31, 0xFE	; 254
    13ce:	80 e9       	ldi	r24, 0x90	; 144
    13d0:	91 e0       	ldi	r25, 0x01	; 1
    13d2:	91 83       	std	Z+1, r25	; 0x01
    13d4:	80 83       	st	Z, r24
    13d6:	fe 01       	movw	r30, r28
    13d8:	e5 5e       	subi	r30, 0xE5	; 229
    13da:	fe 4f       	sbci	r31, 0xFE	; 254
    13dc:	80 81       	ld	r24, Z
    13de:	91 81       	ldd	r25, Z+1	; 0x01
    13e0:	01 97       	sbiw	r24, 0x01	; 1
    13e2:	f1 f7       	brne	.-4      	; 0x13e0 <main+0x8aa>
    13e4:	fe 01       	movw	r30, r28
    13e6:	e5 5e       	subi	r30, 0xE5	; 229
    13e8:	fe 4f       	sbci	r31, 0xFE	; 254
    13ea:	91 83       	std	Z+1, r25	; 0x01
    13ec:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    13ee:	de 01       	movw	r26, r28
    13f0:	a3 5e       	subi	r26, 0xE3	; 227
    13f2:	be 4f       	sbci	r27, 0xFE	; 254
    13f4:	fe 01       	movw	r30, r28
    13f6:	e3 5e       	subi	r30, 0xE3	; 227
    13f8:	fe 4f       	sbci	r31, 0xFE	; 254
    13fa:	80 81       	ld	r24, Z
    13fc:	91 81       	ldd	r25, Z+1	; 0x01
    13fe:	01 97       	sbiw	r24, 0x01	; 1
    1400:	11 96       	adiw	r26, 0x01	; 1
    1402:	9c 93       	st	X, r25
    1404:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1406:	fe 01       	movw	r30, r28
    1408:	e3 5e       	subi	r30, 0xE3	; 227
    140a:	fe 4f       	sbci	r31, 0xFE	; 254
    140c:	80 81       	ld	r24, Z
    140e:	91 81       	ldd	r25, Z+1	; 0x01
    1410:	00 97       	sbiw	r24, 0x00	; 0
    1412:	d1 f6       	brne	.-76     	; 0x13c8 <main+0x892>
    1414:	27 c0       	rjmp	.+78     	; 0x1464 <main+0x92e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1416:	8e 01       	movw	r16, r28
    1418:	03 5e       	subi	r16, 0xE3	; 227
    141a:	1e 4f       	sbci	r17, 0xFE	; 254
    141c:	fe 01       	movw	r30, r28
    141e:	e1 5e       	subi	r30, 0xE1	; 225
    1420:	fe 4f       	sbci	r31, 0xFE	; 254
    1422:	60 81       	ld	r22, Z
    1424:	71 81       	ldd	r23, Z+1	; 0x01
    1426:	82 81       	ldd	r24, Z+2	; 0x02
    1428:	93 81       	ldd	r25, Z+3	; 0x03
    142a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    142e:	dc 01       	movw	r26, r24
    1430:	cb 01       	movw	r24, r22
    1432:	f8 01       	movw	r30, r16
    1434:	91 83       	std	Z+1, r25	; 0x01
    1436:	80 83       	st	Z, r24
    1438:	de 01       	movw	r26, r28
    143a:	a7 5e       	subi	r26, 0xE7	; 231
    143c:	be 4f       	sbci	r27, 0xFE	; 254
    143e:	fe 01       	movw	r30, r28
    1440:	e3 5e       	subi	r30, 0xE3	; 227
    1442:	fe 4f       	sbci	r31, 0xFE	; 254
    1444:	80 81       	ld	r24, Z
    1446:	91 81       	ldd	r25, Z+1	; 0x01
    1448:	8d 93       	st	X+, r24
    144a:	9c 93       	st	X, r25
    144c:	fe 01       	movw	r30, r28
    144e:	e7 5e       	subi	r30, 0xE7	; 231
    1450:	fe 4f       	sbci	r31, 0xFE	; 254
    1452:	80 81       	ld	r24, Z
    1454:	91 81       	ldd	r25, Z+1	; 0x01
    1456:	01 97       	sbiw	r24, 0x01	; 1
    1458:	f1 f7       	brne	.-4      	; 0x1456 <main+0x920>
    145a:	fe 01       	movw	r30, r28
    145c:	e7 5e       	subi	r30, 0xE7	; 231
    145e:	fe 4f       	sbci	r31, 0xFE	; 254
    1460:	91 83       	std	Z+1, r25	; 0x01
    1462:	80 83       	st	Z, r24
					_delay_ms(300);
					CLR_BIT(PORTC,0);
    1464:	a5 e3       	ldi	r26, 0x35	; 53
    1466:	b0 e0       	ldi	r27, 0x00	; 0
    1468:	e5 e3       	ldi	r30, 0x35	; 53
    146a:	f0 e0       	ldi	r31, 0x00	; 0
    146c:	80 81       	ld	r24, Z
    146e:	8e 7f       	andi	r24, 0xFE	; 254
    1470:	8c 93       	st	X, r24
					CLR_BIT(PORTC,1);
    1472:	a5 e3       	ldi	r26, 0x35	; 53
    1474:	b0 e0       	ldi	r27, 0x00	; 0
    1476:	e5 e3       	ldi	r30, 0x35	; 53
    1478:	f0 e0       	ldi	r31, 0x00	; 0
    147a:	80 81       	ld	r24, Z
    147c:	8d 7f       	andi	r24, 0xFD	; 253
    147e:	8c 93       	st	X, r24
					CLR_BIT(PORTC,2);
    1480:	a5 e3       	ldi	r26, 0x35	; 53
    1482:	b0 e0       	ldi	r27, 0x00	; 0
    1484:	e5 e3       	ldi	r30, 0x35	; 53
    1486:	f0 e0       	ldi	r31, 0x00	; 0
    1488:	80 81       	ld	r24, Z
    148a:	8b 7f       	andi	r24, 0xFB	; 251
    148c:	8c 93       	st	X, r24
					LCD_clearScreen();
    148e:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					state = MAIN_MENU; // Move to the main menu
    1492:	fe 01       	movw	r30, r28
    1494:	e0 5a       	subi	r30, 0xA0	; 160
    1496:	fe 4f       	sbci	r31, 0xFE	; 254
    1498:	81 e0       	ldi	r24, 0x01	; 1
    149a:	80 83       	st	Z, r24
    149c:	8d cb       	rjmp	.-2278   	; 0xbb8 <main+0x82>
				} else {
					LCD_clearScreen();
    149e:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					LCD_displayString("Undefined Input");
    14a2:	8b e7       	ldi	r24, 0x7B	; 123
    14a4:	90 e0       	ldi	r25, 0x00	; 0
    14a6:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    14aa:	fe 01       	movw	r30, r28
    14ac:	eb 5e       	subi	r30, 0xEB	; 235
    14ae:	fe 4f       	sbci	r31, 0xFE	; 254
    14b0:	80 e0       	ldi	r24, 0x00	; 0
    14b2:	90 e0       	ldi	r25, 0x00	; 0
    14b4:	aa ef       	ldi	r26, 0xFA	; 250
    14b6:	b3 e4       	ldi	r27, 0x43	; 67
    14b8:	80 83       	st	Z, r24
    14ba:	91 83       	std	Z+1, r25	; 0x01
    14bc:	a2 83       	std	Z+2, r26	; 0x02
    14be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    14c0:	8e 01       	movw	r16, r28
    14c2:	0f 5e       	subi	r16, 0xEF	; 239
    14c4:	1e 4f       	sbci	r17, 0xFE	; 254
    14c6:	fe 01       	movw	r30, r28
    14c8:	eb 5e       	subi	r30, 0xEB	; 235
    14ca:	fe 4f       	sbci	r31, 0xFE	; 254
    14cc:	60 81       	ld	r22, Z
    14ce:	71 81       	ldd	r23, Z+1	; 0x01
    14d0:	82 81       	ldd	r24, Z+2	; 0x02
    14d2:	93 81       	ldd	r25, Z+3	; 0x03
    14d4:	20 e0       	ldi	r18, 0x00	; 0
    14d6:	30 e0       	ldi	r19, 0x00	; 0
    14d8:	4a e7       	ldi	r20, 0x7A	; 122
    14da:	55 e4       	ldi	r21, 0x45	; 69
    14dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    14e0:	dc 01       	movw	r26, r24
    14e2:	cb 01       	movw	r24, r22
    14e4:	f8 01       	movw	r30, r16
    14e6:	80 83       	st	Z, r24
    14e8:	91 83       	std	Z+1, r25	; 0x01
    14ea:	a2 83       	std	Z+2, r26	; 0x02
    14ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    14ee:	fe 01       	movw	r30, r28
    14f0:	ef 5e       	subi	r30, 0xEF	; 239
    14f2:	fe 4f       	sbci	r31, 0xFE	; 254
    14f4:	60 81       	ld	r22, Z
    14f6:	71 81       	ldd	r23, Z+1	; 0x01
    14f8:	82 81       	ldd	r24, Z+2	; 0x02
    14fa:	93 81       	ldd	r25, Z+3	; 0x03
    14fc:	20 e0       	ldi	r18, 0x00	; 0
    14fe:	30 e0       	ldi	r19, 0x00	; 0
    1500:	40 e8       	ldi	r20, 0x80	; 128
    1502:	5f e3       	ldi	r21, 0x3F	; 63
    1504:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1508:	88 23       	and	r24, r24
    150a:	44 f4       	brge	.+16     	; 0x151c <main+0x9e6>
		__ticks = 1;
    150c:	fe 01       	movw	r30, r28
    150e:	e1 5f       	subi	r30, 0xF1	; 241
    1510:	fe 4f       	sbci	r31, 0xFE	; 254
    1512:	81 e0       	ldi	r24, 0x01	; 1
    1514:	90 e0       	ldi	r25, 0x00	; 0
    1516:	91 83       	std	Z+1, r25	; 0x01
    1518:	80 83       	st	Z, r24
    151a:	64 c0       	rjmp	.+200    	; 0x15e4 <main+0xaae>
	else if (__tmp > 65535)
    151c:	fe 01       	movw	r30, r28
    151e:	ef 5e       	subi	r30, 0xEF	; 239
    1520:	fe 4f       	sbci	r31, 0xFE	; 254
    1522:	60 81       	ld	r22, Z
    1524:	71 81       	ldd	r23, Z+1	; 0x01
    1526:	82 81       	ldd	r24, Z+2	; 0x02
    1528:	93 81       	ldd	r25, Z+3	; 0x03
    152a:	20 e0       	ldi	r18, 0x00	; 0
    152c:	3f ef       	ldi	r19, 0xFF	; 255
    152e:	4f e7       	ldi	r20, 0x7F	; 127
    1530:	57 e4       	ldi	r21, 0x47	; 71
    1532:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1536:	18 16       	cp	r1, r24
    1538:	0c f0       	brlt	.+2      	; 0x153c <main+0xa06>
    153a:	43 c0       	rjmp	.+134    	; 0x15c2 <main+0xa8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    153c:	fe 01       	movw	r30, r28
    153e:	eb 5e       	subi	r30, 0xEB	; 235
    1540:	fe 4f       	sbci	r31, 0xFE	; 254
    1542:	60 81       	ld	r22, Z
    1544:	71 81       	ldd	r23, Z+1	; 0x01
    1546:	82 81       	ldd	r24, Z+2	; 0x02
    1548:	93 81       	ldd	r25, Z+3	; 0x03
    154a:	20 e0       	ldi	r18, 0x00	; 0
    154c:	30 e0       	ldi	r19, 0x00	; 0
    154e:	40 e2       	ldi	r20, 0x20	; 32
    1550:	51 e4       	ldi	r21, 0x41	; 65
    1552:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1556:	dc 01       	movw	r26, r24
    1558:	cb 01       	movw	r24, r22
    155a:	8e 01       	movw	r16, r28
    155c:	01 5f       	subi	r16, 0xF1	; 241
    155e:	1e 4f       	sbci	r17, 0xFE	; 254
    1560:	bc 01       	movw	r22, r24
    1562:	cd 01       	movw	r24, r26
    1564:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1568:	dc 01       	movw	r26, r24
    156a:	cb 01       	movw	r24, r22
    156c:	f8 01       	movw	r30, r16
    156e:	91 83       	std	Z+1, r25	; 0x01
    1570:	80 83       	st	Z, r24
    1572:	1f c0       	rjmp	.+62     	; 0x15b2 <main+0xa7c>
    1574:	fe 01       	movw	r30, r28
    1576:	e3 5f       	subi	r30, 0xF3	; 243
    1578:	fe 4f       	sbci	r31, 0xFE	; 254
    157a:	80 e9       	ldi	r24, 0x90	; 144
    157c:	91 e0       	ldi	r25, 0x01	; 1
    157e:	91 83       	std	Z+1, r25	; 0x01
    1580:	80 83       	st	Z, r24
    1582:	fe 01       	movw	r30, r28
    1584:	e3 5f       	subi	r30, 0xF3	; 243
    1586:	fe 4f       	sbci	r31, 0xFE	; 254
    1588:	80 81       	ld	r24, Z
    158a:	91 81       	ldd	r25, Z+1	; 0x01
    158c:	01 97       	sbiw	r24, 0x01	; 1
    158e:	f1 f7       	brne	.-4      	; 0x158c <main+0xa56>
    1590:	fe 01       	movw	r30, r28
    1592:	e3 5f       	subi	r30, 0xF3	; 243
    1594:	fe 4f       	sbci	r31, 0xFE	; 254
    1596:	91 83       	std	Z+1, r25	; 0x01
    1598:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    159a:	de 01       	movw	r26, r28
    159c:	a1 5f       	subi	r26, 0xF1	; 241
    159e:	be 4f       	sbci	r27, 0xFE	; 254
    15a0:	fe 01       	movw	r30, r28
    15a2:	e1 5f       	subi	r30, 0xF1	; 241
    15a4:	fe 4f       	sbci	r31, 0xFE	; 254
    15a6:	80 81       	ld	r24, Z
    15a8:	91 81       	ldd	r25, Z+1	; 0x01
    15aa:	01 97       	sbiw	r24, 0x01	; 1
    15ac:	11 96       	adiw	r26, 0x01	; 1
    15ae:	9c 93       	st	X, r25
    15b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    15b2:	fe 01       	movw	r30, r28
    15b4:	e1 5f       	subi	r30, 0xF1	; 241
    15b6:	fe 4f       	sbci	r31, 0xFE	; 254
    15b8:	80 81       	ld	r24, Z
    15ba:	91 81       	ldd	r25, Z+1	; 0x01
    15bc:	00 97       	sbiw	r24, 0x00	; 0
    15be:	d1 f6       	brne	.-76     	; 0x1574 <main+0xa3e>
    15c0:	27 c0       	rjmp	.+78     	; 0x1610 <main+0xada>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    15c2:	8e 01       	movw	r16, r28
    15c4:	01 5f       	subi	r16, 0xF1	; 241
    15c6:	1e 4f       	sbci	r17, 0xFE	; 254
    15c8:	fe 01       	movw	r30, r28
    15ca:	ef 5e       	subi	r30, 0xEF	; 239
    15cc:	fe 4f       	sbci	r31, 0xFE	; 254
    15ce:	60 81       	ld	r22, Z
    15d0:	71 81       	ldd	r23, Z+1	; 0x01
    15d2:	82 81       	ldd	r24, Z+2	; 0x02
    15d4:	93 81       	ldd	r25, Z+3	; 0x03
    15d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    15da:	dc 01       	movw	r26, r24
    15dc:	cb 01       	movw	r24, r22
    15de:	f8 01       	movw	r30, r16
    15e0:	91 83       	std	Z+1, r25	; 0x01
    15e2:	80 83       	st	Z, r24
    15e4:	de 01       	movw	r26, r28
    15e6:	a5 5f       	subi	r26, 0xF5	; 245
    15e8:	be 4f       	sbci	r27, 0xFE	; 254
    15ea:	fe 01       	movw	r30, r28
    15ec:	e1 5f       	subi	r30, 0xF1	; 241
    15ee:	fe 4f       	sbci	r31, 0xFE	; 254
    15f0:	80 81       	ld	r24, Z
    15f2:	91 81       	ldd	r25, Z+1	; 0x01
    15f4:	8d 93       	st	X+, r24
    15f6:	9c 93       	st	X, r25
    15f8:	fe 01       	movw	r30, r28
    15fa:	e5 5f       	subi	r30, 0xF5	; 245
    15fc:	fe 4f       	sbci	r31, 0xFE	; 254
    15fe:	80 81       	ld	r24, Z
    1600:	91 81       	ldd	r25, Z+1	; 0x01
    1602:	01 97       	sbiw	r24, 0x01	; 1
    1604:	f1 f7       	brne	.-4      	; 0x1602 <main+0xacc>
    1606:	fe 01       	movw	r30, r28
    1608:	e5 5f       	subi	r30, 0xF5	; 245
    160a:	fe 4f       	sbci	r31, 0xFE	; 254
    160c:	91 83       	std	Z+1, r25	; 0x01
    160e:	80 83       	st	Z, r24
					_delay_ms(500);
					LCD_clearScreen();
    1610:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					state = START_MENU; // Reset to start menu in case of any unexpected state
    1614:	fe 01       	movw	r30, r28
    1616:	e0 5a       	subi	r30, 0xA0	; 160
    1618:	fe 4f       	sbci	r31, 0xFE	; 254
    161a:	10 82       	st	Z, r1
    161c:	cd ca       	rjmp	.-2662   	; 0xbb8 <main+0x82>
				}
				break;

			case MAIN_MENU:
				state = Display_MainMenu();
    161e:	0e 94 4d 18 	call	0x309a	; 0x309a <Display_MainMenu>
    1622:	fe 01       	movw	r30, r28
    1624:	e0 5a       	subi	r30, 0xA0	; 160
    1626:	fe 4f       	sbci	r31, 0xFE	; 254
    1628:	80 83       	st	Z, r24
    162a:	c6 ca       	rjmp	.-2676   	; 0xbb8 <main+0x82>
				break;

			case LEFT_SIGNAL_STATE:
				LCD_displayString("Left Signal");
    162c:	8b e8       	ldi	r24, 0x8B	; 139
    162e:	90 e0       	ldi	r25, 0x00	; 0
    1630:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
				SET_BIT(PORTC,2);
    1634:	a5 e3       	ldi	r26, 0x35	; 53
    1636:	b0 e0       	ldi	r27, 0x00	; 0
    1638:	e5 e3       	ldi	r30, 0x35	; 53
    163a:	f0 e0       	ldi	r31, 0x00	; 0
    163c:	80 81       	ld	r24, Z
    163e:	84 60       	ori	r24, 0x04	; 4
    1640:	8c 93       	st	X, r24
    1642:	fe 01       	movw	r30, r28
    1644:	e9 5f       	subi	r30, 0xF9	; 249
    1646:	fe 4f       	sbci	r31, 0xFE	; 254
    1648:	80 e0       	ldi	r24, 0x00	; 0
    164a:	90 e0       	ldi	r25, 0x00	; 0
    164c:	a8 e4       	ldi	r26, 0x48	; 72
    164e:	b4 e4       	ldi	r27, 0x44	; 68
    1650:	80 83       	st	Z, r24
    1652:	91 83       	std	Z+1, r25	; 0x01
    1654:	a2 83       	std	Z+2, r26	; 0x02
    1656:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1658:	8e 01       	movw	r16, r28
    165a:	0d 5f       	subi	r16, 0xFD	; 253
    165c:	1e 4f       	sbci	r17, 0xFE	; 254
    165e:	fe 01       	movw	r30, r28
    1660:	e9 5f       	subi	r30, 0xF9	; 249
    1662:	fe 4f       	sbci	r31, 0xFE	; 254
    1664:	60 81       	ld	r22, Z
    1666:	71 81       	ldd	r23, Z+1	; 0x01
    1668:	82 81       	ldd	r24, Z+2	; 0x02
    166a:	93 81       	ldd	r25, Z+3	; 0x03
    166c:	20 e0       	ldi	r18, 0x00	; 0
    166e:	30 e0       	ldi	r19, 0x00	; 0
    1670:	4a e7       	ldi	r20, 0x7A	; 122
    1672:	55 e4       	ldi	r21, 0x45	; 69
    1674:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1678:	dc 01       	movw	r26, r24
    167a:	cb 01       	movw	r24, r22
    167c:	f8 01       	movw	r30, r16
    167e:	80 83       	st	Z, r24
    1680:	91 83       	std	Z+1, r25	; 0x01
    1682:	a2 83       	std	Z+2, r26	; 0x02
    1684:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1686:	fe 01       	movw	r30, r28
    1688:	ed 5f       	subi	r30, 0xFD	; 253
    168a:	fe 4f       	sbci	r31, 0xFE	; 254
    168c:	60 81       	ld	r22, Z
    168e:	71 81       	ldd	r23, Z+1	; 0x01
    1690:	82 81       	ldd	r24, Z+2	; 0x02
    1692:	93 81       	ldd	r25, Z+3	; 0x03
    1694:	20 e0       	ldi	r18, 0x00	; 0
    1696:	30 e0       	ldi	r19, 0x00	; 0
    1698:	40 e8       	ldi	r20, 0x80	; 128
    169a:	5f e3       	ldi	r21, 0x3F	; 63
    169c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    16a0:	88 23       	and	r24, r24
    16a2:	44 f4       	brge	.+16     	; 0x16b4 <main+0xb7e>
		__ticks = 1;
    16a4:	fe 01       	movw	r30, r28
    16a6:	ef 5f       	subi	r30, 0xFF	; 255
    16a8:	fe 4f       	sbci	r31, 0xFE	; 254
    16aa:	81 e0       	ldi	r24, 0x01	; 1
    16ac:	90 e0       	ldi	r25, 0x00	; 0
    16ae:	91 83       	std	Z+1, r25	; 0x01
    16b0:	80 83       	st	Z, r24
    16b2:	64 c0       	rjmp	.+200    	; 0x177c <main+0xc46>
	else if (__tmp > 65535)
    16b4:	fe 01       	movw	r30, r28
    16b6:	ed 5f       	subi	r30, 0xFD	; 253
    16b8:	fe 4f       	sbci	r31, 0xFE	; 254
    16ba:	60 81       	ld	r22, Z
    16bc:	71 81       	ldd	r23, Z+1	; 0x01
    16be:	82 81       	ldd	r24, Z+2	; 0x02
    16c0:	93 81       	ldd	r25, Z+3	; 0x03
    16c2:	20 e0       	ldi	r18, 0x00	; 0
    16c4:	3f ef       	ldi	r19, 0xFF	; 255
    16c6:	4f e7       	ldi	r20, 0x7F	; 127
    16c8:	57 e4       	ldi	r21, 0x47	; 71
    16ca:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    16ce:	18 16       	cp	r1, r24
    16d0:	0c f0       	brlt	.+2      	; 0x16d4 <main+0xb9e>
    16d2:	43 c0       	rjmp	.+134    	; 0x175a <main+0xc24>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    16d4:	fe 01       	movw	r30, r28
    16d6:	e9 5f       	subi	r30, 0xF9	; 249
    16d8:	fe 4f       	sbci	r31, 0xFE	; 254
    16da:	60 81       	ld	r22, Z
    16dc:	71 81       	ldd	r23, Z+1	; 0x01
    16de:	82 81       	ldd	r24, Z+2	; 0x02
    16e0:	93 81       	ldd	r25, Z+3	; 0x03
    16e2:	20 e0       	ldi	r18, 0x00	; 0
    16e4:	30 e0       	ldi	r19, 0x00	; 0
    16e6:	40 e2       	ldi	r20, 0x20	; 32
    16e8:	51 e4       	ldi	r21, 0x41	; 65
    16ea:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    16ee:	dc 01       	movw	r26, r24
    16f0:	cb 01       	movw	r24, r22
    16f2:	8e 01       	movw	r16, r28
    16f4:	0f 5f       	subi	r16, 0xFF	; 255
    16f6:	1e 4f       	sbci	r17, 0xFE	; 254
    16f8:	bc 01       	movw	r22, r24
    16fa:	cd 01       	movw	r24, r26
    16fc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1700:	dc 01       	movw	r26, r24
    1702:	cb 01       	movw	r24, r22
    1704:	f8 01       	movw	r30, r16
    1706:	91 83       	std	Z+1, r25	; 0x01
    1708:	80 83       	st	Z, r24
    170a:	1f c0       	rjmp	.+62     	; 0x174a <main+0xc14>
    170c:	fe 01       	movw	r30, r28
    170e:	e1 50       	subi	r30, 0x01	; 1
    1710:	ff 4f       	sbci	r31, 0xFF	; 255
    1712:	80 e9       	ldi	r24, 0x90	; 144
    1714:	91 e0       	ldi	r25, 0x01	; 1
    1716:	91 83       	std	Z+1, r25	; 0x01
    1718:	80 83       	st	Z, r24
    171a:	fe 01       	movw	r30, r28
    171c:	e1 50       	subi	r30, 0x01	; 1
    171e:	ff 4f       	sbci	r31, 0xFF	; 255
    1720:	80 81       	ld	r24, Z
    1722:	91 81       	ldd	r25, Z+1	; 0x01
    1724:	01 97       	sbiw	r24, 0x01	; 1
    1726:	f1 f7       	brne	.-4      	; 0x1724 <main+0xbee>
    1728:	fe 01       	movw	r30, r28
    172a:	e1 50       	subi	r30, 0x01	; 1
    172c:	ff 4f       	sbci	r31, 0xFF	; 255
    172e:	91 83       	std	Z+1, r25	; 0x01
    1730:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1732:	de 01       	movw	r26, r28
    1734:	af 5f       	subi	r26, 0xFF	; 255
    1736:	be 4f       	sbci	r27, 0xFE	; 254
    1738:	fe 01       	movw	r30, r28
    173a:	ef 5f       	subi	r30, 0xFF	; 255
    173c:	fe 4f       	sbci	r31, 0xFE	; 254
    173e:	80 81       	ld	r24, Z
    1740:	91 81       	ldd	r25, Z+1	; 0x01
    1742:	01 97       	sbiw	r24, 0x01	; 1
    1744:	11 96       	adiw	r26, 0x01	; 1
    1746:	9c 93       	st	X, r25
    1748:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    174a:	fe 01       	movw	r30, r28
    174c:	ef 5f       	subi	r30, 0xFF	; 255
    174e:	fe 4f       	sbci	r31, 0xFE	; 254
    1750:	80 81       	ld	r24, Z
    1752:	91 81       	ldd	r25, Z+1	; 0x01
    1754:	00 97       	sbiw	r24, 0x00	; 0
    1756:	d1 f6       	brne	.-76     	; 0x170c <main+0xbd6>
    1758:	27 c0       	rjmp	.+78     	; 0x17a8 <main+0xc72>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    175a:	8e 01       	movw	r16, r28
    175c:	0f 5f       	subi	r16, 0xFF	; 255
    175e:	1e 4f       	sbci	r17, 0xFE	; 254
    1760:	fe 01       	movw	r30, r28
    1762:	ed 5f       	subi	r30, 0xFD	; 253
    1764:	fe 4f       	sbci	r31, 0xFE	; 254
    1766:	60 81       	ld	r22, Z
    1768:	71 81       	ldd	r23, Z+1	; 0x01
    176a:	82 81       	ldd	r24, Z+2	; 0x02
    176c:	93 81       	ldd	r25, Z+3	; 0x03
    176e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1772:	dc 01       	movw	r26, r24
    1774:	cb 01       	movw	r24, r22
    1776:	f8 01       	movw	r30, r16
    1778:	91 83       	std	Z+1, r25	; 0x01
    177a:	80 83       	st	Z, r24
    177c:	de 01       	movw	r26, r28
    177e:	a3 50       	subi	r26, 0x03	; 3
    1780:	bf 4f       	sbci	r27, 0xFF	; 255
    1782:	fe 01       	movw	r30, r28
    1784:	ef 5f       	subi	r30, 0xFF	; 255
    1786:	fe 4f       	sbci	r31, 0xFE	; 254
    1788:	80 81       	ld	r24, Z
    178a:	91 81       	ldd	r25, Z+1	; 0x01
    178c:	8d 93       	st	X+, r24
    178e:	9c 93       	st	X, r25
    1790:	fe 01       	movw	r30, r28
    1792:	e3 50       	subi	r30, 0x03	; 3
    1794:	ff 4f       	sbci	r31, 0xFF	; 255
    1796:	80 81       	ld	r24, Z
    1798:	91 81       	ldd	r25, Z+1	; 0x01
    179a:	01 97       	sbiw	r24, 0x01	; 1
    179c:	f1 f7       	brne	.-4      	; 0x179a <main+0xc64>
    179e:	fe 01       	movw	r30, r28
    17a0:	e3 50       	subi	r30, 0x03	; 3
    17a2:	ff 4f       	sbci	r31, 0xFF	; 255
    17a4:	91 83       	std	Z+1, r25	; 0x01
    17a6:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    17a8:	a5 e3       	ldi	r26, 0x35	; 53
    17aa:	b0 e0       	ldi	r27, 0x00	; 0
    17ac:	e5 e3       	ldi	r30, 0x35	; 53
    17ae:	f0 e0       	ldi	r31, 0x00	; 0
    17b0:	80 81       	ld	r24, Z
    17b2:	8b 7f       	andi	r24, 0xFB	; 251
    17b4:	8c 93       	st	X, r24
    17b6:	fe 01       	movw	r30, r28
    17b8:	e7 50       	subi	r30, 0x07	; 7
    17ba:	ff 4f       	sbci	r31, 0xFF	; 255
    17bc:	80 e0       	ldi	r24, 0x00	; 0
    17be:	90 e0       	ldi	r25, 0x00	; 0
    17c0:	a8 e4       	ldi	r26, 0x48	; 72
    17c2:	b4 e4       	ldi	r27, 0x44	; 68
    17c4:	80 83       	st	Z, r24
    17c6:	91 83       	std	Z+1, r25	; 0x01
    17c8:	a2 83       	std	Z+2, r26	; 0x02
    17ca:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    17cc:	8e 01       	movw	r16, r28
    17ce:	0b 50       	subi	r16, 0x0B	; 11
    17d0:	1f 4f       	sbci	r17, 0xFF	; 255
    17d2:	fe 01       	movw	r30, r28
    17d4:	e7 50       	subi	r30, 0x07	; 7
    17d6:	ff 4f       	sbci	r31, 0xFF	; 255
    17d8:	60 81       	ld	r22, Z
    17da:	71 81       	ldd	r23, Z+1	; 0x01
    17dc:	82 81       	ldd	r24, Z+2	; 0x02
    17de:	93 81       	ldd	r25, Z+3	; 0x03
    17e0:	20 e0       	ldi	r18, 0x00	; 0
    17e2:	30 e0       	ldi	r19, 0x00	; 0
    17e4:	4a e7       	ldi	r20, 0x7A	; 122
    17e6:	55 e4       	ldi	r21, 0x45	; 69
    17e8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    17ec:	dc 01       	movw	r26, r24
    17ee:	cb 01       	movw	r24, r22
    17f0:	f8 01       	movw	r30, r16
    17f2:	80 83       	st	Z, r24
    17f4:	91 83       	std	Z+1, r25	; 0x01
    17f6:	a2 83       	std	Z+2, r26	; 0x02
    17f8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    17fa:	fe 01       	movw	r30, r28
    17fc:	eb 50       	subi	r30, 0x0B	; 11
    17fe:	ff 4f       	sbci	r31, 0xFF	; 255
    1800:	60 81       	ld	r22, Z
    1802:	71 81       	ldd	r23, Z+1	; 0x01
    1804:	82 81       	ldd	r24, Z+2	; 0x02
    1806:	93 81       	ldd	r25, Z+3	; 0x03
    1808:	20 e0       	ldi	r18, 0x00	; 0
    180a:	30 e0       	ldi	r19, 0x00	; 0
    180c:	40 e8       	ldi	r20, 0x80	; 128
    180e:	5f e3       	ldi	r21, 0x3F	; 63
    1810:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1814:	88 23       	and	r24, r24
    1816:	44 f4       	brge	.+16     	; 0x1828 <main+0xcf2>
		__ticks = 1;
    1818:	fe 01       	movw	r30, r28
    181a:	ed 50       	subi	r30, 0x0D	; 13
    181c:	ff 4f       	sbci	r31, 0xFF	; 255
    181e:	81 e0       	ldi	r24, 0x01	; 1
    1820:	90 e0       	ldi	r25, 0x00	; 0
    1822:	91 83       	std	Z+1, r25	; 0x01
    1824:	80 83       	st	Z, r24
    1826:	64 c0       	rjmp	.+200    	; 0x18f0 <main+0xdba>
	else if (__tmp > 65535)
    1828:	fe 01       	movw	r30, r28
    182a:	eb 50       	subi	r30, 0x0B	; 11
    182c:	ff 4f       	sbci	r31, 0xFF	; 255
    182e:	60 81       	ld	r22, Z
    1830:	71 81       	ldd	r23, Z+1	; 0x01
    1832:	82 81       	ldd	r24, Z+2	; 0x02
    1834:	93 81       	ldd	r25, Z+3	; 0x03
    1836:	20 e0       	ldi	r18, 0x00	; 0
    1838:	3f ef       	ldi	r19, 0xFF	; 255
    183a:	4f e7       	ldi	r20, 0x7F	; 127
    183c:	57 e4       	ldi	r21, 0x47	; 71
    183e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1842:	18 16       	cp	r1, r24
    1844:	0c f0       	brlt	.+2      	; 0x1848 <main+0xd12>
    1846:	43 c0       	rjmp	.+134    	; 0x18ce <main+0xd98>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1848:	fe 01       	movw	r30, r28
    184a:	e7 50       	subi	r30, 0x07	; 7
    184c:	ff 4f       	sbci	r31, 0xFF	; 255
    184e:	60 81       	ld	r22, Z
    1850:	71 81       	ldd	r23, Z+1	; 0x01
    1852:	82 81       	ldd	r24, Z+2	; 0x02
    1854:	93 81       	ldd	r25, Z+3	; 0x03
    1856:	20 e0       	ldi	r18, 0x00	; 0
    1858:	30 e0       	ldi	r19, 0x00	; 0
    185a:	40 e2       	ldi	r20, 0x20	; 32
    185c:	51 e4       	ldi	r21, 0x41	; 65
    185e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1862:	dc 01       	movw	r26, r24
    1864:	cb 01       	movw	r24, r22
    1866:	8e 01       	movw	r16, r28
    1868:	0d 50       	subi	r16, 0x0D	; 13
    186a:	1f 4f       	sbci	r17, 0xFF	; 255
    186c:	bc 01       	movw	r22, r24
    186e:	cd 01       	movw	r24, r26
    1870:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1874:	dc 01       	movw	r26, r24
    1876:	cb 01       	movw	r24, r22
    1878:	f8 01       	movw	r30, r16
    187a:	91 83       	std	Z+1, r25	; 0x01
    187c:	80 83       	st	Z, r24
    187e:	1f c0       	rjmp	.+62     	; 0x18be <main+0xd88>
    1880:	fe 01       	movw	r30, r28
    1882:	ef 50       	subi	r30, 0x0F	; 15
    1884:	ff 4f       	sbci	r31, 0xFF	; 255
    1886:	80 e9       	ldi	r24, 0x90	; 144
    1888:	91 e0       	ldi	r25, 0x01	; 1
    188a:	91 83       	std	Z+1, r25	; 0x01
    188c:	80 83       	st	Z, r24
    188e:	fe 01       	movw	r30, r28
    1890:	ef 50       	subi	r30, 0x0F	; 15
    1892:	ff 4f       	sbci	r31, 0xFF	; 255
    1894:	80 81       	ld	r24, Z
    1896:	91 81       	ldd	r25, Z+1	; 0x01
    1898:	01 97       	sbiw	r24, 0x01	; 1
    189a:	f1 f7       	brne	.-4      	; 0x1898 <main+0xd62>
    189c:	fe 01       	movw	r30, r28
    189e:	ef 50       	subi	r30, 0x0F	; 15
    18a0:	ff 4f       	sbci	r31, 0xFF	; 255
    18a2:	91 83       	std	Z+1, r25	; 0x01
    18a4:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    18a6:	de 01       	movw	r26, r28
    18a8:	ad 50       	subi	r26, 0x0D	; 13
    18aa:	bf 4f       	sbci	r27, 0xFF	; 255
    18ac:	fe 01       	movw	r30, r28
    18ae:	ed 50       	subi	r30, 0x0D	; 13
    18b0:	ff 4f       	sbci	r31, 0xFF	; 255
    18b2:	80 81       	ld	r24, Z
    18b4:	91 81       	ldd	r25, Z+1	; 0x01
    18b6:	01 97       	sbiw	r24, 0x01	; 1
    18b8:	11 96       	adiw	r26, 0x01	; 1
    18ba:	9c 93       	st	X, r25
    18bc:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    18be:	fe 01       	movw	r30, r28
    18c0:	ed 50       	subi	r30, 0x0D	; 13
    18c2:	ff 4f       	sbci	r31, 0xFF	; 255
    18c4:	80 81       	ld	r24, Z
    18c6:	91 81       	ldd	r25, Z+1	; 0x01
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	d1 f6       	brne	.-76     	; 0x1880 <main+0xd4a>
    18cc:	27 c0       	rjmp	.+78     	; 0x191c <main+0xde6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    18ce:	8e 01       	movw	r16, r28
    18d0:	0d 50       	subi	r16, 0x0D	; 13
    18d2:	1f 4f       	sbci	r17, 0xFF	; 255
    18d4:	fe 01       	movw	r30, r28
    18d6:	eb 50       	subi	r30, 0x0B	; 11
    18d8:	ff 4f       	sbci	r31, 0xFF	; 255
    18da:	60 81       	ld	r22, Z
    18dc:	71 81       	ldd	r23, Z+1	; 0x01
    18de:	82 81       	ldd	r24, Z+2	; 0x02
    18e0:	93 81       	ldd	r25, Z+3	; 0x03
    18e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    18e6:	dc 01       	movw	r26, r24
    18e8:	cb 01       	movw	r24, r22
    18ea:	f8 01       	movw	r30, r16
    18ec:	91 83       	std	Z+1, r25	; 0x01
    18ee:	80 83       	st	Z, r24
    18f0:	de 01       	movw	r26, r28
    18f2:	a1 51       	subi	r26, 0x11	; 17
    18f4:	bf 4f       	sbci	r27, 0xFF	; 255
    18f6:	fe 01       	movw	r30, r28
    18f8:	ed 50       	subi	r30, 0x0D	; 13
    18fa:	ff 4f       	sbci	r31, 0xFF	; 255
    18fc:	80 81       	ld	r24, Z
    18fe:	91 81       	ldd	r25, Z+1	; 0x01
    1900:	8d 93       	st	X+, r24
    1902:	9c 93       	st	X, r25
    1904:	fe 01       	movw	r30, r28
    1906:	e1 51       	subi	r30, 0x11	; 17
    1908:	ff 4f       	sbci	r31, 0xFF	; 255
    190a:	80 81       	ld	r24, Z
    190c:	91 81       	ldd	r25, Z+1	; 0x01
    190e:	01 97       	sbiw	r24, 0x01	; 1
    1910:	f1 f7       	brne	.-4      	; 0x190e <main+0xdd8>
    1912:	fe 01       	movw	r30, r28
    1914:	e1 51       	subi	r30, 0x11	; 17
    1916:	ff 4f       	sbci	r31, 0xFF	; 255
    1918:	91 83       	std	Z+1, r25	; 0x01
    191a:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,2);
    191c:	a5 e3       	ldi	r26, 0x35	; 53
    191e:	b0 e0       	ldi	r27, 0x00	; 0
    1920:	e5 e3       	ldi	r30, 0x35	; 53
    1922:	f0 e0       	ldi	r31, 0x00	; 0
    1924:	80 81       	ld	r24, Z
    1926:	84 60       	ori	r24, 0x04	; 4
    1928:	8c 93       	st	X, r24
    192a:	fe 01       	movw	r30, r28
    192c:	e5 51       	subi	r30, 0x15	; 21
    192e:	ff 4f       	sbci	r31, 0xFF	; 255
    1930:	80 e0       	ldi	r24, 0x00	; 0
    1932:	90 e0       	ldi	r25, 0x00	; 0
    1934:	a8 e4       	ldi	r26, 0x48	; 72
    1936:	b4 e4       	ldi	r27, 0x44	; 68
    1938:	80 83       	st	Z, r24
    193a:	91 83       	std	Z+1, r25	; 0x01
    193c:	a2 83       	std	Z+2, r26	; 0x02
    193e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1940:	8e 01       	movw	r16, r28
    1942:	09 51       	subi	r16, 0x19	; 25
    1944:	1f 4f       	sbci	r17, 0xFF	; 255
    1946:	fe 01       	movw	r30, r28
    1948:	e5 51       	subi	r30, 0x15	; 21
    194a:	ff 4f       	sbci	r31, 0xFF	; 255
    194c:	60 81       	ld	r22, Z
    194e:	71 81       	ldd	r23, Z+1	; 0x01
    1950:	82 81       	ldd	r24, Z+2	; 0x02
    1952:	93 81       	ldd	r25, Z+3	; 0x03
    1954:	20 e0       	ldi	r18, 0x00	; 0
    1956:	30 e0       	ldi	r19, 0x00	; 0
    1958:	4a e7       	ldi	r20, 0x7A	; 122
    195a:	55 e4       	ldi	r21, 0x45	; 69
    195c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1960:	dc 01       	movw	r26, r24
    1962:	cb 01       	movw	r24, r22
    1964:	f8 01       	movw	r30, r16
    1966:	80 83       	st	Z, r24
    1968:	91 83       	std	Z+1, r25	; 0x01
    196a:	a2 83       	std	Z+2, r26	; 0x02
    196c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    196e:	fe 01       	movw	r30, r28
    1970:	e9 51       	subi	r30, 0x19	; 25
    1972:	ff 4f       	sbci	r31, 0xFF	; 255
    1974:	60 81       	ld	r22, Z
    1976:	71 81       	ldd	r23, Z+1	; 0x01
    1978:	82 81       	ldd	r24, Z+2	; 0x02
    197a:	93 81       	ldd	r25, Z+3	; 0x03
    197c:	20 e0       	ldi	r18, 0x00	; 0
    197e:	30 e0       	ldi	r19, 0x00	; 0
    1980:	40 e8       	ldi	r20, 0x80	; 128
    1982:	5f e3       	ldi	r21, 0x3F	; 63
    1984:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1988:	88 23       	and	r24, r24
    198a:	44 f4       	brge	.+16     	; 0x199c <main+0xe66>
		__ticks = 1;
    198c:	fe 01       	movw	r30, r28
    198e:	eb 51       	subi	r30, 0x1B	; 27
    1990:	ff 4f       	sbci	r31, 0xFF	; 255
    1992:	81 e0       	ldi	r24, 0x01	; 1
    1994:	90 e0       	ldi	r25, 0x00	; 0
    1996:	91 83       	std	Z+1, r25	; 0x01
    1998:	80 83       	st	Z, r24
    199a:	64 c0       	rjmp	.+200    	; 0x1a64 <main+0xf2e>
	else if (__tmp > 65535)
    199c:	fe 01       	movw	r30, r28
    199e:	e9 51       	subi	r30, 0x19	; 25
    19a0:	ff 4f       	sbci	r31, 0xFF	; 255
    19a2:	60 81       	ld	r22, Z
    19a4:	71 81       	ldd	r23, Z+1	; 0x01
    19a6:	82 81       	ldd	r24, Z+2	; 0x02
    19a8:	93 81       	ldd	r25, Z+3	; 0x03
    19aa:	20 e0       	ldi	r18, 0x00	; 0
    19ac:	3f ef       	ldi	r19, 0xFF	; 255
    19ae:	4f e7       	ldi	r20, 0x7F	; 127
    19b0:	57 e4       	ldi	r21, 0x47	; 71
    19b2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    19b6:	18 16       	cp	r1, r24
    19b8:	0c f0       	brlt	.+2      	; 0x19bc <main+0xe86>
    19ba:	43 c0       	rjmp	.+134    	; 0x1a42 <main+0xf0c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    19bc:	fe 01       	movw	r30, r28
    19be:	e5 51       	subi	r30, 0x15	; 21
    19c0:	ff 4f       	sbci	r31, 0xFF	; 255
    19c2:	60 81       	ld	r22, Z
    19c4:	71 81       	ldd	r23, Z+1	; 0x01
    19c6:	82 81       	ldd	r24, Z+2	; 0x02
    19c8:	93 81       	ldd	r25, Z+3	; 0x03
    19ca:	20 e0       	ldi	r18, 0x00	; 0
    19cc:	30 e0       	ldi	r19, 0x00	; 0
    19ce:	40 e2       	ldi	r20, 0x20	; 32
    19d0:	51 e4       	ldi	r21, 0x41	; 65
    19d2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    19d6:	dc 01       	movw	r26, r24
    19d8:	cb 01       	movw	r24, r22
    19da:	8e 01       	movw	r16, r28
    19dc:	0b 51       	subi	r16, 0x1B	; 27
    19de:	1f 4f       	sbci	r17, 0xFF	; 255
    19e0:	bc 01       	movw	r22, r24
    19e2:	cd 01       	movw	r24, r26
    19e4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    19e8:	dc 01       	movw	r26, r24
    19ea:	cb 01       	movw	r24, r22
    19ec:	f8 01       	movw	r30, r16
    19ee:	91 83       	std	Z+1, r25	; 0x01
    19f0:	80 83       	st	Z, r24
    19f2:	1f c0       	rjmp	.+62     	; 0x1a32 <main+0xefc>
    19f4:	fe 01       	movw	r30, r28
    19f6:	ed 51       	subi	r30, 0x1D	; 29
    19f8:	ff 4f       	sbci	r31, 0xFF	; 255
    19fa:	80 e9       	ldi	r24, 0x90	; 144
    19fc:	91 e0       	ldi	r25, 0x01	; 1
    19fe:	91 83       	std	Z+1, r25	; 0x01
    1a00:	80 83       	st	Z, r24
    1a02:	fe 01       	movw	r30, r28
    1a04:	ed 51       	subi	r30, 0x1D	; 29
    1a06:	ff 4f       	sbci	r31, 0xFF	; 255
    1a08:	80 81       	ld	r24, Z
    1a0a:	91 81       	ldd	r25, Z+1	; 0x01
    1a0c:	01 97       	sbiw	r24, 0x01	; 1
    1a0e:	f1 f7       	brne	.-4      	; 0x1a0c <main+0xed6>
    1a10:	fe 01       	movw	r30, r28
    1a12:	ed 51       	subi	r30, 0x1D	; 29
    1a14:	ff 4f       	sbci	r31, 0xFF	; 255
    1a16:	91 83       	std	Z+1, r25	; 0x01
    1a18:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1a1a:	de 01       	movw	r26, r28
    1a1c:	ab 51       	subi	r26, 0x1B	; 27
    1a1e:	bf 4f       	sbci	r27, 0xFF	; 255
    1a20:	fe 01       	movw	r30, r28
    1a22:	eb 51       	subi	r30, 0x1B	; 27
    1a24:	ff 4f       	sbci	r31, 0xFF	; 255
    1a26:	80 81       	ld	r24, Z
    1a28:	91 81       	ldd	r25, Z+1	; 0x01
    1a2a:	01 97       	sbiw	r24, 0x01	; 1
    1a2c:	11 96       	adiw	r26, 0x01	; 1
    1a2e:	9c 93       	st	X, r25
    1a30:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1a32:	fe 01       	movw	r30, r28
    1a34:	eb 51       	subi	r30, 0x1B	; 27
    1a36:	ff 4f       	sbci	r31, 0xFF	; 255
    1a38:	80 81       	ld	r24, Z
    1a3a:	91 81       	ldd	r25, Z+1	; 0x01
    1a3c:	00 97       	sbiw	r24, 0x00	; 0
    1a3e:	d1 f6       	brne	.-76     	; 0x19f4 <main+0xebe>
    1a40:	27 c0       	rjmp	.+78     	; 0x1a90 <main+0xf5a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1a42:	8e 01       	movw	r16, r28
    1a44:	0b 51       	subi	r16, 0x1B	; 27
    1a46:	1f 4f       	sbci	r17, 0xFF	; 255
    1a48:	fe 01       	movw	r30, r28
    1a4a:	e9 51       	subi	r30, 0x19	; 25
    1a4c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a4e:	60 81       	ld	r22, Z
    1a50:	71 81       	ldd	r23, Z+1	; 0x01
    1a52:	82 81       	ldd	r24, Z+2	; 0x02
    1a54:	93 81       	ldd	r25, Z+3	; 0x03
    1a56:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1a5a:	dc 01       	movw	r26, r24
    1a5c:	cb 01       	movw	r24, r22
    1a5e:	f8 01       	movw	r30, r16
    1a60:	91 83       	std	Z+1, r25	; 0x01
    1a62:	80 83       	st	Z, r24
    1a64:	de 01       	movw	r26, r28
    1a66:	af 51       	subi	r26, 0x1F	; 31
    1a68:	bf 4f       	sbci	r27, 0xFF	; 255
    1a6a:	fe 01       	movw	r30, r28
    1a6c:	eb 51       	subi	r30, 0x1B	; 27
    1a6e:	ff 4f       	sbci	r31, 0xFF	; 255
    1a70:	80 81       	ld	r24, Z
    1a72:	91 81       	ldd	r25, Z+1	; 0x01
    1a74:	8d 93       	st	X+, r24
    1a76:	9c 93       	st	X, r25
    1a78:	fe 01       	movw	r30, r28
    1a7a:	ef 51       	subi	r30, 0x1F	; 31
    1a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1a7e:	80 81       	ld	r24, Z
    1a80:	91 81       	ldd	r25, Z+1	; 0x01
    1a82:	01 97       	sbiw	r24, 0x01	; 1
    1a84:	f1 f7       	brne	.-4      	; 0x1a82 <main+0xf4c>
    1a86:	fe 01       	movw	r30, r28
    1a88:	ef 51       	subi	r30, 0x1F	; 31
    1a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1a8c:	91 83       	std	Z+1, r25	; 0x01
    1a8e:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    1a90:	a5 e3       	ldi	r26, 0x35	; 53
    1a92:	b0 e0       	ldi	r27, 0x00	; 0
    1a94:	e5 e3       	ldi	r30, 0x35	; 53
    1a96:	f0 e0       	ldi	r31, 0x00	; 0
    1a98:	80 81       	ld	r24, Z
    1a9a:	8b 7f       	andi	r24, 0xFB	; 251
    1a9c:	8c 93       	st	X, r24
    1a9e:	fe 01       	movw	r30, r28
    1aa0:	e3 52       	subi	r30, 0x23	; 35
    1aa2:	ff 4f       	sbci	r31, 0xFF	; 255
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	a8 e4       	ldi	r26, 0x48	; 72
    1aaa:	b4 e4       	ldi	r27, 0x44	; 68
    1aac:	80 83       	st	Z, r24
    1aae:	91 83       	std	Z+1, r25	; 0x01
    1ab0:	a2 83       	std	Z+2, r26	; 0x02
    1ab2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1ab4:	8e 01       	movw	r16, r28
    1ab6:	07 52       	subi	r16, 0x27	; 39
    1ab8:	1f 4f       	sbci	r17, 0xFF	; 255
    1aba:	fe 01       	movw	r30, r28
    1abc:	e3 52       	subi	r30, 0x23	; 35
    1abe:	ff 4f       	sbci	r31, 0xFF	; 255
    1ac0:	60 81       	ld	r22, Z
    1ac2:	71 81       	ldd	r23, Z+1	; 0x01
    1ac4:	82 81       	ldd	r24, Z+2	; 0x02
    1ac6:	93 81       	ldd	r25, Z+3	; 0x03
    1ac8:	20 e0       	ldi	r18, 0x00	; 0
    1aca:	30 e0       	ldi	r19, 0x00	; 0
    1acc:	4a e7       	ldi	r20, 0x7A	; 122
    1ace:	55 e4       	ldi	r21, 0x45	; 69
    1ad0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1ad4:	dc 01       	movw	r26, r24
    1ad6:	cb 01       	movw	r24, r22
    1ad8:	f8 01       	movw	r30, r16
    1ada:	80 83       	st	Z, r24
    1adc:	91 83       	std	Z+1, r25	; 0x01
    1ade:	a2 83       	std	Z+2, r26	; 0x02
    1ae0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1ae2:	fe 01       	movw	r30, r28
    1ae4:	e7 52       	subi	r30, 0x27	; 39
    1ae6:	ff 4f       	sbci	r31, 0xFF	; 255
    1ae8:	60 81       	ld	r22, Z
    1aea:	71 81       	ldd	r23, Z+1	; 0x01
    1aec:	82 81       	ldd	r24, Z+2	; 0x02
    1aee:	93 81       	ldd	r25, Z+3	; 0x03
    1af0:	20 e0       	ldi	r18, 0x00	; 0
    1af2:	30 e0       	ldi	r19, 0x00	; 0
    1af4:	40 e8       	ldi	r20, 0x80	; 128
    1af6:	5f e3       	ldi	r21, 0x3F	; 63
    1af8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1afc:	88 23       	and	r24, r24
    1afe:	44 f4       	brge	.+16     	; 0x1b10 <main+0xfda>
		__ticks = 1;
    1b00:	fe 01       	movw	r30, r28
    1b02:	e9 52       	subi	r30, 0x29	; 41
    1b04:	ff 4f       	sbci	r31, 0xFF	; 255
    1b06:	81 e0       	ldi	r24, 0x01	; 1
    1b08:	90 e0       	ldi	r25, 0x00	; 0
    1b0a:	91 83       	std	Z+1, r25	; 0x01
    1b0c:	80 83       	st	Z, r24
    1b0e:	64 c0       	rjmp	.+200    	; 0x1bd8 <main+0x10a2>
	else if (__tmp > 65535)
    1b10:	fe 01       	movw	r30, r28
    1b12:	e7 52       	subi	r30, 0x27	; 39
    1b14:	ff 4f       	sbci	r31, 0xFF	; 255
    1b16:	60 81       	ld	r22, Z
    1b18:	71 81       	ldd	r23, Z+1	; 0x01
    1b1a:	82 81       	ldd	r24, Z+2	; 0x02
    1b1c:	93 81       	ldd	r25, Z+3	; 0x03
    1b1e:	20 e0       	ldi	r18, 0x00	; 0
    1b20:	3f ef       	ldi	r19, 0xFF	; 255
    1b22:	4f e7       	ldi	r20, 0x7F	; 127
    1b24:	57 e4       	ldi	r21, 0x47	; 71
    1b26:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1b2a:	18 16       	cp	r1, r24
    1b2c:	0c f0       	brlt	.+2      	; 0x1b30 <main+0xffa>
    1b2e:	43 c0       	rjmp	.+134    	; 0x1bb6 <main+0x1080>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1b30:	fe 01       	movw	r30, r28
    1b32:	e3 52       	subi	r30, 0x23	; 35
    1b34:	ff 4f       	sbci	r31, 0xFF	; 255
    1b36:	60 81       	ld	r22, Z
    1b38:	71 81       	ldd	r23, Z+1	; 0x01
    1b3a:	82 81       	ldd	r24, Z+2	; 0x02
    1b3c:	93 81       	ldd	r25, Z+3	; 0x03
    1b3e:	20 e0       	ldi	r18, 0x00	; 0
    1b40:	30 e0       	ldi	r19, 0x00	; 0
    1b42:	40 e2       	ldi	r20, 0x20	; 32
    1b44:	51 e4       	ldi	r21, 0x41	; 65
    1b46:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1b4a:	dc 01       	movw	r26, r24
    1b4c:	cb 01       	movw	r24, r22
    1b4e:	8e 01       	movw	r16, r28
    1b50:	09 52       	subi	r16, 0x29	; 41
    1b52:	1f 4f       	sbci	r17, 0xFF	; 255
    1b54:	bc 01       	movw	r22, r24
    1b56:	cd 01       	movw	r24, r26
    1b58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1b5c:	dc 01       	movw	r26, r24
    1b5e:	cb 01       	movw	r24, r22
    1b60:	f8 01       	movw	r30, r16
    1b62:	91 83       	std	Z+1, r25	; 0x01
    1b64:	80 83       	st	Z, r24
    1b66:	1f c0       	rjmp	.+62     	; 0x1ba6 <main+0x1070>
    1b68:	fe 01       	movw	r30, r28
    1b6a:	eb 52       	subi	r30, 0x2B	; 43
    1b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    1b6e:	80 e9       	ldi	r24, 0x90	; 144
    1b70:	91 e0       	ldi	r25, 0x01	; 1
    1b72:	91 83       	std	Z+1, r25	; 0x01
    1b74:	80 83       	st	Z, r24
    1b76:	fe 01       	movw	r30, r28
    1b78:	eb 52       	subi	r30, 0x2B	; 43
    1b7a:	ff 4f       	sbci	r31, 0xFF	; 255
    1b7c:	80 81       	ld	r24, Z
    1b7e:	91 81       	ldd	r25, Z+1	; 0x01
    1b80:	01 97       	sbiw	r24, 0x01	; 1
    1b82:	f1 f7       	brne	.-4      	; 0x1b80 <main+0x104a>
    1b84:	fe 01       	movw	r30, r28
    1b86:	eb 52       	subi	r30, 0x2B	; 43
    1b88:	ff 4f       	sbci	r31, 0xFF	; 255
    1b8a:	91 83       	std	Z+1, r25	; 0x01
    1b8c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1b8e:	de 01       	movw	r26, r28
    1b90:	a9 52       	subi	r26, 0x29	; 41
    1b92:	bf 4f       	sbci	r27, 0xFF	; 255
    1b94:	fe 01       	movw	r30, r28
    1b96:	e9 52       	subi	r30, 0x29	; 41
    1b98:	ff 4f       	sbci	r31, 0xFF	; 255
    1b9a:	80 81       	ld	r24, Z
    1b9c:	91 81       	ldd	r25, Z+1	; 0x01
    1b9e:	01 97       	sbiw	r24, 0x01	; 1
    1ba0:	11 96       	adiw	r26, 0x01	; 1
    1ba2:	9c 93       	st	X, r25
    1ba4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1ba6:	fe 01       	movw	r30, r28
    1ba8:	e9 52       	subi	r30, 0x29	; 41
    1baa:	ff 4f       	sbci	r31, 0xFF	; 255
    1bac:	80 81       	ld	r24, Z
    1bae:	91 81       	ldd	r25, Z+1	; 0x01
    1bb0:	00 97       	sbiw	r24, 0x00	; 0
    1bb2:	d1 f6       	brne	.-76     	; 0x1b68 <main+0x1032>
    1bb4:	27 c0       	rjmp	.+78     	; 0x1c04 <main+0x10ce>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1bb6:	8e 01       	movw	r16, r28
    1bb8:	09 52       	subi	r16, 0x29	; 41
    1bba:	1f 4f       	sbci	r17, 0xFF	; 255
    1bbc:	fe 01       	movw	r30, r28
    1bbe:	e7 52       	subi	r30, 0x27	; 39
    1bc0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bc2:	60 81       	ld	r22, Z
    1bc4:	71 81       	ldd	r23, Z+1	; 0x01
    1bc6:	82 81       	ldd	r24, Z+2	; 0x02
    1bc8:	93 81       	ldd	r25, Z+3	; 0x03
    1bca:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1bce:	dc 01       	movw	r26, r24
    1bd0:	cb 01       	movw	r24, r22
    1bd2:	f8 01       	movw	r30, r16
    1bd4:	91 83       	std	Z+1, r25	; 0x01
    1bd6:	80 83       	st	Z, r24
    1bd8:	de 01       	movw	r26, r28
    1bda:	ad 52       	subi	r26, 0x2D	; 45
    1bdc:	bf 4f       	sbci	r27, 0xFF	; 255
    1bde:	fe 01       	movw	r30, r28
    1be0:	e9 52       	subi	r30, 0x29	; 41
    1be2:	ff 4f       	sbci	r31, 0xFF	; 255
    1be4:	80 81       	ld	r24, Z
    1be6:	91 81       	ldd	r25, Z+1	; 0x01
    1be8:	8d 93       	st	X+, r24
    1bea:	9c 93       	st	X, r25
    1bec:	fe 01       	movw	r30, r28
    1bee:	ed 52       	subi	r30, 0x2D	; 45
    1bf0:	ff 4f       	sbci	r31, 0xFF	; 255
    1bf2:	80 81       	ld	r24, Z
    1bf4:	91 81       	ldd	r25, Z+1	; 0x01
    1bf6:	01 97       	sbiw	r24, 0x01	; 1
    1bf8:	f1 f7       	brne	.-4      	; 0x1bf6 <main+0x10c0>
    1bfa:	fe 01       	movw	r30, r28
    1bfc:	ed 52       	subi	r30, 0x2D	; 45
    1bfe:	ff 4f       	sbci	r31, 0xFF	; 255
    1c00:	91 83       	std	Z+1, r25	; 0x01
    1c02:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,2);
    1c04:	a5 e3       	ldi	r26, 0x35	; 53
    1c06:	b0 e0       	ldi	r27, 0x00	; 0
    1c08:	e5 e3       	ldi	r30, 0x35	; 53
    1c0a:	f0 e0       	ldi	r31, 0x00	; 0
    1c0c:	80 81       	ld	r24, Z
    1c0e:	84 60       	ori	r24, 0x04	; 4
    1c10:	8c 93       	st	X, r24
    1c12:	fe 01       	movw	r30, r28
    1c14:	e1 53       	subi	r30, 0x31	; 49
    1c16:	ff 4f       	sbci	r31, 0xFF	; 255
    1c18:	80 e0       	ldi	r24, 0x00	; 0
    1c1a:	90 e0       	ldi	r25, 0x00	; 0
    1c1c:	a8 e4       	ldi	r26, 0x48	; 72
    1c1e:	b4 e4       	ldi	r27, 0x44	; 68
    1c20:	80 83       	st	Z, r24
    1c22:	91 83       	std	Z+1, r25	; 0x01
    1c24:	a2 83       	std	Z+2, r26	; 0x02
    1c26:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1c28:	8e 01       	movw	r16, r28
    1c2a:	05 53       	subi	r16, 0x35	; 53
    1c2c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c2e:	fe 01       	movw	r30, r28
    1c30:	e1 53       	subi	r30, 0x31	; 49
    1c32:	ff 4f       	sbci	r31, 0xFF	; 255
    1c34:	60 81       	ld	r22, Z
    1c36:	71 81       	ldd	r23, Z+1	; 0x01
    1c38:	82 81       	ldd	r24, Z+2	; 0x02
    1c3a:	93 81       	ldd	r25, Z+3	; 0x03
    1c3c:	20 e0       	ldi	r18, 0x00	; 0
    1c3e:	30 e0       	ldi	r19, 0x00	; 0
    1c40:	4a e7       	ldi	r20, 0x7A	; 122
    1c42:	55 e4       	ldi	r21, 0x45	; 69
    1c44:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1c48:	dc 01       	movw	r26, r24
    1c4a:	cb 01       	movw	r24, r22
    1c4c:	f8 01       	movw	r30, r16
    1c4e:	80 83       	st	Z, r24
    1c50:	91 83       	std	Z+1, r25	; 0x01
    1c52:	a2 83       	std	Z+2, r26	; 0x02
    1c54:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1c56:	fe 01       	movw	r30, r28
    1c58:	e5 53       	subi	r30, 0x35	; 53
    1c5a:	ff 4f       	sbci	r31, 0xFF	; 255
    1c5c:	60 81       	ld	r22, Z
    1c5e:	71 81       	ldd	r23, Z+1	; 0x01
    1c60:	82 81       	ldd	r24, Z+2	; 0x02
    1c62:	93 81       	ldd	r25, Z+3	; 0x03
    1c64:	20 e0       	ldi	r18, 0x00	; 0
    1c66:	30 e0       	ldi	r19, 0x00	; 0
    1c68:	40 e8       	ldi	r20, 0x80	; 128
    1c6a:	5f e3       	ldi	r21, 0x3F	; 63
    1c6c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1c70:	88 23       	and	r24, r24
    1c72:	44 f4       	brge	.+16     	; 0x1c84 <main+0x114e>
		__ticks = 1;
    1c74:	fe 01       	movw	r30, r28
    1c76:	e7 53       	subi	r30, 0x37	; 55
    1c78:	ff 4f       	sbci	r31, 0xFF	; 255
    1c7a:	81 e0       	ldi	r24, 0x01	; 1
    1c7c:	90 e0       	ldi	r25, 0x00	; 0
    1c7e:	91 83       	std	Z+1, r25	; 0x01
    1c80:	80 83       	st	Z, r24
    1c82:	64 c0       	rjmp	.+200    	; 0x1d4c <main+0x1216>
	else if (__tmp > 65535)
    1c84:	fe 01       	movw	r30, r28
    1c86:	e5 53       	subi	r30, 0x35	; 53
    1c88:	ff 4f       	sbci	r31, 0xFF	; 255
    1c8a:	60 81       	ld	r22, Z
    1c8c:	71 81       	ldd	r23, Z+1	; 0x01
    1c8e:	82 81       	ldd	r24, Z+2	; 0x02
    1c90:	93 81       	ldd	r25, Z+3	; 0x03
    1c92:	20 e0       	ldi	r18, 0x00	; 0
    1c94:	3f ef       	ldi	r19, 0xFF	; 255
    1c96:	4f e7       	ldi	r20, 0x7F	; 127
    1c98:	57 e4       	ldi	r21, 0x47	; 71
    1c9a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1c9e:	18 16       	cp	r1, r24
    1ca0:	0c f0       	brlt	.+2      	; 0x1ca4 <main+0x116e>
    1ca2:	43 c0       	rjmp	.+134    	; 0x1d2a <main+0x11f4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1ca4:	fe 01       	movw	r30, r28
    1ca6:	e1 53       	subi	r30, 0x31	; 49
    1ca8:	ff 4f       	sbci	r31, 0xFF	; 255
    1caa:	60 81       	ld	r22, Z
    1cac:	71 81       	ldd	r23, Z+1	; 0x01
    1cae:	82 81       	ldd	r24, Z+2	; 0x02
    1cb0:	93 81       	ldd	r25, Z+3	; 0x03
    1cb2:	20 e0       	ldi	r18, 0x00	; 0
    1cb4:	30 e0       	ldi	r19, 0x00	; 0
    1cb6:	40 e2       	ldi	r20, 0x20	; 32
    1cb8:	51 e4       	ldi	r21, 0x41	; 65
    1cba:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1cbe:	dc 01       	movw	r26, r24
    1cc0:	cb 01       	movw	r24, r22
    1cc2:	8e 01       	movw	r16, r28
    1cc4:	07 53       	subi	r16, 0x37	; 55
    1cc6:	1f 4f       	sbci	r17, 0xFF	; 255
    1cc8:	bc 01       	movw	r22, r24
    1cca:	cd 01       	movw	r24, r26
    1ccc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1cd0:	dc 01       	movw	r26, r24
    1cd2:	cb 01       	movw	r24, r22
    1cd4:	f8 01       	movw	r30, r16
    1cd6:	91 83       	std	Z+1, r25	; 0x01
    1cd8:	80 83       	st	Z, r24
    1cda:	1f c0       	rjmp	.+62     	; 0x1d1a <main+0x11e4>
    1cdc:	fe 01       	movw	r30, r28
    1cde:	e9 53       	subi	r30, 0x39	; 57
    1ce0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ce2:	80 e9       	ldi	r24, 0x90	; 144
    1ce4:	91 e0       	ldi	r25, 0x01	; 1
    1ce6:	91 83       	std	Z+1, r25	; 0x01
    1ce8:	80 83       	st	Z, r24
    1cea:	fe 01       	movw	r30, r28
    1cec:	e9 53       	subi	r30, 0x39	; 57
    1cee:	ff 4f       	sbci	r31, 0xFF	; 255
    1cf0:	80 81       	ld	r24, Z
    1cf2:	91 81       	ldd	r25, Z+1	; 0x01
    1cf4:	01 97       	sbiw	r24, 0x01	; 1
    1cf6:	f1 f7       	brne	.-4      	; 0x1cf4 <main+0x11be>
    1cf8:	fe 01       	movw	r30, r28
    1cfa:	e9 53       	subi	r30, 0x39	; 57
    1cfc:	ff 4f       	sbci	r31, 0xFF	; 255
    1cfe:	91 83       	std	Z+1, r25	; 0x01
    1d00:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1d02:	de 01       	movw	r26, r28
    1d04:	a7 53       	subi	r26, 0x37	; 55
    1d06:	bf 4f       	sbci	r27, 0xFF	; 255
    1d08:	fe 01       	movw	r30, r28
    1d0a:	e7 53       	subi	r30, 0x37	; 55
    1d0c:	ff 4f       	sbci	r31, 0xFF	; 255
    1d0e:	80 81       	ld	r24, Z
    1d10:	91 81       	ldd	r25, Z+1	; 0x01
    1d12:	01 97       	sbiw	r24, 0x01	; 1
    1d14:	11 96       	adiw	r26, 0x01	; 1
    1d16:	9c 93       	st	X, r25
    1d18:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1d1a:	fe 01       	movw	r30, r28
    1d1c:	e7 53       	subi	r30, 0x37	; 55
    1d1e:	ff 4f       	sbci	r31, 0xFF	; 255
    1d20:	80 81       	ld	r24, Z
    1d22:	91 81       	ldd	r25, Z+1	; 0x01
    1d24:	00 97       	sbiw	r24, 0x00	; 0
    1d26:	d1 f6       	brne	.-76     	; 0x1cdc <main+0x11a6>
    1d28:	27 c0       	rjmp	.+78     	; 0x1d78 <main+0x1242>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1d2a:	8e 01       	movw	r16, r28
    1d2c:	07 53       	subi	r16, 0x37	; 55
    1d2e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d30:	fe 01       	movw	r30, r28
    1d32:	e5 53       	subi	r30, 0x35	; 53
    1d34:	ff 4f       	sbci	r31, 0xFF	; 255
    1d36:	60 81       	ld	r22, Z
    1d38:	71 81       	ldd	r23, Z+1	; 0x01
    1d3a:	82 81       	ldd	r24, Z+2	; 0x02
    1d3c:	93 81       	ldd	r25, Z+3	; 0x03
    1d3e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1d42:	dc 01       	movw	r26, r24
    1d44:	cb 01       	movw	r24, r22
    1d46:	f8 01       	movw	r30, r16
    1d48:	91 83       	std	Z+1, r25	; 0x01
    1d4a:	80 83       	st	Z, r24
    1d4c:	de 01       	movw	r26, r28
    1d4e:	ab 53       	subi	r26, 0x3B	; 59
    1d50:	bf 4f       	sbci	r27, 0xFF	; 255
    1d52:	fe 01       	movw	r30, r28
    1d54:	e7 53       	subi	r30, 0x37	; 55
    1d56:	ff 4f       	sbci	r31, 0xFF	; 255
    1d58:	80 81       	ld	r24, Z
    1d5a:	91 81       	ldd	r25, Z+1	; 0x01
    1d5c:	8d 93       	st	X+, r24
    1d5e:	9c 93       	st	X, r25
    1d60:	fe 01       	movw	r30, r28
    1d62:	eb 53       	subi	r30, 0x3B	; 59
    1d64:	ff 4f       	sbci	r31, 0xFF	; 255
    1d66:	80 81       	ld	r24, Z
    1d68:	91 81       	ldd	r25, Z+1	; 0x01
    1d6a:	01 97       	sbiw	r24, 0x01	; 1
    1d6c:	f1 f7       	brne	.-4      	; 0x1d6a <main+0x1234>
    1d6e:	fe 01       	movw	r30, r28
    1d70:	eb 53       	subi	r30, 0x3B	; 59
    1d72:	ff 4f       	sbci	r31, 0xFF	; 255
    1d74:	91 83       	std	Z+1, r25	; 0x01
    1d76:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    1d78:	a5 e3       	ldi	r26, 0x35	; 53
    1d7a:	b0 e0       	ldi	r27, 0x00	; 0
    1d7c:	e5 e3       	ldi	r30, 0x35	; 53
    1d7e:	f0 e0       	ldi	r31, 0x00	; 0
    1d80:	80 81       	ld	r24, Z
    1d82:	8b 7f       	andi	r24, 0xFB	; 251
    1d84:	8c 93       	st	X, r24
				LCD_clearScreen();
    1d86:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
				state = MAIN_MENU; // Return to main menu
    1d8a:	fe 01       	movw	r30, r28
    1d8c:	e0 5a       	subi	r30, 0xA0	; 160
    1d8e:	fe 4f       	sbci	r31, 0xFE	; 254
    1d90:	81 e0       	ldi	r24, 0x01	; 1
    1d92:	80 83       	st	Z, r24
    1d94:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <main+0x82>
				break;

			case RIGHT_SIGNAL_STATE:
				LCD_displayString("Right Signal");
    1d98:	87 e9       	ldi	r24, 0x97	; 151
    1d9a:	90 e0       	ldi	r25, 0x00	; 0
    1d9c:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
				SET_BIT(PORTC,0);
    1da0:	a5 e3       	ldi	r26, 0x35	; 53
    1da2:	b0 e0       	ldi	r27, 0x00	; 0
    1da4:	e5 e3       	ldi	r30, 0x35	; 53
    1da6:	f0 e0       	ldi	r31, 0x00	; 0
    1da8:	80 81       	ld	r24, Z
    1daa:	81 60       	ori	r24, 0x01	; 1
    1dac:	8c 93       	st	X, r24
    1dae:	fe 01       	movw	r30, r28
    1db0:	ef 53       	subi	r30, 0x3F	; 63
    1db2:	ff 4f       	sbci	r31, 0xFF	; 255
    1db4:	80 e0       	ldi	r24, 0x00	; 0
    1db6:	90 e0       	ldi	r25, 0x00	; 0
    1db8:	a8 e4       	ldi	r26, 0x48	; 72
    1dba:	b4 e4       	ldi	r27, 0x44	; 68
    1dbc:	80 83       	st	Z, r24
    1dbe:	91 83       	std	Z+1, r25	; 0x01
    1dc0:	a2 83       	std	Z+2, r26	; 0x02
    1dc2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1dc4:	8e 01       	movw	r16, r28
    1dc6:	03 54       	subi	r16, 0x43	; 67
    1dc8:	1f 4f       	sbci	r17, 0xFF	; 255
    1dca:	fe 01       	movw	r30, r28
    1dcc:	ef 53       	subi	r30, 0x3F	; 63
    1dce:	ff 4f       	sbci	r31, 0xFF	; 255
    1dd0:	60 81       	ld	r22, Z
    1dd2:	71 81       	ldd	r23, Z+1	; 0x01
    1dd4:	82 81       	ldd	r24, Z+2	; 0x02
    1dd6:	93 81       	ldd	r25, Z+3	; 0x03
    1dd8:	20 e0       	ldi	r18, 0x00	; 0
    1dda:	30 e0       	ldi	r19, 0x00	; 0
    1ddc:	4a e7       	ldi	r20, 0x7A	; 122
    1dde:	55 e4       	ldi	r21, 0x45	; 69
    1de0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1de4:	dc 01       	movw	r26, r24
    1de6:	cb 01       	movw	r24, r22
    1de8:	f8 01       	movw	r30, r16
    1dea:	80 83       	st	Z, r24
    1dec:	91 83       	std	Z+1, r25	; 0x01
    1dee:	a2 83       	std	Z+2, r26	; 0x02
    1df0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1df2:	fe 01       	movw	r30, r28
    1df4:	e3 54       	subi	r30, 0x43	; 67
    1df6:	ff 4f       	sbci	r31, 0xFF	; 255
    1df8:	60 81       	ld	r22, Z
    1dfa:	71 81       	ldd	r23, Z+1	; 0x01
    1dfc:	82 81       	ldd	r24, Z+2	; 0x02
    1dfe:	93 81       	ldd	r25, Z+3	; 0x03
    1e00:	20 e0       	ldi	r18, 0x00	; 0
    1e02:	30 e0       	ldi	r19, 0x00	; 0
    1e04:	40 e8       	ldi	r20, 0x80	; 128
    1e06:	5f e3       	ldi	r21, 0x3F	; 63
    1e08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1e0c:	88 23       	and	r24, r24
    1e0e:	44 f4       	brge	.+16     	; 0x1e20 <main+0x12ea>
		__ticks = 1;
    1e10:	fe 01       	movw	r30, r28
    1e12:	e5 54       	subi	r30, 0x45	; 69
    1e14:	ff 4f       	sbci	r31, 0xFF	; 255
    1e16:	81 e0       	ldi	r24, 0x01	; 1
    1e18:	90 e0       	ldi	r25, 0x00	; 0
    1e1a:	91 83       	std	Z+1, r25	; 0x01
    1e1c:	80 83       	st	Z, r24
    1e1e:	64 c0       	rjmp	.+200    	; 0x1ee8 <main+0x13b2>
	else if (__tmp > 65535)
    1e20:	fe 01       	movw	r30, r28
    1e22:	e3 54       	subi	r30, 0x43	; 67
    1e24:	ff 4f       	sbci	r31, 0xFF	; 255
    1e26:	60 81       	ld	r22, Z
    1e28:	71 81       	ldd	r23, Z+1	; 0x01
    1e2a:	82 81       	ldd	r24, Z+2	; 0x02
    1e2c:	93 81       	ldd	r25, Z+3	; 0x03
    1e2e:	20 e0       	ldi	r18, 0x00	; 0
    1e30:	3f ef       	ldi	r19, 0xFF	; 255
    1e32:	4f e7       	ldi	r20, 0x7F	; 127
    1e34:	57 e4       	ldi	r21, 0x47	; 71
    1e36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1e3a:	18 16       	cp	r1, r24
    1e3c:	0c f0       	brlt	.+2      	; 0x1e40 <main+0x130a>
    1e3e:	43 c0       	rjmp	.+134    	; 0x1ec6 <main+0x1390>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1e40:	fe 01       	movw	r30, r28
    1e42:	ef 53       	subi	r30, 0x3F	; 63
    1e44:	ff 4f       	sbci	r31, 0xFF	; 255
    1e46:	60 81       	ld	r22, Z
    1e48:	71 81       	ldd	r23, Z+1	; 0x01
    1e4a:	82 81       	ldd	r24, Z+2	; 0x02
    1e4c:	93 81       	ldd	r25, Z+3	; 0x03
    1e4e:	20 e0       	ldi	r18, 0x00	; 0
    1e50:	30 e0       	ldi	r19, 0x00	; 0
    1e52:	40 e2       	ldi	r20, 0x20	; 32
    1e54:	51 e4       	ldi	r21, 0x41	; 65
    1e56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1e5a:	dc 01       	movw	r26, r24
    1e5c:	cb 01       	movw	r24, r22
    1e5e:	8e 01       	movw	r16, r28
    1e60:	05 54       	subi	r16, 0x45	; 69
    1e62:	1f 4f       	sbci	r17, 0xFF	; 255
    1e64:	bc 01       	movw	r22, r24
    1e66:	cd 01       	movw	r24, r26
    1e68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1e6c:	dc 01       	movw	r26, r24
    1e6e:	cb 01       	movw	r24, r22
    1e70:	f8 01       	movw	r30, r16
    1e72:	91 83       	std	Z+1, r25	; 0x01
    1e74:	80 83       	st	Z, r24
    1e76:	1f c0       	rjmp	.+62     	; 0x1eb6 <main+0x1380>
    1e78:	fe 01       	movw	r30, r28
    1e7a:	e7 54       	subi	r30, 0x47	; 71
    1e7c:	ff 4f       	sbci	r31, 0xFF	; 255
    1e7e:	80 e9       	ldi	r24, 0x90	; 144
    1e80:	91 e0       	ldi	r25, 0x01	; 1
    1e82:	91 83       	std	Z+1, r25	; 0x01
    1e84:	80 83       	st	Z, r24
    1e86:	fe 01       	movw	r30, r28
    1e88:	e7 54       	subi	r30, 0x47	; 71
    1e8a:	ff 4f       	sbci	r31, 0xFF	; 255
    1e8c:	80 81       	ld	r24, Z
    1e8e:	91 81       	ldd	r25, Z+1	; 0x01
    1e90:	01 97       	sbiw	r24, 0x01	; 1
    1e92:	f1 f7       	brne	.-4      	; 0x1e90 <main+0x135a>
    1e94:	fe 01       	movw	r30, r28
    1e96:	e7 54       	subi	r30, 0x47	; 71
    1e98:	ff 4f       	sbci	r31, 0xFF	; 255
    1e9a:	91 83       	std	Z+1, r25	; 0x01
    1e9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    1e9e:	de 01       	movw	r26, r28
    1ea0:	a5 54       	subi	r26, 0x45	; 69
    1ea2:	bf 4f       	sbci	r27, 0xFF	; 255
    1ea4:	fe 01       	movw	r30, r28
    1ea6:	e5 54       	subi	r30, 0x45	; 69
    1ea8:	ff 4f       	sbci	r31, 0xFF	; 255
    1eaa:	80 81       	ld	r24, Z
    1eac:	91 81       	ldd	r25, Z+1	; 0x01
    1eae:	01 97       	sbiw	r24, 0x01	; 1
    1eb0:	11 96       	adiw	r26, 0x01	; 1
    1eb2:	9c 93       	st	X, r25
    1eb4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    1eb6:	fe 01       	movw	r30, r28
    1eb8:	e5 54       	subi	r30, 0x45	; 69
    1eba:	ff 4f       	sbci	r31, 0xFF	; 255
    1ebc:	80 81       	ld	r24, Z
    1ebe:	91 81       	ldd	r25, Z+1	; 0x01
    1ec0:	00 97       	sbiw	r24, 0x00	; 0
    1ec2:	d1 f6       	brne	.-76     	; 0x1e78 <main+0x1342>
    1ec4:	27 c0       	rjmp	.+78     	; 0x1f14 <main+0x13de>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    1ec6:	8e 01       	movw	r16, r28
    1ec8:	05 54       	subi	r16, 0x45	; 69
    1eca:	1f 4f       	sbci	r17, 0xFF	; 255
    1ecc:	fe 01       	movw	r30, r28
    1ece:	e3 54       	subi	r30, 0x43	; 67
    1ed0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ed2:	60 81       	ld	r22, Z
    1ed4:	71 81       	ldd	r23, Z+1	; 0x01
    1ed6:	82 81       	ldd	r24, Z+2	; 0x02
    1ed8:	93 81       	ldd	r25, Z+3	; 0x03
    1eda:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1ede:	dc 01       	movw	r26, r24
    1ee0:	cb 01       	movw	r24, r22
    1ee2:	f8 01       	movw	r30, r16
    1ee4:	91 83       	std	Z+1, r25	; 0x01
    1ee6:	80 83       	st	Z, r24
    1ee8:	de 01       	movw	r26, r28
    1eea:	a9 54       	subi	r26, 0x49	; 73
    1eec:	bf 4f       	sbci	r27, 0xFF	; 255
    1eee:	fe 01       	movw	r30, r28
    1ef0:	e5 54       	subi	r30, 0x45	; 69
    1ef2:	ff 4f       	sbci	r31, 0xFF	; 255
    1ef4:	80 81       	ld	r24, Z
    1ef6:	91 81       	ldd	r25, Z+1	; 0x01
    1ef8:	8d 93       	st	X+, r24
    1efa:	9c 93       	st	X, r25
    1efc:	fe 01       	movw	r30, r28
    1efe:	e9 54       	subi	r30, 0x49	; 73
    1f00:	ff 4f       	sbci	r31, 0xFF	; 255
    1f02:	80 81       	ld	r24, Z
    1f04:	91 81       	ldd	r25, Z+1	; 0x01
    1f06:	01 97       	sbiw	r24, 0x01	; 1
    1f08:	f1 f7       	brne	.-4      	; 0x1f06 <main+0x13d0>
    1f0a:	fe 01       	movw	r30, r28
    1f0c:	e9 54       	subi	r30, 0x49	; 73
    1f0e:	ff 4f       	sbci	r31, 0xFF	; 255
    1f10:	91 83       	std	Z+1, r25	; 0x01
    1f12:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,0);
    1f14:	a5 e3       	ldi	r26, 0x35	; 53
    1f16:	b0 e0       	ldi	r27, 0x00	; 0
    1f18:	e5 e3       	ldi	r30, 0x35	; 53
    1f1a:	f0 e0       	ldi	r31, 0x00	; 0
    1f1c:	80 81       	ld	r24, Z
    1f1e:	8e 7f       	andi	r24, 0xFE	; 254
    1f20:	8c 93       	st	X, r24
    1f22:	fe 01       	movw	r30, r28
    1f24:	ed 54       	subi	r30, 0x4D	; 77
    1f26:	ff 4f       	sbci	r31, 0xFF	; 255
    1f28:	80 e0       	ldi	r24, 0x00	; 0
    1f2a:	90 e0       	ldi	r25, 0x00	; 0
    1f2c:	a8 e4       	ldi	r26, 0x48	; 72
    1f2e:	b4 e4       	ldi	r27, 0x44	; 68
    1f30:	80 83       	st	Z, r24
    1f32:	91 83       	std	Z+1, r25	; 0x01
    1f34:	a2 83       	std	Z+2, r26	; 0x02
    1f36:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    1f38:	8e 01       	movw	r16, r28
    1f3a:	01 55       	subi	r16, 0x51	; 81
    1f3c:	1f 4f       	sbci	r17, 0xFF	; 255
    1f3e:	fe 01       	movw	r30, r28
    1f40:	ed 54       	subi	r30, 0x4D	; 77
    1f42:	ff 4f       	sbci	r31, 0xFF	; 255
    1f44:	60 81       	ld	r22, Z
    1f46:	71 81       	ldd	r23, Z+1	; 0x01
    1f48:	82 81       	ldd	r24, Z+2	; 0x02
    1f4a:	93 81       	ldd	r25, Z+3	; 0x03
    1f4c:	20 e0       	ldi	r18, 0x00	; 0
    1f4e:	30 e0       	ldi	r19, 0x00	; 0
    1f50:	4a e7       	ldi	r20, 0x7A	; 122
    1f52:	55 e4       	ldi	r21, 0x45	; 69
    1f54:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1f58:	dc 01       	movw	r26, r24
    1f5a:	cb 01       	movw	r24, r22
    1f5c:	f8 01       	movw	r30, r16
    1f5e:	80 83       	st	Z, r24
    1f60:	91 83       	std	Z+1, r25	; 0x01
    1f62:	a2 83       	std	Z+2, r26	; 0x02
    1f64:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    1f66:	fe 01       	movw	r30, r28
    1f68:	e1 55       	subi	r30, 0x51	; 81
    1f6a:	ff 4f       	sbci	r31, 0xFF	; 255
    1f6c:	60 81       	ld	r22, Z
    1f6e:	71 81       	ldd	r23, Z+1	; 0x01
    1f70:	82 81       	ldd	r24, Z+2	; 0x02
    1f72:	93 81       	ldd	r25, Z+3	; 0x03
    1f74:	20 e0       	ldi	r18, 0x00	; 0
    1f76:	30 e0       	ldi	r19, 0x00	; 0
    1f78:	40 e8       	ldi	r20, 0x80	; 128
    1f7a:	5f e3       	ldi	r21, 0x3F	; 63
    1f7c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    1f80:	88 23       	and	r24, r24
    1f82:	44 f4       	brge	.+16     	; 0x1f94 <main+0x145e>
		__ticks = 1;
    1f84:	fe 01       	movw	r30, r28
    1f86:	e3 55       	subi	r30, 0x53	; 83
    1f88:	ff 4f       	sbci	r31, 0xFF	; 255
    1f8a:	81 e0       	ldi	r24, 0x01	; 1
    1f8c:	90 e0       	ldi	r25, 0x00	; 0
    1f8e:	91 83       	std	Z+1, r25	; 0x01
    1f90:	80 83       	st	Z, r24
    1f92:	64 c0       	rjmp	.+200    	; 0x205c <main+0x1526>
	else if (__tmp > 65535)
    1f94:	fe 01       	movw	r30, r28
    1f96:	e1 55       	subi	r30, 0x51	; 81
    1f98:	ff 4f       	sbci	r31, 0xFF	; 255
    1f9a:	60 81       	ld	r22, Z
    1f9c:	71 81       	ldd	r23, Z+1	; 0x01
    1f9e:	82 81       	ldd	r24, Z+2	; 0x02
    1fa0:	93 81       	ldd	r25, Z+3	; 0x03
    1fa2:	20 e0       	ldi	r18, 0x00	; 0
    1fa4:	3f ef       	ldi	r19, 0xFF	; 255
    1fa6:	4f e7       	ldi	r20, 0x7F	; 127
    1fa8:	57 e4       	ldi	r21, 0x47	; 71
    1faa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    1fae:	18 16       	cp	r1, r24
    1fb0:	0c f0       	brlt	.+2      	; 0x1fb4 <main+0x147e>
    1fb2:	43 c0       	rjmp	.+134    	; 0x203a <main+0x1504>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    1fb4:	fe 01       	movw	r30, r28
    1fb6:	ed 54       	subi	r30, 0x4D	; 77
    1fb8:	ff 4f       	sbci	r31, 0xFF	; 255
    1fba:	60 81       	ld	r22, Z
    1fbc:	71 81       	ldd	r23, Z+1	; 0x01
    1fbe:	82 81       	ldd	r24, Z+2	; 0x02
    1fc0:	93 81       	ldd	r25, Z+3	; 0x03
    1fc2:	20 e0       	ldi	r18, 0x00	; 0
    1fc4:	30 e0       	ldi	r19, 0x00	; 0
    1fc6:	40 e2       	ldi	r20, 0x20	; 32
    1fc8:	51 e4       	ldi	r21, 0x41	; 65
    1fca:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    1fce:	dc 01       	movw	r26, r24
    1fd0:	cb 01       	movw	r24, r22
    1fd2:	8e 01       	movw	r16, r28
    1fd4:	03 55       	subi	r16, 0x53	; 83
    1fd6:	1f 4f       	sbci	r17, 0xFF	; 255
    1fd8:	bc 01       	movw	r22, r24
    1fda:	cd 01       	movw	r24, r26
    1fdc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    1fe0:	dc 01       	movw	r26, r24
    1fe2:	cb 01       	movw	r24, r22
    1fe4:	f8 01       	movw	r30, r16
    1fe6:	91 83       	std	Z+1, r25	; 0x01
    1fe8:	80 83       	st	Z, r24
    1fea:	1f c0       	rjmp	.+62     	; 0x202a <main+0x14f4>
    1fec:	fe 01       	movw	r30, r28
    1fee:	e5 55       	subi	r30, 0x55	; 85
    1ff0:	ff 4f       	sbci	r31, 0xFF	; 255
    1ff2:	80 e9       	ldi	r24, 0x90	; 144
    1ff4:	91 e0       	ldi	r25, 0x01	; 1
    1ff6:	91 83       	std	Z+1, r25	; 0x01
    1ff8:	80 83       	st	Z, r24
    1ffa:	fe 01       	movw	r30, r28
    1ffc:	e5 55       	subi	r30, 0x55	; 85
    1ffe:	ff 4f       	sbci	r31, 0xFF	; 255
    2000:	80 81       	ld	r24, Z
    2002:	91 81       	ldd	r25, Z+1	; 0x01
    2004:	01 97       	sbiw	r24, 0x01	; 1
    2006:	f1 f7       	brne	.-4      	; 0x2004 <main+0x14ce>
    2008:	fe 01       	movw	r30, r28
    200a:	e5 55       	subi	r30, 0x55	; 85
    200c:	ff 4f       	sbci	r31, 0xFF	; 255
    200e:	91 83       	std	Z+1, r25	; 0x01
    2010:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2012:	de 01       	movw	r26, r28
    2014:	a3 55       	subi	r26, 0x53	; 83
    2016:	bf 4f       	sbci	r27, 0xFF	; 255
    2018:	fe 01       	movw	r30, r28
    201a:	e3 55       	subi	r30, 0x53	; 83
    201c:	ff 4f       	sbci	r31, 0xFF	; 255
    201e:	80 81       	ld	r24, Z
    2020:	91 81       	ldd	r25, Z+1	; 0x01
    2022:	01 97       	sbiw	r24, 0x01	; 1
    2024:	11 96       	adiw	r26, 0x01	; 1
    2026:	9c 93       	st	X, r25
    2028:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    202a:	fe 01       	movw	r30, r28
    202c:	e3 55       	subi	r30, 0x53	; 83
    202e:	ff 4f       	sbci	r31, 0xFF	; 255
    2030:	80 81       	ld	r24, Z
    2032:	91 81       	ldd	r25, Z+1	; 0x01
    2034:	00 97       	sbiw	r24, 0x00	; 0
    2036:	d1 f6       	brne	.-76     	; 0x1fec <main+0x14b6>
    2038:	27 c0       	rjmp	.+78     	; 0x2088 <main+0x1552>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    203a:	8e 01       	movw	r16, r28
    203c:	03 55       	subi	r16, 0x53	; 83
    203e:	1f 4f       	sbci	r17, 0xFF	; 255
    2040:	fe 01       	movw	r30, r28
    2042:	e1 55       	subi	r30, 0x51	; 81
    2044:	ff 4f       	sbci	r31, 0xFF	; 255
    2046:	60 81       	ld	r22, Z
    2048:	71 81       	ldd	r23, Z+1	; 0x01
    204a:	82 81       	ldd	r24, Z+2	; 0x02
    204c:	93 81       	ldd	r25, Z+3	; 0x03
    204e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2052:	dc 01       	movw	r26, r24
    2054:	cb 01       	movw	r24, r22
    2056:	f8 01       	movw	r30, r16
    2058:	91 83       	std	Z+1, r25	; 0x01
    205a:	80 83       	st	Z, r24
    205c:	de 01       	movw	r26, r28
    205e:	a7 55       	subi	r26, 0x57	; 87
    2060:	bf 4f       	sbci	r27, 0xFF	; 255
    2062:	fe 01       	movw	r30, r28
    2064:	e3 55       	subi	r30, 0x53	; 83
    2066:	ff 4f       	sbci	r31, 0xFF	; 255
    2068:	80 81       	ld	r24, Z
    206a:	91 81       	ldd	r25, Z+1	; 0x01
    206c:	8d 93       	st	X+, r24
    206e:	9c 93       	st	X, r25
    2070:	fe 01       	movw	r30, r28
    2072:	e7 55       	subi	r30, 0x57	; 87
    2074:	ff 4f       	sbci	r31, 0xFF	; 255
    2076:	80 81       	ld	r24, Z
    2078:	91 81       	ldd	r25, Z+1	; 0x01
    207a:	01 97       	sbiw	r24, 0x01	; 1
    207c:	f1 f7       	brne	.-4      	; 0x207a <main+0x1544>
    207e:	fe 01       	movw	r30, r28
    2080:	e7 55       	subi	r30, 0x57	; 87
    2082:	ff 4f       	sbci	r31, 0xFF	; 255
    2084:	91 83       	std	Z+1, r25	; 0x01
    2086:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,0);
    2088:	a5 e3       	ldi	r26, 0x35	; 53
    208a:	b0 e0       	ldi	r27, 0x00	; 0
    208c:	e5 e3       	ldi	r30, 0x35	; 53
    208e:	f0 e0       	ldi	r31, 0x00	; 0
    2090:	80 81       	ld	r24, Z
    2092:	81 60       	ori	r24, 0x01	; 1
    2094:	8c 93       	st	X, r24
    2096:	fe 01       	movw	r30, r28
    2098:	eb 55       	subi	r30, 0x5B	; 91
    209a:	ff 4f       	sbci	r31, 0xFF	; 255
    209c:	80 e0       	ldi	r24, 0x00	; 0
    209e:	90 e0       	ldi	r25, 0x00	; 0
    20a0:	a8 e4       	ldi	r26, 0x48	; 72
    20a2:	b4 e4       	ldi	r27, 0x44	; 68
    20a4:	80 83       	st	Z, r24
    20a6:	91 83       	std	Z+1, r25	; 0x01
    20a8:	a2 83       	std	Z+2, r26	; 0x02
    20aa:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    20ac:	8e 01       	movw	r16, r28
    20ae:	0f 55       	subi	r16, 0x5F	; 95
    20b0:	1f 4f       	sbci	r17, 0xFF	; 255
    20b2:	fe 01       	movw	r30, r28
    20b4:	eb 55       	subi	r30, 0x5B	; 91
    20b6:	ff 4f       	sbci	r31, 0xFF	; 255
    20b8:	60 81       	ld	r22, Z
    20ba:	71 81       	ldd	r23, Z+1	; 0x01
    20bc:	82 81       	ldd	r24, Z+2	; 0x02
    20be:	93 81       	ldd	r25, Z+3	; 0x03
    20c0:	20 e0       	ldi	r18, 0x00	; 0
    20c2:	30 e0       	ldi	r19, 0x00	; 0
    20c4:	4a e7       	ldi	r20, 0x7A	; 122
    20c6:	55 e4       	ldi	r21, 0x45	; 69
    20c8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    20cc:	dc 01       	movw	r26, r24
    20ce:	cb 01       	movw	r24, r22
    20d0:	f8 01       	movw	r30, r16
    20d2:	80 83       	st	Z, r24
    20d4:	91 83       	std	Z+1, r25	; 0x01
    20d6:	a2 83       	std	Z+2, r26	; 0x02
    20d8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    20da:	fe 01       	movw	r30, r28
    20dc:	ef 55       	subi	r30, 0x5F	; 95
    20de:	ff 4f       	sbci	r31, 0xFF	; 255
    20e0:	60 81       	ld	r22, Z
    20e2:	71 81       	ldd	r23, Z+1	; 0x01
    20e4:	82 81       	ldd	r24, Z+2	; 0x02
    20e6:	93 81       	ldd	r25, Z+3	; 0x03
    20e8:	20 e0       	ldi	r18, 0x00	; 0
    20ea:	30 e0       	ldi	r19, 0x00	; 0
    20ec:	40 e8       	ldi	r20, 0x80	; 128
    20ee:	5f e3       	ldi	r21, 0x3F	; 63
    20f0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    20f4:	88 23       	and	r24, r24
    20f6:	44 f4       	brge	.+16     	; 0x2108 <main+0x15d2>
		__ticks = 1;
    20f8:	fe 01       	movw	r30, r28
    20fa:	e1 56       	subi	r30, 0x61	; 97
    20fc:	ff 4f       	sbci	r31, 0xFF	; 255
    20fe:	81 e0       	ldi	r24, 0x01	; 1
    2100:	90 e0       	ldi	r25, 0x00	; 0
    2102:	91 83       	std	Z+1, r25	; 0x01
    2104:	80 83       	st	Z, r24
    2106:	64 c0       	rjmp	.+200    	; 0x21d0 <main+0x169a>
	else if (__tmp > 65535)
    2108:	fe 01       	movw	r30, r28
    210a:	ef 55       	subi	r30, 0x5F	; 95
    210c:	ff 4f       	sbci	r31, 0xFF	; 255
    210e:	60 81       	ld	r22, Z
    2110:	71 81       	ldd	r23, Z+1	; 0x01
    2112:	82 81       	ldd	r24, Z+2	; 0x02
    2114:	93 81       	ldd	r25, Z+3	; 0x03
    2116:	20 e0       	ldi	r18, 0x00	; 0
    2118:	3f ef       	ldi	r19, 0xFF	; 255
    211a:	4f e7       	ldi	r20, 0x7F	; 127
    211c:	57 e4       	ldi	r21, 0x47	; 71
    211e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2122:	18 16       	cp	r1, r24
    2124:	0c f0       	brlt	.+2      	; 0x2128 <main+0x15f2>
    2126:	43 c0       	rjmp	.+134    	; 0x21ae <main+0x1678>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2128:	fe 01       	movw	r30, r28
    212a:	eb 55       	subi	r30, 0x5B	; 91
    212c:	ff 4f       	sbci	r31, 0xFF	; 255
    212e:	60 81       	ld	r22, Z
    2130:	71 81       	ldd	r23, Z+1	; 0x01
    2132:	82 81       	ldd	r24, Z+2	; 0x02
    2134:	93 81       	ldd	r25, Z+3	; 0x03
    2136:	20 e0       	ldi	r18, 0x00	; 0
    2138:	30 e0       	ldi	r19, 0x00	; 0
    213a:	40 e2       	ldi	r20, 0x20	; 32
    213c:	51 e4       	ldi	r21, 0x41	; 65
    213e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2142:	dc 01       	movw	r26, r24
    2144:	cb 01       	movw	r24, r22
    2146:	8e 01       	movw	r16, r28
    2148:	01 56       	subi	r16, 0x61	; 97
    214a:	1f 4f       	sbci	r17, 0xFF	; 255
    214c:	bc 01       	movw	r22, r24
    214e:	cd 01       	movw	r24, r26
    2150:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2154:	dc 01       	movw	r26, r24
    2156:	cb 01       	movw	r24, r22
    2158:	f8 01       	movw	r30, r16
    215a:	91 83       	std	Z+1, r25	; 0x01
    215c:	80 83       	st	Z, r24
    215e:	1f c0       	rjmp	.+62     	; 0x219e <main+0x1668>
    2160:	fe 01       	movw	r30, r28
    2162:	e3 56       	subi	r30, 0x63	; 99
    2164:	ff 4f       	sbci	r31, 0xFF	; 255
    2166:	80 e9       	ldi	r24, 0x90	; 144
    2168:	91 e0       	ldi	r25, 0x01	; 1
    216a:	91 83       	std	Z+1, r25	; 0x01
    216c:	80 83       	st	Z, r24
    216e:	fe 01       	movw	r30, r28
    2170:	e3 56       	subi	r30, 0x63	; 99
    2172:	ff 4f       	sbci	r31, 0xFF	; 255
    2174:	80 81       	ld	r24, Z
    2176:	91 81       	ldd	r25, Z+1	; 0x01
    2178:	01 97       	sbiw	r24, 0x01	; 1
    217a:	f1 f7       	brne	.-4      	; 0x2178 <main+0x1642>
    217c:	fe 01       	movw	r30, r28
    217e:	e3 56       	subi	r30, 0x63	; 99
    2180:	ff 4f       	sbci	r31, 0xFF	; 255
    2182:	91 83       	std	Z+1, r25	; 0x01
    2184:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2186:	de 01       	movw	r26, r28
    2188:	a1 56       	subi	r26, 0x61	; 97
    218a:	bf 4f       	sbci	r27, 0xFF	; 255
    218c:	fe 01       	movw	r30, r28
    218e:	e1 56       	subi	r30, 0x61	; 97
    2190:	ff 4f       	sbci	r31, 0xFF	; 255
    2192:	80 81       	ld	r24, Z
    2194:	91 81       	ldd	r25, Z+1	; 0x01
    2196:	01 97       	sbiw	r24, 0x01	; 1
    2198:	11 96       	adiw	r26, 0x01	; 1
    219a:	9c 93       	st	X, r25
    219c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    219e:	fe 01       	movw	r30, r28
    21a0:	e1 56       	subi	r30, 0x61	; 97
    21a2:	ff 4f       	sbci	r31, 0xFF	; 255
    21a4:	80 81       	ld	r24, Z
    21a6:	91 81       	ldd	r25, Z+1	; 0x01
    21a8:	00 97       	sbiw	r24, 0x00	; 0
    21aa:	d1 f6       	brne	.-76     	; 0x2160 <main+0x162a>
    21ac:	27 c0       	rjmp	.+78     	; 0x21fc <main+0x16c6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    21ae:	8e 01       	movw	r16, r28
    21b0:	01 56       	subi	r16, 0x61	; 97
    21b2:	1f 4f       	sbci	r17, 0xFF	; 255
    21b4:	fe 01       	movw	r30, r28
    21b6:	ef 55       	subi	r30, 0x5F	; 95
    21b8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ba:	60 81       	ld	r22, Z
    21bc:	71 81       	ldd	r23, Z+1	; 0x01
    21be:	82 81       	ldd	r24, Z+2	; 0x02
    21c0:	93 81       	ldd	r25, Z+3	; 0x03
    21c2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    21c6:	dc 01       	movw	r26, r24
    21c8:	cb 01       	movw	r24, r22
    21ca:	f8 01       	movw	r30, r16
    21cc:	91 83       	std	Z+1, r25	; 0x01
    21ce:	80 83       	st	Z, r24
    21d0:	de 01       	movw	r26, r28
    21d2:	a5 56       	subi	r26, 0x65	; 101
    21d4:	bf 4f       	sbci	r27, 0xFF	; 255
    21d6:	fe 01       	movw	r30, r28
    21d8:	e1 56       	subi	r30, 0x61	; 97
    21da:	ff 4f       	sbci	r31, 0xFF	; 255
    21dc:	80 81       	ld	r24, Z
    21de:	91 81       	ldd	r25, Z+1	; 0x01
    21e0:	8d 93       	st	X+, r24
    21e2:	9c 93       	st	X, r25
    21e4:	fe 01       	movw	r30, r28
    21e6:	e5 56       	subi	r30, 0x65	; 101
    21e8:	ff 4f       	sbci	r31, 0xFF	; 255
    21ea:	80 81       	ld	r24, Z
    21ec:	91 81       	ldd	r25, Z+1	; 0x01
    21ee:	01 97       	sbiw	r24, 0x01	; 1
    21f0:	f1 f7       	brne	.-4      	; 0x21ee <main+0x16b8>
    21f2:	fe 01       	movw	r30, r28
    21f4:	e5 56       	subi	r30, 0x65	; 101
    21f6:	ff 4f       	sbci	r31, 0xFF	; 255
    21f8:	91 83       	std	Z+1, r25	; 0x01
    21fa:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,0);
    21fc:	a5 e3       	ldi	r26, 0x35	; 53
    21fe:	b0 e0       	ldi	r27, 0x00	; 0
    2200:	e5 e3       	ldi	r30, 0x35	; 53
    2202:	f0 e0       	ldi	r31, 0x00	; 0
    2204:	80 81       	ld	r24, Z
    2206:	8e 7f       	andi	r24, 0xFE	; 254
    2208:	8c 93       	st	X, r24
    220a:	fe 01       	movw	r30, r28
    220c:	e9 56       	subi	r30, 0x69	; 105
    220e:	ff 4f       	sbci	r31, 0xFF	; 255
    2210:	80 e0       	ldi	r24, 0x00	; 0
    2212:	90 e0       	ldi	r25, 0x00	; 0
    2214:	a8 e4       	ldi	r26, 0x48	; 72
    2216:	b4 e4       	ldi	r27, 0x44	; 68
    2218:	80 83       	st	Z, r24
    221a:	91 83       	std	Z+1, r25	; 0x01
    221c:	a2 83       	std	Z+2, r26	; 0x02
    221e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2220:	8e 01       	movw	r16, r28
    2222:	0d 56       	subi	r16, 0x6D	; 109
    2224:	1f 4f       	sbci	r17, 0xFF	; 255
    2226:	fe 01       	movw	r30, r28
    2228:	e9 56       	subi	r30, 0x69	; 105
    222a:	ff 4f       	sbci	r31, 0xFF	; 255
    222c:	60 81       	ld	r22, Z
    222e:	71 81       	ldd	r23, Z+1	; 0x01
    2230:	82 81       	ldd	r24, Z+2	; 0x02
    2232:	93 81       	ldd	r25, Z+3	; 0x03
    2234:	20 e0       	ldi	r18, 0x00	; 0
    2236:	30 e0       	ldi	r19, 0x00	; 0
    2238:	4a e7       	ldi	r20, 0x7A	; 122
    223a:	55 e4       	ldi	r21, 0x45	; 69
    223c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2240:	dc 01       	movw	r26, r24
    2242:	cb 01       	movw	r24, r22
    2244:	f8 01       	movw	r30, r16
    2246:	80 83       	st	Z, r24
    2248:	91 83       	std	Z+1, r25	; 0x01
    224a:	a2 83       	std	Z+2, r26	; 0x02
    224c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    224e:	fe 01       	movw	r30, r28
    2250:	ed 56       	subi	r30, 0x6D	; 109
    2252:	ff 4f       	sbci	r31, 0xFF	; 255
    2254:	60 81       	ld	r22, Z
    2256:	71 81       	ldd	r23, Z+1	; 0x01
    2258:	82 81       	ldd	r24, Z+2	; 0x02
    225a:	93 81       	ldd	r25, Z+3	; 0x03
    225c:	20 e0       	ldi	r18, 0x00	; 0
    225e:	30 e0       	ldi	r19, 0x00	; 0
    2260:	40 e8       	ldi	r20, 0x80	; 128
    2262:	5f e3       	ldi	r21, 0x3F	; 63
    2264:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2268:	88 23       	and	r24, r24
    226a:	44 f4       	brge	.+16     	; 0x227c <main+0x1746>
		__ticks = 1;
    226c:	fe 01       	movw	r30, r28
    226e:	ef 56       	subi	r30, 0x6F	; 111
    2270:	ff 4f       	sbci	r31, 0xFF	; 255
    2272:	81 e0       	ldi	r24, 0x01	; 1
    2274:	90 e0       	ldi	r25, 0x00	; 0
    2276:	91 83       	std	Z+1, r25	; 0x01
    2278:	80 83       	st	Z, r24
    227a:	64 c0       	rjmp	.+200    	; 0x2344 <main+0x180e>
	else if (__tmp > 65535)
    227c:	fe 01       	movw	r30, r28
    227e:	ed 56       	subi	r30, 0x6D	; 109
    2280:	ff 4f       	sbci	r31, 0xFF	; 255
    2282:	60 81       	ld	r22, Z
    2284:	71 81       	ldd	r23, Z+1	; 0x01
    2286:	82 81       	ldd	r24, Z+2	; 0x02
    2288:	93 81       	ldd	r25, Z+3	; 0x03
    228a:	20 e0       	ldi	r18, 0x00	; 0
    228c:	3f ef       	ldi	r19, 0xFF	; 255
    228e:	4f e7       	ldi	r20, 0x7F	; 127
    2290:	57 e4       	ldi	r21, 0x47	; 71
    2292:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2296:	18 16       	cp	r1, r24
    2298:	0c f0       	brlt	.+2      	; 0x229c <main+0x1766>
    229a:	43 c0       	rjmp	.+134    	; 0x2322 <main+0x17ec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    229c:	fe 01       	movw	r30, r28
    229e:	e9 56       	subi	r30, 0x69	; 105
    22a0:	ff 4f       	sbci	r31, 0xFF	; 255
    22a2:	60 81       	ld	r22, Z
    22a4:	71 81       	ldd	r23, Z+1	; 0x01
    22a6:	82 81       	ldd	r24, Z+2	; 0x02
    22a8:	93 81       	ldd	r25, Z+3	; 0x03
    22aa:	20 e0       	ldi	r18, 0x00	; 0
    22ac:	30 e0       	ldi	r19, 0x00	; 0
    22ae:	40 e2       	ldi	r20, 0x20	; 32
    22b0:	51 e4       	ldi	r21, 0x41	; 65
    22b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    22b6:	dc 01       	movw	r26, r24
    22b8:	cb 01       	movw	r24, r22
    22ba:	8e 01       	movw	r16, r28
    22bc:	0f 56       	subi	r16, 0x6F	; 111
    22be:	1f 4f       	sbci	r17, 0xFF	; 255
    22c0:	bc 01       	movw	r22, r24
    22c2:	cd 01       	movw	r24, r26
    22c4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    22c8:	dc 01       	movw	r26, r24
    22ca:	cb 01       	movw	r24, r22
    22cc:	f8 01       	movw	r30, r16
    22ce:	91 83       	std	Z+1, r25	; 0x01
    22d0:	80 83       	st	Z, r24
    22d2:	1f c0       	rjmp	.+62     	; 0x2312 <main+0x17dc>
    22d4:	fe 01       	movw	r30, r28
    22d6:	e1 57       	subi	r30, 0x71	; 113
    22d8:	ff 4f       	sbci	r31, 0xFF	; 255
    22da:	80 e9       	ldi	r24, 0x90	; 144
    22dc:	91 e0       	ldi	r25, 0x01	; 1
    22de:	91 83       	std	Z+1, r25	; 0x01
    22e0:	80 83       	st	Z, r24
    22e2:	fe 01       	movw	r30, r28
    22e4:	e1 57       	subi	r30, 0x71	; 113
    22e6:	ff 4f       	sbci	r31, 0xFF	; 255
    22e8:	80 81       	ld	r24, Z
    22ea:	91 81       	ldd	r25, Z+1	; 0x01
    22ec:	01 97       	sbiw	r24, 0x01	; 1
    22ee:	f1 f7       	brne	.-4      	; 0x22ec <main+0x17b6>
    22f0:	fe 01       	movw	r30, r28
    22f2:	e1 57       	subi	r30, 0x71	; 113
    22f4:	ff 4f       	sbci	r31, 0xFF	; 255
    22f6:	91 83       	std	Z+1, r25	; 0x01
    22f8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    22fa:	de 01       	movw	r26, r28
    22fc:	af 56       	subi	r26, 0x6F	; 111
    22fe:	bf 4f       	sbci	r27, 0xFF	; 255
    2300:	fe 01       	movw	r30, r28
    2302:	ef 56       	subi	r30, 0x6F	; 111
    2304:	ff 4f       	sbci	r31, 0xFF	; 255
    2306:	80 81       	ld	r24, Z
    2308:	91 81       	ldd	r25, Z+1	; 0x01
    230a:	01 97       	sbiw	r24, 0x01	; 1
    230c:	11 96       	adiw	r26, 0x01	; 1
    230e:	9c 93       	st	X, r25
    2310:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2312:	fe 01       	movw	r30, r28
    2314:	ef 56       	subi	r30, 0x6F	; 111
    2316:	ff 4f       	sbci	r31, 0xFF	; 255
    2318:	80 81       	ld	r24, Z
    231a:	91 81       	ldd	r25, Z+1	; 0x01
    231c:	00 97       	sbiw	r24, 0x00	; 0
    231e:	d1 f6       	brne	.-76     	; 0x22d4 <main+0x179e>
    2320:	27 c0       	rjmp	.+78     	; 0x2370 <main+0x183a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2322:	8e 01       	movw	r16, r28
    2324:	0f 56       	subi	r16, 0x6F	; 111
    2326:	1f 4f       	sbci	r17, 0xFF	; 255
    2328:	fe 01       	movw	r30, r28
    232a:	ed 56       	subi	r30, 0x6D	; 109
    232c:	ff 4f       	sbci	r31, 0xFF	; 255
    232e:	60 81       	ld	r22, Z
    2330:	71 81       	ldd	r23, Z+1	; 0x01
    2332:	82 81       	ldd	r24, Z+2	; 0x02
    2334:	93 81       	ldd	r25, Z+3	; 0x03
    2336:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    233a:	dc 01       	movw	r26, r24
    233c:	cb 01       	movw	r24, r22
    233e:	f8 01       	movw	r30, r16
    2340:	91 83       	std	Z+1, r25	; 0x01
    2342:	80 83       	st	Z, r24
    2344:	de 01       	movw	r26, r28
    2346:	a3 57       	subi	r26, 0x73	; 115
    2348:	bf 4f       	sbci	r27, 0xFF	; 255
    234a:	fe 01       	movw	r30, r28
    234c:	ef 56       	subi	r30, 0x6F	; 111
    234e:	ff 4f       	sbci	r31, 0xFF	; 255
    2350:	80 81       	ld	r24, Z
    2352:	91 81       	ldd	r25, Z+1	; 0x01
    2354:	8d 93       	st	X+, r24
    2356:	9c 93       	st	X, r25
    2358:	fe 01       	movw	r30, r28
    235a:	e3 57       	subi	r30, 0x73	; 115
    235c:	ff 4f       	sbci	r31, 0xFF	; 255
    235e:	80 81       	ld	r24, Z
    2360:	91 81       	ldd	r25, Z+1	; 0x01
    2362:	01 97       	sbiw	r24, 0x01	; 1
    2364:	f1 f7       	brne	.-4      	; 0x2362 <main+0x182c>
    2366:	fe 01       	movw	r30, r28
    2368:	e3 57       	subi	r30, 0x73	; 115
    236a:	ff 4f       	sbci	r31, 0xFF	; 255
    236c:	91 83       	std	Z+1, r25	; 0x01
    236e:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,0);
    2370:	a5 e3       	ldi	r26, 0x35	; 53
    2372:	b0 e0       	ldi	r27, 0x00	; 0
    2374:	e5 e3       	ldi	r30, 0x35	; 53
    2376:	f0 e0       	ldi	r31, 0x00	; 0
    2378:	80 81       	ld	r24, Z
    237a:	81 60       	ori	r24, 0x01	; 1
    237c:	8c 93       	st	X, r24
    237e:	fe 01       	movw	r30, r28
    2380:	e7 57       	subi	r30, 0x77	; 119
    2382:	ff 4f       	sbci	r31, 0xFF	; 255
    2384:	80 e0       	ldi	r24, 0x00	; 0
    2386:	90 e0       	ldi	r25, 0x00	; 0
    2388:	a8 e4       	ldi	r26, 0x48	; 72
    238a:	b4 e4       	ldi	r27, 0x44	; 68
    238c:	80 83       	st	Z, r24
    238e:	91 83       	std	Z+1, r25	; 0x01
    2390:	a2 83       	std	Z+2, r26	; 0x02
    2392:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2394:	8e 01       	movw	r16, r28
    2396:	0b 57       	subi	r16, 0x7B	; 123
    2398:	1f 4f       	sbci	r17, 0xFF	; 255
    239a:	fe 01       	movw	r30, r28
    239c:	e7 57       	subi	r30, 0x77	; 119
    239e:	ff 4f       	sbci	r31, 0xFF	; 255
    23a0:	60 81       	ld	r22, Z
    23a2:	71 81       	ldd	r23, Z+1	; 0x01
    23a4:	82 81       	ldd	r24, Z+2	; 0x02
    23a6:	93 81       	ldd	r25, Z+3	; 0x03
    23a8:	20 e0       	ldi	r18, 0x00	; 0
    23aa:	30 e0       	ldi	r19, 0x00	; 0
    23ac:	4a e7       	ldi	r20, 0x7A	; 122
    23ae:	55 e4       	ldi	r21, 0x45	; 69
    23b0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    23b4:	dc 01       	movw	r26, r24
    23b6:	cb 01       	movw	r24, r22
    23b8:	f8 01       	movw	r30, r16
    23ba:	80 83       	st	Z, r24
    23bc:	91 83       	std	Z+1, r25	; 0x01
    23be:	a2 83       	std	Z+2, r26	; 0x02
    23c0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    23c2:	fe 01       	movw	r30, r28
    23c4:	eb 57       	subi	r30, 0x7B	; 123
    23c6:	ff 4f       	sbci	r31, 0xFF	; 255
    23c8:	60 81       	ld	r22, Z
    23ca:	71 81       	ldd	r23, Z+1	; 0x01
    23cc:	82 81       	ldd	r24, Z+2	; 0x02
    23ce:	93 81       	ldd	r25, Z+3	; 0x03
    23d0:	20 e0       	ldi	r18, 0x00	; 0
    23d2:	30 e0       	ldi	r19, 0x00	; 0
    23d4:	40 e8       	ldi	r20, 0x80	; 128
    23d6:	5f e3       	ldi	r21, 0x3F	; 63
    23d8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    23dc:	88 23       	and	r24, r24
    23de:	44 f4       	brge	.+16     	; 0x23f0 <main+0x18ba>
		__ticks = 1;
    23e0:	fe 01       	movw	r30, r28
    23e2:	ed 57       	subi	r30, 0x7D	; 125
    23e4:	ff 4f       	sbci	r31, 0xFF	; 255
    23e6:	81 e0       	ldi	r24, 0x01	; 1
    23e8:	90 e0       	ldi	r25, 0x00	; 0
    23ea:	91 83       	std	Z+1, r25	; 0x01
    23ec:	80 83       	st	Z, r24
    23ee:	64 c0       	rjmp	.+200    	; 0x24b8 <main+0x1982>
	else if (__tmp > 65535)
    23f0:	fe 01       	movw	r30, r28
    23f2:	eb 57       	subi	r30, 0x7B	; 123
    23f4:	ff 4f       	sbci	r31, 0xFF	; 255
    23f6:	60 81       	ld	r22, Z
    23f8:	71 81       	ldd	r23, Z+1	; 0x01
    23fa:	82 81       	ldd	r24, Z+2	; 0x02
    23fc:	93 81       	ldd	r25, Z+3	; 0x03
    23fe:	20 e0       	ldi	r18, 0x00	; 0
    2400:	3f ef       	ldi	r19, 0xFF	; 255
    2402:	4f e7       	ldi	r20, 0x7F	; 127
    2404:	57 e4       	ldi	r21, 0x47	; 71
    2406:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    240a:	18 16       	cp	r1, r24
    240c:	0c f0       	brlt	.+2      	; 0x2410 <main+0x18da>
    240e:	43 c0       	rjmp	.+134    	; 0x2496 <main+0x1960>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2410:	fe 01       	movw	r30, r28
    2412:	e7 57       	subi	r30, 0x77	; 119
    2414:	ff 4f       	sbci	r31, 0xFF	; 255
    2416:	60 81       	ld	r22, Z
    2418:	71 81       	ldd	r23, Z+1	; 0x01
    241a:	82 81       	ldd	r24, Z+2	; 0x02
    241c:	93 81       	ldd	r25, Z+3	; 0x03
    241e:	20 e0       	ldi	r18, 0x00	; 0
    2420:	30 e0       	ldi	r19, 0x00	; 0
    2422:	40 e2       	ldi	r20, 0x20	; 32
    2424:	51 e4       	ldi	r21, 0x41	; 65
    2426:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    242a:	dc 01       	movw	r26, r24
    242c:	cb 01       	movw	r24, r22
    242e:	8e 01       	movw	r16, r28
    2430:	0d 57       	subi	r16, 0x7D	; 125
    2432:	1f 4f       	sbci	r17, 0xFF	; 255
    2434:	bc 01       	movw	r22, r24
    2436:	cd 01       	movw	r24, r26
    2438:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    243c:	dc 01       	movw	r26, r24
    243e:	cb 01       	movw	r24, r22
    2440:	f8 01       	movw	r30, r16
    2442:	91 83       	std	Z+1, r25	; 0x01
    2444:	80 83       	st	Z, r24
    2446:	1f c0       	rjmp	.+62     	; 0x2486 <main+0x1950>
    2448:	fe 01       	movw	r30, r28
    244a:	ef 57       	subi	r30, 0x7F	; 127
    244c:	ff 4f       	sbci	r31, 0xFF	; 255
    244e:	80 e9       	ldi	r24, 0x90	; 144
    2450:	91 e0       	ldi	r25, 0x01	; 1
    2452:	91 83       	std	Z+1, r25	; 0x01
    2454:	80 83       	st	Z, r24
    2456:	fe 01       	movw	r30, r28
    2458:	ef 57       	subi	r30, 0x7F	; 127
    245a:	ff 4f       	sbci	r31, 0xFF	; 255
    245c:	80 81       	ld	r24, Z
    245e:	91 81       	ldd	r25, Z+1	; 0x01
    2460:	01 97       	sbiw	r24, 0x01	; 1
    2462:	f1 f7       	brne	.-4      	; 0x2460 <main+0x192a>
    2464:	fe 01       	movw	r30, r28
    2466:	ef 57       	subi	r30, 0x7F	; 127
    2468:	ff 4f       	sbci	r31, 0xFF	; 255
    246a:	91 83       	std	Z+1, r25	; 0x01
    246c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    246e:	de 01       	movw	r26, r28
    2470:	ad 57       	subi	r26, 0x7D	; 125
    2472:	bf 4f       	sbci	r27, 0xFF	; 255
    2474:	fe 01       	movw	r30, r28
    2476:	ed 57       	subi	r30, 0x7D	; 125
    2478:	ff 4f       	sbci	r31, 0xFF	; 255
    247a:	80 81       	ld	r24, Z
    247c:	91 81       	ldd	r25, Z+1	; 0x01
    247e:	01 97       	sbiw	r24, 0x01	; 1
    2480:	11 96       	adiw	r26, 0x01	; 1
    2482:	9c 93       	st	X, r25
    2484:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2486:	fe 01       	movw	r30, r28
    2488:	ed 57       	subi	r30, 0x7D	; 125
    248a:	ff 4f       	sbci	r31, 0xFF	; 255
    248c:	80 81       	ld	r24, Z
    248e:	91 81       	ldd	r25, Z+1	; 0x01
    2490:	00 97       	sbiw	r24, 0x00	; 0
    2492:	d1 f6       	brne	.-76     	; 0x2448 <main+0x1912>
    2494:	27 c0       	rjmp	.+78     	; 0x24e4 <main+0x19ae>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2496:	8e 01       	movw	r16, r28
    2498:	0d 57       	subi	r16, 0x7D	; 125
    249a:	1f 4f       	sbci	r17, 0xFF	; 255
    249c:	fe 01       	movw	r30, r28
    249e:	eb 57       	subi	r30, 0x7B	; 123
    24a0:	ff 4f       	sbci	r31, 0xFF	; 255
    24a2:	60 81       	ld	r22, Z
    24a4:	71 81       	ldd	r23, Z+1	; 0x01
    24a6:	82 81       	ldd	r24, Z+2	; 0x02
    24a8:	93 81       	ldd	r25, Z+3	; 0x03
    24aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    24ae:	dc 01       	movw	r26, r24
    24b0:	cb 01       	movw	r24, r22
    24b2:	f8 01       	movw	r30, r16
    24b4:	91 83       	std	Z+1, r25	; 0x01
    24b6:	80 83       	st	Z, r24
    24b8:	de 01       	movw	r26, r28
    24ba:	a1 58       	subi	r26, 0x81	; 129
    24bc:	bf 4f       	sbci	r27, 0xFF	; 255
    24be:	fe 01       	movw	r30, r28
    24c0:	ed 57       	subi	r30, 0x7D	; 125
    24c2:	ff 4f       	sbci	r31, 0xFF	; 255
    24c4:	80 81       	ld	r24, Z
    24c6:	91 81       	ldd	r25, Z+1	; 0x01
    24c8:	8d 93       	st	X+, r24
    24ca:	9c 93       	st	X, r25
    24cc:	fe 01       	movw	r30, r28
    24ce:	e1 58       	subi	r30, 0x81	; 129
    24d0:	ff 4f       	sbci	r31, 0xFF	; 255
    24d2:	80 81       	ld	r24, Z
    24d4:	91 81       	ldd	r25, Z+1	; 0x01
    24d6:	01 97       	sbiw	r24, 0x01	; 1
    24d8:	f1 f7       	brne	.-4      	; 0x24d6 <main+0x19a0>
    24da:	fe 01       	movw	r30, r28
    24dc:	e1 58       	subi	r30, 0x81	; 129
    24de:	ff 4f       	sbci	r31, 0xFF	; 255
    24e0:	91 83       	std	Z+1, r25	; 0x01
    24e2:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,0);
    24e4:	a5 e3       	ldi	r26, 0x35	; 53
    24e6:	b0 e0       	ldi	r27, 0x00	; 0
    24e8:	e5 e3       	ldi	r30, 0x35	; 53
    24ea:	f0 e0       	ldi	r31, 0x00	; 0
    24ec:	80 81       	ld	r24, Z
    24ee:	8e 7f       	andi	r24, 0xFE	; 254
    24f0:	8c 93       	st	X, r24
				LCD_clearScreen();
    24f2:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
				state = MAIN_MENU; // Return to main menu
    24f6:	fe 01       	movw	r30, r28
    24f8:	e0 5a       	subi	r30, 0xA0	; 160
    24fa:	fe 4f       	sbci	r31, 0xFE	; 254
    24fc:	81 e0       	ldi	r24, 0x01	; 1
    24fe:	80 83       	st	Z, r24
    2500:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <main+0x82>
				break;

			case WAITING_SIGNAL_STATE:
				LCD_displayString("Waiting Signal");
    2504:	84 ea       	ldi	r24, 0xA4	; 164
    2506:	90 e0       	ldi	r25, 0x00	; 0
    2508:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
				SET_BIT(PORTC,2);
    250c:	a5 e3       	ldi	r26, 0x35	; 53
    250e:	b0 e0       	ldi	r27, 0x00	; 0
    2510:	e5 e3       	ldi	r30, 0x35	; 53
    2512:	f0 e0       	ldi	r31, 0x00	; 0
    2514:	80 81       	ld	r24, Z
    2516:	84 60       	ori	r24, 0x04	; 4
    2518:	8c 93       	st	X, r24
				SET_BIT(PORTC,0);
    251a:	a5 e3       	ldi	r26, 0x35	; 53
    251c:	b0 e0       	ldi	r27, 0x00	; 0
    251e:	e5 e3       	ldi	r30, 0x35	; 53
    2520:	f0 e0       	ldi	r31, 0x00	; 0
    2522:	80 81       	ld	r24, Z
    2524:	81 60       	ori	r24, 0x01	; 1
    2526:	8c 93       	st	X, r24
    2528:	fe 01       	movw	r30, r28
    252a:	e5 58       	subi	r30, 0x85	; 133
    252c:	ff 4f       	sbci	r31, 0xFF	; 255
    252e:	80 e0       	ldi	r24, 0x00	; 0
    2530:	90 e0       	ldi	r25, 0x00	; 0
    2532:	a8 e4       	ldi	r26, 0x48	; 72
    2534:	b4 e4       	ldi	r27, 0x44	; 68
    2536:	80 83       	st	Z, r24
    2538:	91 83       	std	Z+1, r25	; 0x01
    253a:	a2 83       	std	Z+2, r26	; 0x02
    253c:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    253e:	8e 01       	movw	r16, r28
    2540:	09 58       	subi	r16, 0x89	; 137
    2542:	1f 4f       	sbci	r17, 0xFF	; 255
    2544:	fe 01       	movw	r30, r28
    2546:	e5 58       	subi	r30, 0x85	; 133
    2548:	ff 4f       	sbci	r31, 0xFF	; 255
    254a:	60 81       	ld	r22, Z
    254c:	71 81       	ldd	r23, Z+1	; 0x01
    254e:	82 81       	ldd	r24, Z+2	; 0x02
    2550:	93 81       	ldd	r25, Z+3	; 0x03
    2552:	20 e0       	ldi	r18, 0x00	; 0
    2554:	30 e0       	ldi	r19, 0x00	; 0
    2556:	4a e7       	ldi	r20, 0x7A	; 122
    2558:	55 e4       	ldi	r21, 0x45	; 69
    255a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    255e:	dc 01       	movw	r26, r24
    2560:	cb 01       	movw	r24, r22
    2562:	f8 01       	movw	r30, r16
    2564:	80 83       	st	Z, r24
    2566:	91 83       	std	Z+1, r25	; 0x01
    2568:	a2 83       	std	Z+2, r26	; 0x02
    256a:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    256c:	fe 01       	movw	r30, r28
    256e:	e9 58       	subi	r30, 0x89	; 137
    2570:	ff 4f       	sbci	r31, 0xFF	; 255
    2572:	60 81       	ld	r22, Z
    2574:	71 81       	ldd	r23, Z+1	; 0x01
    2576:	82 81       	ldd	r24, Z+2	; 0x02
    2578:	93 81       	ldd	r25, Z+3	; 0x03
    257a:	20 e0       	ldi	r18, 0x00	; 0
    257c:	30 e0       	ldi	r19, 0x00	; 0
    257e:	40 e8       	ldi	r20, 0x80	; 128
    2580:	5f e3       	ldi	r21, 0x3F	; 63
    2582:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2586:	88 23       	and	r24, r24
    2588:	44 f4       	brge	.+16     	; 0x259a <main+0x1a64>
		__ticks = 1;
    258a:	fe 01       	movw	r30, r28
    258c:	eb 58       	subi	r30, 0x8B	; 139
    258e:	ff 4f       	sbci	r31, 0xFF	; 255
    2590:	81 e0       	ldi	r24, 0x01	; 1
    2592:	90 e0       	ldi	r25, 0x00	; 0
    2594:	91 83       	std	Z+1, r25	; 0x01
    2596:	80 83       	st	Z, r24
    2598:	64 c0       	rjmp	.+200    	; 0x2662 <main+0x1b2c>
	else if (__tmp > 65535)
    259a:	fe 01       	movw	r30, r28
    259c:	e9 58       	subi	r30, 0x89	; 137
    259e:	ff 4f       	sbci	r31, 0xFF	; 255
    25a0:	60 81       	ld	r22, Z
    25a2:	71 81       	ldd	r23, Z+1	; 0x01
    25a4:	82 81       	ldd	r24, Z+2	; 0x02
    25a6:	93 81       	ldd	r25, Z+3	; 0x03
    25a8:	20 e0       	ldi	r18, 0x00	; 0
    25aa:	3f ef       	ldi	r19, 0xFF	; 255
    25ac:	4f e7       	ldi	r20, 0x7F	; 127
    25ae:	57 e4       	ldi	r21, 0x47	; 71
    25b0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    25b4:	18 16       	cp	r1, r24
    25b6:	0c f0       	brlt	.+2      	; 0x25ba <main+0x1a84>
    25b8:	43 c0       	rjmp	.+134    	; 0x2640 <main+0x1b0a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    25ba:	fe 01       	movw	r30, r28
    25bc:	e5 58       	subi	r30, 0x85	; 133
    25be:	ff 4f       	sbci	r31, 0xFF	; 255
    25c0:	60 81       	ld	r22, Z
    25c2:	71 81       	ldd	r23, Z+1	; 0x01
    25c4:	82 81       	ldd	r24, Z+2	; 0x02
    25c6:	93 81       	ldd	r25, Z+3	; 0x03
    25c8:	20 e0       	ldi	r18, 0x00	; 0
    25ca:	30 e0       	ldi	r19, 0x00	; 0
    25cc:	40 e2       	ldi	r20, 0x20	; 32
    25ce:	51 e4       	ldi	r21, 0x41	; 65
    25d0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    25d4:	dc 01       	movw	r26, r24
    25d6:	cb 01       	movw	r24, r22
    25d8:	8e 01       	movw	r16, r28
    25da:	0b 58       	subi	r16, 0x8B	; 139
    25dc:	1f 4f       	sbci	r17, 0xFF	; 255
    25de:	bc 01       	movw	r22, r24
    25e0:	cd 01       	movw	r24, r26
    25e2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    25e6:	dc 01       	movw	r26, r24
    25e8:	cb 01       	movw	r24, r22
    25ea:	f8 01       	movw	r30, r16
    25ec:	91 83       	std	Z+1, r25	; 0x01
    25ee:	80 83       	st	Z, r24
    25f0:	1f c0       	rjmp	.+62     	; 0x2630 <main+0x1afa>
    25f2:	fe 01       	movw	r30, r28
    25f4:	ed 58       	subi	r30, 0x8D	; 141
    25f6:	ff 4f       	sbci	r31, 0xFF	; 255
    25f8:	80 e9       	ldi	r24, 0x90	; 144
    25fa:	91 e0       	ldi	r25, 0x01	; 1
    25fc:	91 83       	std	Z+1, r25	; 0x01
    25fe:	80 83       	st	Z, r24
    2600:	fe 01       	movw	r30, r28
    2602:	ed 58       	subi	r30, 0x8D	; 141
    2604:	ff 4f       	sbci	r31, 0xFF	; 255
    2606:	80 81       	ld	r24, Z
    2608:	91 81       	ldd	r25, Z+1	; 0x01
    260a:	01 97       	sbiw	r24, 0x01	; 1
    260c:	f1 f7       	brne	.-4      	; 0x260a <main+0x1ad4>
    260e:	fe 01       	movw	r30, r28
    2610:	ed 58       	subi	r30, 0x8D	; 141
    2612:	ff 4f       	sbci	r31, 0xFF	; 255
    2614:	91 83       	std	Z+1, r25	; 0x01
    2616:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2618:	de 01       	movw	r26, r28
    261a:	ab 58       	subi	r26, 0x8B	; 139
    261c:	bf 4f       	sbci	r27, 0xFF	; 255
    261e:	fe 01       	movw	r30, r28
    2620:	eb 58       	subi	r30, 0x8B	; 139
    2622:	ff 4f       	sbci	r31, 0xFF	; 255
    2624:	80 81       	ld	r24, Z
    2626:	91 81       	ldd	r25, Z+1	; 0x01
    2628:	01 97       	sbiw	r24, 0x01	; 1
    262a:	11 96       	adiw	r26, 0x01	; 1
    262c:	9c 93       	st	X, r25
    262e:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2630:	fe 01       	movw	r30, r28
    2632:	eb 58       	subi	r30, 0x8B	; 139
    2634:	ff 4f       	sbci	r31, 0xFF	; 255
    2636:	80 81       	ld	r24, Z
    2638:	91 81       	ldd	r25, Z+1	; 0x01
    263a:	00 97       	sbiw	r24, 0x00	; 0
    263c:	d1 f6       	brne	.-76     	; 0x25f2 <main+0x1abc>
    263e:	27 c0       	rjmp	.+78     	; 0x268e <main+0x1b58>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2640:	8e 01       	movw	r16, r28
    2642:	0b 58       	subi	r16, 0x8B	; 139
    2644:	1f 4f       	sbci	r17, 0xFF	; 255
    2646:	fe 01       	movw	r30, r28
    2648:	e9 58       	subi	r30, 0x89	; 137
    264a:	ff 4f       	sbci	r31, 0xFF	; 255
    264c:	60 81       	ld	r22, Z
    264e:	71 81       	ldd	r23, Z+1	; 0x01
    2650:	82 81       	ldd	r24, Z+2	; 0x02
    2652:	93 81       	ldd	r25, Z+3	; 0x03
    2654:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2658:	dc 01       	movw	r26, r24
    265a:	cb 01       	movw	r24, r22
    265c:	f8 01       	movw	r30, r16
    265e:	91 83       	std	Z+1, r25	; 0x01
    2660:	80 83       	st	Z, r24
    2662:	de 01       	movw	r26, r28
    2664:	af 58       	subi	r26, 0x8F	; 143
    2666:	bf 4f       	sbci	r27, 0xFF	; 255
    2668:	fe 01       	movw	r30, r28
    266a:	eb 58       	subi	r30, 0x8B	; 139
    266c:	ff 4f       	sbci	r31, 0xFF	; 255
    266e:	80 81       	ld	r24, Z
    2670:	91 81       	ldd	r25, Z+1	; 0x01
    2672:	8d 93       	st	X+, r24
    2674:	9c 93       	st	X, r25
    2676:	fe 01       	movw	r30, r28
    2678:	ef 58       	subi	r30, 0x8F	; 143
    267a:	ff 4f       	sbci	r31, 0xFF	; 255
    267c:	80 81       	ld	r24, Z
    267e:	91 81       	ldd	r25, Z+1	; 0x01
    2680:	01 97       	sbiw	r24, 0x01	; 1
    2682:	f1 f7       	brne	.-4      	; 0x2680 <main+0x1b4a>
    2684:	fe 01       	movw	r30, r28
    2686:	ef 58       	subi	r30, 0x8F	; 143
    2688:	ff 4f       	sbci	r31, 0xFF	; 255
    268a:	91 83       	std	Z+1, r25	; 0x01
    268c:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    268e:	a5 e3       	ldi	r26, 0x35	; 53
    2690:	b0 e0       	ldi	r27, 0x00	; 0
    2692:	e5 e3       	ldi	r30, 0x35	; 53
    2694:	f0 e0       	ldi	r31, 0x00	; 0
    2696:	80 81       	ld	r24, Z
    2698:	8b 7f       	andi	r24, 0xFB	; 251
    269a:	8c 93       	st	X, r24
				CLR_BIT(PORTC,0);
    269c:	a5 e3       	ldi	r26, 0x35	; 53
    269e:	b0 e0       	ldi	r27, 0x00	; 0
    26a0:	e5 e3       	ldi	r30, 0x35	; 53
    26a2:	f0 e0       	ldi	r31, 0x00	; 0
    26a4:	80 81       	ld	r24, Z
    26a6:	8e 7f       	andi	r24, 0xFE	; 254
    26a8:	8c 93       	st	X, r24
    26aa:	fe 01       	movw	r30, r28
    26ac:	e3 59       	subi	r30, 0x93	; 147
    26ae:	ff 4f       	sbci	r31, 0xFF	; 255
    26b0:	80 e0       	ldi	r24, 0x00	; 0
    26b2:	90 e0       	ldi	r25, 0x00	; 0
    26b4:	a8 e4       	ldi	r26, 0x48	; 72
    26b6:	b4 e4       	ldi	r27, 0x44	; 68
    26b8:	80 83       	st	Z, r24
    26ba:	91 83       	std	Z+1, r25	; 0x01
    26bc:	a2 83       	std	Z+2, r26	; 0x02
    26be:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    26c0:	8e 01       	movw	r16, r28
    26c2:	07 59       	subi	r16, 0x97	; 151
    26c4:	1f 4f       	sbci	r17, 0xFF	; 255
    26c6:	fe 01       	movw	r30, r28
    26c8:	e3 59       	subi	r30, 0x93	; 147
    26ca:	ff 4f       	sbci	r31, 0xFF	; 255
    26cc:	60 81       	ld	r22, Z
    26ce:	71 81       	ldd	r23, Z+1	; 0x01
    26d0:	82 81       	ldd	r24, Z+2	; 0x02
    26d2:	93 81       	ldd	r25, Z+3	; 0x03
    26d4:	20 e0       	ldi	r18, 0x00	; 0
    26d6:	30 e0       	ldi	r19, 0x00	; 0
    26d8:	4a e7       	ldi	r20, 0x7A	; 122
    26da:	55 e4       	ldi	r21, 0x45	; 69
    26dc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    26e0:	dc 01       	movw	r26, r24
    26e2:	cb 01       	movw	r24, r22
    26e4:	f8 01       	movw	r30, r16
    26e6:	80 83       	st	Z, r24
    26e8:	91 83       	std	Z+1, r25	; 0x01
    26ea:	a2 83       	std	Z+2, r26	; 0x02
    26ec:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    26ee:	fe 01       	movw	r30, r28
    26f0:	e7 59       	subi	r30, 0x97	; 151
    26f2:	ff 4f       	sbci	r31, 0xFF	; 255
    26f4:	60 81       	ld	r22, Z
    26f6:	71 81       	ldd	r23, Z+1	; 0x01
    26f8:	82 81       	ldd	r24, Z+2	; 0x02
    26fa:	93 81       	ldd	r25, Z+3	; 0x03
    26fc:	20 e0       	ldi	r18, 0x00	; 0
    26fe:	30 e0       	ldi	r19, 0x00	; 0
    2700:	40 e8       	ldi	r20, 0x80	; 128
    2702:	5f e3       	ldi	r21, 0x3F	; 63
    2704:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2708:	88 23       	and	r24, r24
    270a:	44 f4       	brge	.+16     	; 0x271c <main+0x1be6>
		__ticks = 1;
    270c:	fe 01       	movw	r30, r28
    270e:	e9 59       	subi	r30, 0x99	; 153
    2710:	ff 4f       	sbci	r31, 0xFF	; 255
    2712:	81 e0       	ldi	r24, 0x01	; 1
    2714:	90 e0       	ldi	r25, 0x00	; 0
    2716:	91 83       	std	Z+1, r25	; 0x01
    2718:	80 83       	st	Z, r24
    271a:	64 c0       	rjmp	.+200    	; 0x27e4 <main+0x1cae>
	else if (__tmp > 65535)
    271c:	fe 01       	movw	r30, r28
    271e:	e7 59       	subi	r30, 0x97	; 151
    2720:	ff 4f       	sbci	r31, 0xFF	; 255
    2722:	60 81       	ld	r22, Z
    2724:	71 81       	ldd	r23, Z+1	; 0x01
    2726:	82 81       	ldd	r24, Z+2	; 0x02
    2728:	93 81       	ldd	r25, Z+3	; 0x03
    272a:	20 e0       	ldi	r18, 0x00	; 0
    272c:	3f ef       	ldi	r19, 0xFF	; 255
    272e:	4f e7       	ldi	r20, 0x7F	; 127
    2730:	57 e4       	ldi	r21, 0x47	; 71
    2732:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2736:	18 16       	cp	r1, r24
    2738:	0c f0       	brlt	.+2      	; 0x273c <main+0x1c06>
    273a:	43 c0       	rjmp	.+134    	; 0x27c2 <main+0x1c8c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    273c:	fe 01       	movw	r30, r28
    273e:	e3 59       	subi	r30, 0x93	; 147
    2740:	ff 4f       	sbci	r31, 0xFF	; 255
    2742:	60 81       	ld	r22, Z
    2744:	71 81       	ldd	r23, Z+1	; 0x01
    2746:	82 81       	ldd	r24, Z+2	; 0x02
    2748:	93 81       	ldd	r25, Z+3	; 0x03
    274a:	20 e0       	ldi	r18, 0x00	; 0
    274c:	30 e0       	ldi	r19, 0x00	; 0
    274e:	40 e2       	ldi	r20, 0x20	; 32
    2750:	51 e4       	ldi	r21, 0x41	; 65
    2752:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2756:	dc 01       	movw	r26, r24
    2758:	cb 01       	movw	r24, r22
    275a:	8e 01       	movw	r16, r28
    275c:	09 59       	subi	r16, 0x99	; 153
    275e:	1f 4f       	sbci	r17, 0xFF	; 255
    2760:	bc 01       	movw	r22, r24
    2762:	cd 01       	movw	r24, r26
    2764:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2768:	dc 01       	movw	r26, r24
    276a:	cb 01       	movw	r24, r22
    276c:	f8 01       	movw	r30, r16
    276e:	91 83       	std	Z+1, r25	; 0x01
    2770:	80 83       	st	Z, r24
    2772:	1f c0       	rjmp	.+62     	; 0x27b2 <main+0x1c7c>
    2774:	fe 01       	movw	r30, r28
    2776:	eb 59       	subi	r30, 0x9B	; 155
    2778:	ff 4f       	sbci	r31, 0xFF	; 255
    277a:	80 e9       	ldi	r24, 0x90	; 144
    277c:	91 e0       	ldi	r25, 0x01	; 1
    277e:	91 83       	std	Z+1, r25	; 0x01
    2780:	80 83       	st	Z, r24
    2782:	fe 01       	movw	r30, r28
    2784:	eb 59       	subi	r30, 0x9B	; 155
    2786:	ff 4f       	sbci	r31, 0xFF	; 255
    2788:	80 81       	ld	r24, Z
    278a:	91 81       	ldd	r25, Z+1	; 0x01
    278c:	01 97       	sbiw	r24, 0x01	; 1
    278e:	f1 f7       	brne	.-4      	; 0x278c <main+0x1c56>
    2790:	fe 01       	movw	r30, r28
    2792:	eb 59       	subi	r30, 0x9B	; 155
    2794:	ff 4f       	sbci	r31, 0xFF	; 255
    2796:	91 83       	std	Z+1, r25	; 0x01
    2798:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    279a:	de 01       	movw	r26, r28
    279c:	a9 59       	subi	r26, 0x99	; 153
    279e:	bf 4f       	sbci	r27, 0xFF	; 255
    27a0:	fe 01       	movw	r30, r28
    27a2:	e9 59       	subi	r30, 0x99	; 153
    27a4:	ff 4f       	sbci	r31, 0xFF	; 255
    27a6:	80 81       	ld	r24, Z
    27a8:	91 81       	ldd	r25, Z+1	; 0x01
    27aa:	01 97       	sbiw	r24, 0x01	; 1
    27ac:	11 96       	adiw	r26, 0x01	; 1
    27ae:	9c 93       	st	X, r25
    27b0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    27b2:	fe 01       	movw	r30, r28
    27b4:	e9 59       	subi	r30, 0x99	; 153
    27b6:	ff 4f       	sbci	r31, 0xFF	; 255
    27b8:	80 81       	ld	r24, Z
    27ba:	91 81       	ldd	r25, Z+1	; 0x01
    27bc:	00 97       	sbiw	r24, 0x00	; 0
    27be:	d1 f6       	brne	.-76     	; 0x2774 <main+0x1c3e>
    27c0:	27 c0       	rjmp	.+78     	; 0x2810 <main+0x1cda>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    27c2:	8e 01       	movw	r16, r28
    27c4:	09 59       	subi	r16, 0x99	; 153
    27c6:	1f 4f       	sbci	r17, 0xFF	; 255
    27c8:	fe 01       	movw	r30, r28
    27ca:	e7 59       	subi	r30, 0x97	; 151
    27cc:	ff 4f       	sbci	r31, 0xFF	; 255
    27ce:	60 81       	ld	r22, Z
    27d0:	71 81       	ldd	r23, Z+1	; 0x01
    27d2:	82 81       	ldd	r24, Z+2	; 0x02
    27d4:	93 81       	ldd	r25, Z+3	; 0x03
    27d6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    27da:	dc 01       	movw	r26, r24
    27dc:	cb 01       	movw	r24, r22
    27de:	f8 01       	movw	r30, r16
    27e0:	91 83       	std	Z+1, r25	; 0x01
    27e2:	80 83       	st	Z, r24
    27e4:	de 01       	movw	r26, r28
    27e6:	ad 59       	subi	r26, 0x9D	; 157
    27e8:	bf 4f       	sbci	r27, 0xFF	; 255
    27ea:	fe 01       	movw	r30, r28
    27ec:	e9 59       	subi	r30, 0x99	; 153
    27ee:	ff 4f       	sbci	r31, 0xFF	; 255
    27f0:	80 81       	ld	r24, Z
    27f2:	91 81       	ldd	r25, Z+1	; 0x01
    27f4:	8d 93       	st	X+, r24
    27f6:	9c 93       	st	X, r25
    27f8:	fe 01       	movw	r30, r28
    27fa:	ed 59       	subi	r30, 0x9D	; 157
    27fc:	ff 4f       	sbci	r31, 0xFF	; 255
    27fe:	80 81       	ld	r24, Z
    2800:	91 81       	ldd	r25, Z+1	; 0x01
    2802:	01 97       	sbiw	r24, 0x01	; 1
    2804:	f1 f7       	brne	.-4      	; 0x2802 <main+0x1ccc>
    2806:	fe 01       	movw	r30, r28
    2808:	ed 59       	subi	r30, 0x9D	; 157
    280a:	ff 4f       	sbci	r31, 0xFF	; 255
    280c:	91 83       	std	Z+1, r25	; 0x01
    280e:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,2);
    2810:	a5 e3       	ldi	r26, 0x35	; 53
    2812:	b0 e0       	ldi	r27, 0x00	; 0
    2814:	e5 e3       	ldi	r30, 0x35	; 53
    2816:	f0 e0       	ldi	r31, 0x00	; 0
    2818:	80 81       	ld	r24, Z
    281a:	84 60       	ori	r24, 0x04	; 4
    281c:	8c 93       	st	X, r24
				SET_BIT(PORTC,0);
    281e:	a5 e3       	ldi	r26, 0x35	; 53
    2820:	b0 e0       	ldi	r27, 0x00	; 0
    2822:	e5 e3       	ldi	r30, 0x35	; 53
    2824:	f0 e0       	ldi	r31, 0x00	; 0
    2826:	80 81       	ld	r24, Z
    2828:	81 60       	ori	r24, 0x01	; 1
    282a:	8c 93       	st	X, r24
    282c:	fe 01       	movw	r30, r28
    282e:	e1 5a       	subi	r30, 0xA1	; 161
    2830:	ff 4f       	sbci	r31, 0xFF	; 255
    2832:	80 e0       	ldi	r24, 0x00	; 0
    2834:	90 e0       	ldi	r25, 0x00	; 0
    2836:	a8 e4       	ldi	r26, 0x48	; 72
    2838:	b4 e4       	ldi	r27, 0x44	; 68
    283a:	80 83       	st	Z, r24
    283c:	91 83       	std	Z+1, r25	; 0x01
    283e:	a2 83       	std	Z+2, r26	; 0x02
    2840:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2842:	8e 01       	movw	r16, r28
    2844:	05 5a       	subi	r16, 0xA5	; 165
    2846:	1f 4f       	sbci	r17, 0xFF	; 255
    2848:	fe 01       	movw	r30, r28
    284a:	e1 5a       	subi	r30, 0xA1	; 161
    284c:	ff 4f       	sbci	r31, 0xFF	; 255
    284e:	60 81       	ld	r22, Z
    2850:	71 81       	ldd	r23, Z+1	; 0x01
    2852:	82 81       	ldd	r24, Z+2	; 0x02
    2854:	93 81       	ldd	r25, Z+3	; 0x03
    2856:	20 e0       	ldi	r18, 0x00	; 0
    2858:	30 e0       	ldi	r19, 0x00	; 0
    285a:	4a e7       	ldi	r20, 0x7A	; 122
    285c:	55 e4       	ldi	r21, 0x45	; 69
    285e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2862:	dc 01       	movw	r26, r24
    2864:	cb 01       	movw	r24, r22
    2866:	f8 01       	movw	r30, r16
    2868:	80 83       	st	Z, r24
    286a:	91 83       	std	Z+1, r25	; 0x01
    286c:	a2 83       	std	Z+2, r26	; 0x02
    286e:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2870:	fe 01       	movw	r30, r28
    2872:	e5 5a       	subi	r30, 0xA5	; 165
    2874:	ff 4f       	sbci	r31, 0xFF	; 255
    2876:	60 81       	ld	r22, Z
    2878:	71 81       	ldd	r23, Z+1	; 0x01
    287a:	82 81       	ldd	r24, Z+2	; 0x02
    287c:	93 81       	ldd	r25, Z+3	; 0x03
    287e:	20 e0       	ldi	r18, 0x00	; 0
    2880:	30 e0       	ldi	r19, 0x00	; 0
    2882:	40 e8       	ldi	r20, 0x80	; 128
    2884:	5f e3       	ldi	r21, 0x3F	; 63
    2886:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    288a:	88 23       	and	r24, r24
    288c:	44 f4       	brge	.+16     	; 0x289e <main+0x1d68>
		__ticks = 1;
    288e:	fe 01       	movw	r30, r28
    2890:	e7 5a       	subi	r30, 0xA7	; 167
    2892:	ff 4f       	sbci	r31, 0xFF	; 255
    2894:	81 e0       	ldi	r24, 0x01	; 1
    2896:	90 e0       	ldi	r25, 0x00	; 0
    2898:	91 83       	std	Z+1, r25	; 0x01
    289a:	80 83       	st	Z, r24
    289c:	64 c0       	rjmp	.+200    	; 0x2966 <main+0x1e30>
	else if (__tmp > 65535)
    289e:	fe 01       	movw	r30, r28
    28a0:	e5 5a       	subi	r30, 0xA5	; 165
    28a2:	ff 4f       	sbci	r31, 0xFF	; 255
    28a4:	60 81       	ld	r22, Z
    28a6:	71 81       	ldd	r23, Z+1	; 0x01
    28a8:	82 81       	ldd	r24, Z+2	; 0x02
    28aa:	93 81       	ldd	r25, Z+3	; 0x03
    28ac:	20 e0       	ldi	r18, 0x00	; 0
    28ae:	3f ef       	ldi	r19, 0xFF	; 255
    28b0:	4f e7       	ldi	r20, 0x7F	; 127
    28b2:	57 e4       	ldi	r21, 0x47	; 71
    28b4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    28b8:	18 16       	cp	r1, r24
    28ba:	0c f0       	brlt	.+2      	; 0x28be <main+0x1d88>
    28bc:	43 c0       	rjmp	.+134    	; 0x2944 <main+0x1e0e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    28be:	fe 01       	movw	r30, r28
    28c0:	e1 5a       	subi	r30, 0xA1	; 161
    28c2:	ff 4f       	sbci	r31, 0xFF	; 255
    28c4:	60 81       	ld	r22, Z
    28c6:	71 81       	ldd	r23, Z+1	; 0x01
    28c8:	82 81       	ldd	r24, Z+2	; 0x02
    28ca:	93 81       	ldd	r25, Z+3	; 0x03
    28cc:	20 e0       	ldi	r18, 0x00	; 0
    28ce:	30 e0       	ldi	r19, 0x00	; 0
    28d0:	40 e2       	ldi	r20, 0x20	; 32
    28d2:	51 e4       	ldi	r21, 0x41	; 65
    28d4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    28d8:	dc 01       	movw	r26, r24
    28da:	cb 01       	movw	r24, r22
    28dc:	8e 01       	movw	r16, r28
    28de:	07 5a       	subi	r16, 0xA7	; 167
    28e0:	1f 4f       	sbci	r17, 0xFF	; 255
    28e2:	bc 01       	movw	r22, r24
    28e4:	cd 01       	movw	r24, r26
    28e6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    28ea:	dc 01       	movw	r26, r24
    28ec:	cb 01       	movw	r24, r22
    28ee:	f8 01       	movw	r30, r16
    28f0:	91 83       	std	Z+1, r25	; 0x01
    28f2:	80 83       	st	Z, r24
    28f4:	1f c0       	rjmp	.+62     	; 0x2934 <main+0x1dfe>
    28f6:	fe 01       	movw	r30, r28
    28f8:	e9 5a       	subi	r30, 0xA9	; 169
    28fa:	ff 4f       	sbci	r31, 0xFF	; 255
    28fc:	80 e9       	ldi	r24, 0x90	; 144
    28fe:	91 e0       	ldi	r25, 0x01	; 1
    2900:	91 83       	std	Z+1, r25	; 0x01
    2902:	80 83       	st	Z, r24
    2904:	fe 01       	movw	r30, r28
    2906:	e9 5a       	subi	r30, 0xA9	; 169
    2908:	ff 4f       	sbci	r31, 0xFF	; 255
    290a:	80 81       	ld	r24, Z
    290c:	91 81       	ldd	r25, Z+1	; 0x01
    290e:	01 97       	sbiw	r24, 0x01	; 1
    2910:	f1 f7       	brne	.-4      	; 0x290e <main+0x1dd8>
    2912:	fe 01       	movw	r30, r28
    2914:	e9 5a       	subi	r30, 0xA9	; 169
    2916:	ff 4f       	sbci	r31, 0xFF	; 255
    2918:	91 83       	std	Z+1, r25	; 0x01
    291a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    291c:	de 01       	movw	r26, r28
    291e:	a7 5a       	subi	r26, 0xA7	; 167
    2920:	bf 4f       	sbci	r27, 0xFF	; 255
    2922:	fe 01       	movw	r30, r28
    2924:	e7 5a       	subi	r30, 0xA7	; 167
    2926:	ff 4f       	sbci	r31, 0xFF	; 255
    2928:	80 81       	ld	r24, Z
    292a:	91 81       	ldd	r25, Z+1	; 0x01
    292c:	01 97       	sbiw	r24, 0x01	; 1
    292e:	11 96       	adiw	r26, 0x01	; 1
    2930:	9c 93       	st	X, r25
    2932:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2934:	fe 01       	movw	r30, r28
    2936:	e7 5a       	subi	r30, 0xA7	; 167
    2938:	ff 4f       	sbci	r31, 0xFF	; 255
    293a:	80 81       	ld	r24, Z
    293c:	91 81       	ldd	r25, Z+1	; 0x01
    293e:	00 97       	sbiw	r24, 0x00	; 0
    2940:	d1 f6       	brne	.-76     	; 0x28f6 <main+0x1dc0>
    2942:	27 c0       	rjmp	.+78     	; 0x2992 <main+0x1e5c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2944:	8e 01       	movw	r16, r28
    2946:	07 5a       	subi	r16, 0xA7	; 167
    2948:	1f 4f       	sbci	r17, 0xFF	; 255
    294a:	fe 01       	movw	r30, r28
    294c:	e5 5a       	subi	r30, 0xA5	; 165
    294e:	ff 4f       	sbci	r31, 0xFF	; 255
    2950:	60 81       	ld	r22, Z
    2952:	71 81       	ldd	r23, Z+1	; 0x01
    2954:	82 81       	ldd	r24, Z+2	; 0x02
    2956:	93 81       	ldd	r25, Z+3	; 0x03
    2958:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    295c:	dc 01       	movw	r26, r24
    295e:	cb 01       	movw	r24, r22
    2960:	f8 01       	movw	r30, r16
    2962:	91 83       	std	Z+1, r25	; 0x01
    2964:	80 83       	st	Z, r24
    2966:	de 01       	movw	r26, r28
    2968:	ab 5a       	subi	r26, 0xAB	; 171
    296a:	bf 4f       	sbci	r27, 0xFF	; 255
    296c:	fe 01       	movw	r30, r28
    296e:	e7 5a       	subi	r30, 0xA7	; 167
    2970:	ff 4f       	sbci	r31, 0xFF	; 255
    2972:	80 81       	ld	r24, Z
    2974:	91 81       	ldd	r25, Z+1	; 0x01
    2976:	8d 93       	st	X+, r24
    2978:	9c 93       	st	X, r25
    297a:	fe 01       	movw	r30, r28
    297c:	eb 5a       	subi	r30, 0xAB	; 171
    297e:	ff 4f       	sbci	r31, 0xFF	; 255
    2980:	80 81       	ld	r24, Z
    2982:	91 81       	ldd	r25, Z+1	; 0x01
    2984:	01 97       	sbiw	r24, 0x01	; 1
    2986:	f1 f7       	brne	.-4      	; 0x2984 <main+0x1e4e>
    2988:	fe 01       	movw	r30, r28
    298a:	eb 5a       	subi	r30, 0xAB	; 171
    298c:	ff 4f       	sbci	r31, 0xFF	; 255
    298e:	91 83       	std	Z+1, r25	; 0x01
    2990:	80 83       	st	Z, r24
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    2992:	a5 e3       	ldi	r26, 0x35	; 53
    2994:	b0 e0       	ldi	r27, 0x00	; 0
    2996:	e5 e3       	ldi	r30, 0x35	; 53
    2998:	f0 e0       	ldi	r31, 0x00	; 0
    299a:	80 81       	ld	r24, Z
    299c:	8b 7f       	andi	r24, 0xFB	; 251
    299e:	8c 93       	st	X, r24
				CLR_BIT(PORTC,0);
    29a0:	a5 e3       	ldi	r26, 0x35	; 53
    29a2:	b0 e0       	ldi	r27, 0x00	; 0
    29a4:	e5 e3       	ldi	r30, 0x35	; 53
    29a6:	f0 e0       	ldi	r31, 0x00	; 0
    29a8:	80 81       	ld	r24, Z
    29aa:	8e 7f       	andi	r24, 0xFE	; 254
    29ac:	8c 93       	st	X, r24
    29ae:	fe 01       	movw	r30, r28
    29b0:	ef 5a       	subi	r30, 0xAF	; 175
    29b2:	ff 4f       	sbci	r31, 0xFF	; 255
    29b4:	80 e0       	ldi	r24, 0x00	; 0
    29b6:	90 e0       	ldi	r25, 0x00	; 0
    29b8:	a8 e4       	ldi	r26, 0x48	; 72
    29ba:	b4 e4       	ldi	r27, 0x44	; 68
    29bc:	80 83       	st	Z, r24
    29be:	91 83       	std	Z+1, r25	; 0x01
    29c0:	a2 83       	std	Z+2, r26	; 0x02
    29c2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    29c4:	8e 01       	movw	r16, r28
    29c6:	03 5b       	subi	r16, 0xB3	; 179
    29c8:	1f 4f       	sbci	r17, 0xFF	; 255
    29ca:	fe 01       	movw	r30, r28
    29cc:	ef 5a       	subi	r30, 0xAF	; 175
    29ce:	ff 4f       	sbci	r31, 0xFF	; 255
    29d0:	60 81       	ld	r22, Z
    29d2:	71 81       	ldd	r23, Z+1	; 0x01
    29d4:	82 81       	ldd	r24, Z+2	; 0x02
    29d6:	93 81       	ldd	r25, Z+3	; 0x03
    29d8:	20 e0       	ldi	r18, 0x00	; 0
    29da:	30 e0       	ldi	r19, 0x00	; 0
    29dc:	4a e7       	ldi	r20, 0x7A	; 122
    29de:	55 e4       	ldi	r21, 0x45	; 69
    29e0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    29e4:	dc 01       	movw	r26, r24
    29e6:	cb 01       	movw	r24, r22
    29e8:	f8 01       	movw	r30, r16
    29ea:	80 83       	st	Z, r24
    29ec:	91 83       	std	Z+1, r25	; 0x01
    29ee:	a2 83       	std	Z+2, r26	; 0x02
    29f0:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    29f2:	fe 01       	movw	r30, r28
    29f4:	e3 5b       	subi	r30, 0xB3	; 179
    29f6:	ff 4f       	sbci	r31, 0xFF	; 255
    29f8:	60 81       	ld	r22, Z
    29fa:	71 81       	ldd	r23, Z+1	; 0x01
    29fc:	82 81       	ldd	r24, Z+2	; 0x02
    29fe:	93 81       	ldd	r25, Z+3	; 0x03
    2a00:	20 e0       	ldi	r18, 0x00	; 0
    2a02:	30 e0       	ldi	r19, 0x00	; 0
    2a04:	40 e8       	ldi	r20, 0x80	; 128
    2a06:	5f e3       	ldi	r21, 0x3F	; 63
    2a08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2a0c:	88 23       	and	r24, r24
    2a0e:	44 f4       	brge	.+16     	; 0x2a20 <main+0x1eea>
		__ticks = 1;
    2a10:	fe 01       	movw	r30, r28
    2a12:	e5 5b       	subi	r30, 0xB5	; 181
    2a14:	ff 4f       	sbci	r31, 0xFF	; 255
    2a16:	81 e0       	ldi	r24, 0x01	; 1
    2a18:	90 e0       	ldi	r25, 0x00	; 0
    2a1a:	91 83       	std	Z+1, r25	; 0x01
    2a1c:	80 83       	st	Z, r24
    2a1e:	64 c0       	rjmp	.+200    	; 0x2ae8 <main+0x1fb2>
	else if (__tmp > 65535)
    2a20:	fe 01       	movw	r30, r28
    2a22:	e3 5b       	subi	r30, 0xB3	; 179
    2a24:	ff 4f       	sbci	r31, 0xFF	; 255
    2a26:	60 81       	ld	r22, Z
    2a28:	71 81       	ldd	r23, Z+1	; 0x01
    2a2a:	82 81       	ldd	r24, Z+2	; 0x02
    2a2c:	93 81       	ldd	r25, Z+3	; 0x03
    2a2e:	20 e0       	ldi	r18, 0x00	; 0
    2a30:	3f ef       	ldi	r19, 0xFF	; 255
    2a32:	4f e7       	ldi	r20, 0x7F	; 127
    2a34:	57 e4       	ldi	r21, 0x47	; 71
    2a36:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2a3a:	18 16       	cp	r1, r24
    2a3c:	0c f0       	brlt	.+2      	; 0x2a40 <main+0x1f0a>
    2a3e:	43 c0       	rjmp	.+134    	; 0x2ac6 <main+0x1f90>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2a40:	fe 01       	movw	r30, r28
    2a42:	ef 5a       	subi	r30, 0xAF	; 175
    2a44:	ff 4f       	sbci	r31, 0xFF	; 255
    2a46:	60 81       	ld	r22, Z
    2a48:	71 81       	ldd	r23, Z+1	; 0x01
    2a4a:	82 81       	ldd	r24, Z+2	; 0x02
    2a4c:	93 81       	ldd	r25, Z+3	; 0x03
    2a4e:	20 e0       	ldi	r18, 0x00	; 0
    2a50:	30 e0       	ldi	r19, 0x00	; 0
    2a52:	40 e2       	ldi	r20, 0x20	; 32
    2a54:	51 e4       	ldi	r21, 0x41	; 65
    2a56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2a5a:	dc 01       	movw	r26, r24
    2a5c:	cb 01       	movw	r24, r22
    2a5e:	8e 01       	movw	r16, r28
    2a60:	05 5b       	subi	r16, 0xB5	; 181
    2a62:	1f 4f       	sbci	r17, 0xFF	; 255
    2a64:	bc 01       	movw	r22, r24
    2a66:	cd 01       	movw	r24, r26
    2a68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2a6c:	dc 01       	movw	r26, r24
    2a6e:	cb 01       	movw	r24, r22
    2a70:	f8 01       	movw	r30, r16
    2a72:	91 83       	std	Z+1, r25	; 0x01
    2a74:	80 83       	st	Z, r24
    2a76:	1f c0       	rjmp	.+62     	; 0x2ab6 <main+0x1f80>
    2a78:	fe 01       	movw	r30, r28
    2a7a:	e7 5b       	subi	r30, 0xB7	; 183
    2a7c:	ff 4f       	sbci	r31, 0xFF	; 255
    2a7e:	80 e9       	ldi	r24, 0x90	; 144
    2a80:	91 e0       	ldi	r25, 0x01	; 1
    2a82:	91 83       	std	Z+1, r25	; 0x01
    2a84:	80 83       	st	Z, r24
    2a86:	fe 01       	movw	r30, r28
    2a88:	e7 5b       	subi	r30, 0xB7	; 183
    2a8a:	ff 4f       	sbci	r31, 0xFF	; 255
    2a8c:	80 81       	ld	r24, Z
    2a8e:	91 81       	ldd	r25, Z+1	; 0x01
    2a90:	01 97       	sbiw	r24, 0x01	; 1
    2a92:	f1 f7       	brne	.-4      	; 0x2a90 <main+0x1f5a>
    2a94:	fe 01       	movw	r30, r28
    2a96:	e7 5b       	subi	r30, 0xB7	; 183
    2a98:	ff 4f       	sbci	r31, 0xFF	; 255
    2a9a:	91 83       	std	Z+1, r25	; 0x01
    2a9c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2a9e:	de 01       	movw	r26, r28
    2aa0:	a5 5b       	subi	r26, 0xB5	; 181
    2aa2:	bf 4f       	sbci	r27, 0xFF	; 255
    2aa4:	fe 01       	movw	r30, r28
    2aa6:	e5 5b       	subi	r30, 0xB5	; 181
    2aa8:	ff 4f       	sbci	r31, 0xFF	; 255
    2aaa:	80 81       	ld	r24, Z
    2aac:	91 81       	ldd	r25, Z+1	; 0x01
    2aae:	01 97       	sbiw	r24, 0x01	; 1
    2ab0:	11 96       	adiw	r26, 0x01	; 1
    2ab2:	9c 93       	st	X, r25
    2ab4:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2ab6:	fe 01       	movw	r30, r28
    2ab8:	e5 5b       	subi	r30, 0xB5	; 181
    2aba:	ff 4f       	sbci	r31, 0xFF	; 255
    2abc:	80 81       	ld	r24, Z
    2abe:	91 81       	ldd	r25, Z+1	; 0x01
    2ac0:	00 97       	sbiw	r24, 0x00	; 0
    2ac2:	d1 f6       	brne	.-76     	; 0x2a78 <main+0x1f42>
    2ac4:	27 c0       	rjmp	.+78     	; 0x2b14 <main+0x1fde>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2ac6:	8e 01       	movw	r16, r28
    2ac8:	05 5b       	subi	r16, 0xB5	; 181
    2aca:	1f 4f       	sbci	r17, 0xFF	; 255
    2acc:	fe 01       	movw	r30, r28
    2ace:	e3 5b       	subi	r30, 0xB3	; 179
    2ad0:	ff 4f       	sbci	r31, 0xFF	; 255
    2ad2:	60 81       	ld	r22, Z
    2ad4:	71 81       	ldd	r23, Z+1	; 0x01
    2ad6:	82 81       	ldd	r24, Z+2	; 0x02
    2ad8:	93 81       	ldd	r25, Z+3	; 0x03
    2ada:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2ade:	dc 01       	movw	r26, r24
    2ae0:	cb 01       	movw	r24, r22
    2ae2:	f8 01       	movw	r30, r16
    2ae4:	91 83       	std	Z+1, r25	; 0x01
    2ae6:	80 83       	st	Z, r24
    2ae8:	de 01       	movw	r26, r28
    2aea:	a9 5b       	subi	r26, 0xB9	; 185
    2aec:	bf 4f       	sbci	r27, 0xFF	; 255
    2aee:	fe 01       	movw	r30, r28
    2af0:	e5 5b       	subi	r30, 0xB5	; 181
    2af2:	ff 4f       	sbci	r31, 0xFF	; 255
    2af4:	80 81       	ld	r24, Z
    2af6:	91 81       	ldd	r25, Z+1	; 0x01
    2af8:	8d 93       	st	X+, r24
    2afa:	9c 93       	st	X, r25
    2afc:	fe 01       	movw	r30, r28
    2afe:	e9 5b       	subi	r30, 0xB9	; 185
    2b00:	ff 4f       	sbci	r31, 0xFF	; 255
    2b02:	80 81       	ld	r24, Z
    2b04:	91 81       	ldd	r25, Z+1	; 0x01
    2b06:	01 97       	sbiw	r24, 0x01	; 1
    2b08:	f1 f7       	brne	.-4      	; 0x2b06 <main+0x1fd0>
    2b0a:	fe 01       	movw	r30, r28
    2b0c:	e9 5b       	subi	r30, 0xB9	; 185
    2b0e:	ff 4f       	sbci	r31, 0xFF	; 255
    2b10:	91 83       	std	Z+1, r25	; 0x01
    2b12:	80 83       	st	Z, r24
				_delay_ms(800);
				SET_BIT(PORTC,2);
    2b14:	a5 e3       	ldi	r26, 0x35	; 53
    2b16:	b0 e0       	ldi	r27, 0x00	; 0
    2b18:	e5 e3       	ldi	r30, 0x35	; 53
    2b1a:	f0 e0       	ldi	r31, 0x00	; 0
    2b1c:	80 81       	ld	r24, Z
    2b1e:	84 60       	ori	r24, 0x04	; 4
    2b20:	8c 93       	st	X, r24
				SET_BIT(PORTC,0);
    2b22:	a5 e3       	ldi	r26, 0x35	; 53
    2b24:	b0 e0       	ldi	r27, 0x00	; 0
    2b26:	e5 e3       	ldi	r30, 0x35	; 53
    2b28:	f0 e0       	ldi	r31, 0x00	; 0
    2b2a:	80 81       	ld	r24, Z
    2b2c:	81 60       	ori	r24, 0x01	; 1
    2b2e:	8c 93       	st	X, r24
    2b30:	fe 01       	movw	r30, r28
    2b32:	ed 5b       	subi	r30, 0xBD	; 189
    2b34:	ff 4f       	sbci	r31, 0xFF	; 255
    2b36:	80 e0       	ldi	r24, 0x00	; 0
    2b38:	90 e0       	ldi	r25, 0x00	; 0
    2b3a:	a8 e4       	ldi	r26, 0x48	; 72
    2b3c:	b4 e4       	ldi	r27, 0x44	; 68
    2b3e:	80 83       	st	Z, r24
    2b40:	91 83       	std	Z+1, r25	; 0x01
    2b42:	a2 83       	std	Z+2, r26	; 0x02
    2b44:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2b46:	8e 01       	movw	r16, r28
    2b48:	01 5c       	subi	r16, 0xC1	; 193
    2b4a:	1f 4f       	sbci	r17, 0xFF	; 255
    2b4c:	fe 01       	movw	r30, r28
    2b4e:	ed 5b       	subi	r30, 0xBD	; 189
    2b50:	ff 4f       	sbci	r31, 0xFF	; 255
    2b52:	60 81       	ld	r22, Z
    2b54:	71 81       	ldd	r23, Z+1	; 0x01
    2b56:	82 81       	ldd	r24, Z+2	; 0x02
    2b58:	93 81       	ldd	r25, Z+3	; 0x03
    2b5a:	20 e0       	ldi	r18, 0x00	; 0
    2b5c:	30 e0       	ldi	r19, 0x00	; 0
    2b5e:	4a e7       	ldi	r20, 0x7A	; 122
    2b60:	55 e4       	ldi	r21, 0x45	; 69
    2b62:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2b66:	dc 01       	movw	r26, r24
    2b68:	cb 01       	movw	r24, r22
    2b6a:	f8 01       	movw	r30, r16
    2b6c:	80 83       	st	Z, r24
    2b6e:	91 83       	std	Z+1, r25	; 0x01
    2b70:	a2 83       	std	Z+2, r26	; 0x02
    2b72:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    2b74:	fe 01       	movw	r30, r28
    2b76:	ff 96       	adiw	r30, 0x3f	; 63
    2b78:	60 81       	ld	r22, Z
    2b7a:	71 81       	ldd	r23, Z+1	; 0x01
    2b7c:	82 81       	ldd	r24, Z+2	; 0x02
    2b7e:	93 81       	ldd	r25, Z+3	; 0x03
    2b80:	20 e0       	ldi	r18, 0x00	; 0
    2b82:	30 e0       	ldi	r19, 0x00	; 0
    2b84:	40 e8       	ldi	r20, 0x80	; 128
    2b86:	5f e3       	ldi	r21, 0x3F	; 63
    2b88:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2b8c:	88 23       	and	r24, r24
    2b8e:	2c f4       	brge	.+10     	; 0x2b9a <main+0x2064>
		__ticks = 1;
    2b90:	81 e0       	ldi	r24, 0x01	; 1
    2b92:	90 e0       	ldi	r25, 0x00	; 0
    2b94:	9e af       	std	Y+62, r25	; 0x3e
    2b96:	8d af       	std	Y+61, r24	; 0x3d
    2b98:	46 c0       	rjmp	.+140    	; 0x2c26 <main+0x20f0>
	else if (__tmp > 65535)
    2b9a:	fe 01       	movw	r30, r28
    2b9c:	ff 96       	adiw	r30, 0x3f	; 63
    2b9e:	60 81       	ld	r22, Z
    2ba0:	71 81       	ldd	r23, Z+1	; 0x01
    2ba2:	82 81       	ldd	r24, Z+2	; 0x02
    2ba4:	93 81       	ldd	r25, Z+3	; 0x03
    2ba6:	20 e0       	ldi	r18, 0x00	; 0
    2ba8:	3f ef       	ldi	r19, 0xFF	; 255
    2baa:	4f e7       	ldi	r20, 0x7F	; 127
    2bac:	57 e4       	ldi	r21, 0x47	; 71
    2bae:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2bb2:	18 16       	cp	r1, r24
    2bb4:	64 f5       	brge	.+88     	; 0x2c0e <main+0x20d8>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2bb6:	fe 01       	movw	r30, r28
    2bb8:	ed 5b       	subi	r30, 0xBD	; 189
    2bba:	ff 4f       	sbci	r31, 0xFF	; 255
    2bbc:	60 81       	ld	r22, Z
    2bbe:	71 81       	ldd	r23, Z+1	; 0x01
    2bc0:	82 81       	ldd	r24, Z+2	; 0x02
    2bc2:	93 81       	ldd	r25, Z+3	; 0x03
    2bc4:	20 e0       	ldi	r18, 0x00	; 0
    2bc6:	30 e0       	ldi	r19, 0x00	; 0
    2bc8:	40 e2       	ldi	r20, 0x20	; 32
    2bca:	51 e4       	ldi	r21, 0x41	; 65
    2bcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2bd0:	dc 01       	movw	r26, r24
    2bd2:	cb 01       	movw	r24, r22
    2bd4:	bc 01       	movw	r22, r24
    2bd6:	cd 01       	movw	r24, r26
    2bd8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2bdc:	dc 01       	movw	r26, r24
    2bde:	cb 01       	movw	r24, r22
    2be0:	9e af       	std	Y+62, r25	; 0x3e
    2be2:	8d af       	std	Y+61, r24	; 0x3d
    2be4:	0f c0       	rjmp	.+30     	; 0x2c04 <main+0x20ce>
    2be6:	80 e9       	ldi	r24, 0x90	; 144
    2be8:	91 e0       	ldi	r25, 0x01	; 1
    2bea:	9c af       	std	Y+60, r25	; 0x3c
    2bec:	8b af       	std	Y+59, r24	; 0x3b
    2bee:	8b ad       	ldd	r24, Y+59	; 0x3b
    2bf0:	9c ad       	ldd	r25, Y+60	; 0x3c
    2bf2:	01 97       	sbiw	r24, 0x01	; 1
    2bf4:	f1 f7       	brne	.-4      	; 0x2bf2 <main+0x20bc>
    2bf6:	9c af       	std	Y+60, r25	; 0x3c
    2bf8:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2bfa:	8d ad       	ldd	r24, Y+61	; 0x3d
    2bfc:	9e ad       	ldd	r25, Y+62	; 0x3e
    2bfe:	01 97       	sbiw	r24, 0x01	; 1
    2c00:	9e af       	std	Y+62, r25	; 0x3e
    2c02:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2c04:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c06:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c08:	00 97       	sbiw	r24, 0x00	; 0
    2c0a:	69 f7       	brne	.-38     	; 0x2be6 <main+0x20b0>
    2c0c:	16 c0       	rjmp	.+44     	; 0x2c3a <main+0x2104>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2c0e:	fe 01       	movw	r30, r28
    2c10:	ff 96       	adiw	r30, 0x3f	; 63
    2c12:	60 81       	ld	r22, Z
    2c14:	71 81       	ldd	r23, Z+1	; 0x01
    2c16:	82 81       	ldd	r24, Z+2	; 0x02
    2c18:	93 81       	ldd	r25, Z+3	; 0x03
    2c1a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2c1e:	dc 01       	movw	r26, r24
    2c20:	cb 01       	movw	r24, r22
    2c22:	9e af       	std	Y+62, r25	; 0x3e
    2c24:	8d af       	std	Y+61, r24	; 0x3d
    2c26:	8d ad       	ldd	r24, Y+61	; 0x3d
    2c28:	9e ad       	ldd	r25, Y+62	; 0x3e
    2c2a:	9a af       	std	Y+58, r25	; 0x3a
    2c2c:	89 af       	std	Y+57, r24	; 0x39
    2c2e:	89 ad       	ldd	r24, Y+57	; 0x39
    2c30:	9a ad       	ldd	r25, Y+58	; 0x3a
    2c32:	01 97       	sbiw	r24, 0x01	; 1
    2c34:	f1 f7       	brne	.-4      	; 0x2c32 <main+0x20fc>
    2c36:	9a af       	std	Y+58, r25	; 0x3a
    2c38:	89 af       	std	Y+57, r24	; 0x39
				_delay_ms(800);
				CLR_BIT(PORTC,2);
    2c3a:	a5 e3       	ldi	r26, 0x35	; 53
    2c3c:	b0 e0       	ldi	r27, 0x00	; 0
    2c3e:	e5 e3       	ldi	r30, 0x35	; 53
    2c40:	f0 e0       	ldi	r31, 0x00	; 0
    2c42:	80 81       	ld	r24, Z
    2c44:	8b 7f       	andi	r24, 0xFB	; 251
    2c46:	8c 93       	st	X, r24
				CLR_BIT(PORTC,0);
    2c48:	a5 e3       	ldi	r26, 0x35	; 53
    2c4a:	b0 e0       	ldi	r27, 0x00	; 0
    2c4c:	e5 e3       	ldi	r30, 0x35	; 53
    2c4e:	f0 e0       	ldi	r31, 0x00	; 0
    2c50:	80 81       	ld	r24, Z
    2c52:	8e 7f       	andi	r24, 0xFE	; 254
    2c54:	8c 93       	st	X, r24
				LCD_clearScreen();
    2c56:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
				state = MAIN_MENU; // Return to main menu
    2c5a:	fe 01       	movw	r30, r28
    2c5c:	e0 5a       	subi	r30, 0xA0	; 160
    2c5e:	fe 4f       	sbci	r31, 0xFE	; 254
    2c60:	81 e0       	ldi	r24, 0x01	; 1
    2c62:	80 83       	st	Z, r24
    2c64:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <main+0x82>
				break;

			case AC_MODE_STATE:
				LCD_displayString("AC Mode:");
    2c68:	83 eb       	ldi	r24, 0xB3	; 179
    2c6a:	90 e0       	ldi	r25, 0x00	; 0
    2c6c:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
				LCD_moveCursor(1, 0);
    2c70:	81 e0       	ldi	r24, 0x01	; 1
    2c72:	60 e0       	ldi	r22, 0x00	; 0
    2c74:	0e 94 06 29 	call	0x520c	; 0x520c <LCD_moveCursor>
				LCD_displayString("1-ON 2-OFF");
    2c78:	8c eb       	ldi	r24, 0xBC	; 188
    2c7a:	90 e0       	ldi	r25, 0x00	; 0
    2c7c:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    2c80:	80 e0       	ldi	r24, 0x00	; 0
    2c82:	90 e0       	ldi	r25, 0x00	; 0
    2c84:	aa ef       	ldi	r26, 0xFA	; 250
    2c86:	b3 e4       	ldi	r27, 0x43	; 67
    2c88:	8d ab       	std	Y+53, r24	; 0x35
    2c8a:	9e ab       	std	Y+54, r25	; 0x36
    2c8c:	af ab       	std	Y+55, r26	; 0x37
    2c8e:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2c90:	6d a9       	ldd	r22, Y+53	; 0x35
    2c92:	7e a9       	ldd	r23, Y+54	; 0x36
    2c94:	8f a9       	ldd	r24, Y+55	; 0x37
    2c96:	98 ad       	ldd	r25, Y+56	; 0x38
    2c98:	20 e0       	ldi	r18, 0x00	; 0
    2c9a:	30 e0       	ldi	r19, 0x00	; 0
    2c9c:	4a e7       	ldi	r20, 0x7A	; 122
    2c9e:	55 e4       	ldi	r21, 0x45	; 69
    2ca0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2ca4:	dc 01       	movw	r26, r24
    2ca6:	cb 01       	movw	r24, r22
    2ca8:	89 ab       	std	Y+49, r24	; 0x31
    2caa:	9a ab       	std	Y+50, r25	; 0x32
    2cac:	ab ab       	std	Y+51, r26	; 0x33
    2cae:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    2cb0:	69 a9       	ldd	r22, Y+49	; 0x31
    2cb2:	7a a9       	ldd	r23, Y+50	; 0x32
    2cb4:	8b a9       	ldd	r24, Y+51	; 0x33
    2cb6:	9c a9       	ldd	r25, Y+52	; 0x34
    2cb8:	20 e0       	ldi	r18, 0x00	; 0
    2cba:	30 e0       	ldi	r19, 0x00	; 0
    2cbc:	40 e8       	ldi	r20, 0x80	; 128
    2cbe:	5f e3       	ldi	r21, 0x3F	; 63
    2cc0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2cc4:	88 23       	and	r24, r24
    2cc6:	2c f4       	brge	.+10     	; 0x2cd2 <main+0x219c>
		__ticks = 1;
    2cc8:	81 e0       	ldi	r24, 0x01	; 1
    2cca:	90 e0       	ldi	r25, 0x00	; 0
    2ccc:	98 ab       	std	Y+48, r25	; 0x30
    2cce:	8f a7       	std	Y+47, r24	; 0x2f
    2cd0:	3f c0       	rjmp	.+126    	; 0x2d50 <main+0x221a>
	else if (__tmp > 65535)
    2cd2:	69 a9       	ldd	r22, Y+49	; 0x31
    2cd4:	7a a9       	ldd	r23, Y+50	; 0x32
    2cd6:	8b a9       	ldd	r24, Y+51	; 0x33
    2cd8:	9c a9       	ldd	r25, Y+52	; 0x34
    2cda:	20 e0       	ldi	r18, 0x00	; 0
    2cdc:	3f ef       	ldi	r19, 0xFF	; 255
    2cde:	4f e7       	ldi	r20, 0x7F	; 127
    2ce0:	57 e4       	ldi	r21, 0x47	; 71
    2ce2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ce6:	18 16       	cp	r1, r24
    2ce8:	4c f5       	brge	.+82     	; 0x2d3c <main+0x2206>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2cea:	6d a9       	ldd	r22, Y+53	; 0x35
    2cec:	7e a9       	ldd	r23, Y+54	; 0x36
    2cee:	8f a9       	ldd	r24, Y+55	; 0x37
    2cf0:	98 ad       	ldd	r25, Y+56	; 0x38
    2cf2:	20 e0       	ldi	r18, 0x00	; 0
    2cf4:	30 e0       	ldi	r19, 0x00	; 0
    2cf6:	40 e2       	ldi	r20, 0x20	; 32
    2cf8:	51 e4       	ldi	r21, 0x41	; 65
    2cfa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2cfe:	dc 01       	movw	r26, r24
    2d00:	cb 01       	movw	r24, r22
    2d02:	bc 01       	movw	r22, r24
    2d04:	cd 01       	movw	r24, r26
    2d06:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d0a:	dc 01       	movw	r26, r24
    2d0c:	cb 01       	movw	r24, r22
    2d0e:	98 ab       	std	Y+48, r25	; 0x30
    2d10:	8f a7       	std	Y+47, r24	; 0x2f
    2d12:	0f c0       	rjmp	.+30     	; 0x2d32 <main+0x21fc>
    2d14:	80 e9       	ldi	r24, 0x90	; 144
    2d16:	91 e0       	ldi	r25, 0x01	; 1
    2d18:	9e a7       	std	Y+46, r25	; 0x2e
    2d1a:	8d a7       	std	Y+45, r24	; 0x2d
    2d1c:	8d a5       	ldd	r24, Y+45	; 0x2d
    2d1e:	9e a5       	ldd	r25, Y+46	; 0x2e
    2d20:	01 97       	sbiw	r24, 0x01	; 1
    2d22:	f1 f7       	brne	.-4      	; 0x2d20 <main+0x21ea>
    2d24:	9e a7       	std	Y+46, r25	; 0x2e
    2d26:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2d28:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d2a:	98 a9       	ldd	r25, Y+48	; 0x30
    2d2c:	01 97       	sbiw	r24, 0x01	; 1
    2d2e:	98 ab       	std	Y+48, r25	; 0x30
    2d30:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2d32:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d34:	98 a9       	ldd	r25, Y+48	; 0x30
    2d36:	00 97       	sbiw	r24, 0x00	; 0
    2d38:	69 f7       	brne	.-38     	; 0x2d14 <main+0x21de>
    2d3a:	14 c0       	rjmp	.+40     	; 0x2d64 <main+0x222e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2d3c:	69 a9       	ldd	r22, Y+49	; 0x31
    2d3e:	7a a9       	ldd	r23, Y+50	; 0x32
    2d40:	8b a9       	ldd	r24, Y+51	; 0x33
    2d42:	9c a9       	ldd	r25, Y+52	; 0x34
    2d44:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2d48:	dc 01       	movw	r26, r24
    2d4a:	cb 01       	movw	r24, r22
    2d4c:	98 ab       	std	Y+48, r25	; 0x30
    2d4e:	8f a7       	std	Y+47, r24	; 0x2f
    2d50:	8f a5       	ldd	r24, Y+47	; 0x2f
    2d52:	98 a9       	ldd	r25, Y+48	; 0x30
    2d54:	9c a7       	std	Y+44, r25	; 0x2c
    2d56:	8b a7       	std	Y+43, r24	; 0x2b
    2d58:	8b a5       	ldd	r24, Y+43	; 0x2b
    2d5a:	9c a5       	ldd	r25, Y+44	; 0x2c
    2d5c:	01 97       	sbiw	r24, 0x01	; 1
    2d5e:	f1 f7       	brne	.-4      	; 0x2d5c <main+0x2226>
    2d60:	9c a7       	std	Y+44, r25	; 0x2c
    2d62:	8b a7       	std	Y+43, r24	; 0x2b
				_delay_ms(500);
				user_input = KEYPAD_getPressedKey();
    2d64:	0e 94 8e 29 	call	0x531c	; 0x531c <KEYPAD_getPressedKey>
    2d68:	fe 01       	movw	r30, r28
    2d6a:	e1 5a       	subi	r30, 0xA1	; 161
    2d6c:	fe 4f       	sbci	r31, 0xFE	; 254
    2d6e:	80 83       	st	Z, r24

				if (user_input == 1) {
    2d70:	fe 01       	movw	r30, r28
    2d72:	e1 5a       	subi	r30, 0xA1	; 161
    2d74:	fe 4f       	sbci	r31, 0xFE	; 254
    2d76:	80 81       	ld	r24, Z
    2d78:	81 30       	cpi	r24, 0x01	; 1
    2d7a:	09 f0       	breq	.+2      	; 0x2d7e <main+0x2248>
    2d7c:	80 c0       	rjmp	.+256    	; 0x2e7e <main+0x2348>
					LCD_clearScreen();
    2d7e:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					LCD_displayString("AC ON");
    2d82:	87 ec       	ldi	r24, 0xC7	; 199
    2d84:	90 e0       	ldi	r25, 0x00	; 0
    2d86:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
					SET_BIT(PORTC,1);
    2d8a:	a5 e3       	ldi	r26, 0x35	; 53
    2d8c:	b0 e0       	ldi	r27, 0x00	; 0
    2d8e:	e5 e3       	ldi	r30, 0x35	; 53
    2d90:	f0 e0       	ldi	r31, 0x00	; 0
    2d92:	80 81       	ld	r24, Z
    2d94:	82 60       	ori	r24, 0x02	; 2
    2d96:	8c 93       	st	X, r24
    2d98:	80 e0       	ldi	r24, 0x00	; 0
    2d9a:	90 e0       	ldi	r25, 0x00	; 0
    2d9c:	aa ef       	ldi	r26, 0xFA	; 250
    2d9e:	b3 e4       	ldi	r27, 0x43	; 67
    2da0:	8f a3       	std	Y+39, r24	; 0x27
    2da2:	98 a7       	std	Y+40, r25	; 0x28
    2da4:	a9 a7       	std	Y+41, r26	; 0x29
    2da6:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2da8:	6f a1       	ldd	r22, Y+39	; 0x27
    2daa:	78 a5       	ldd	r23, Y+40	; 0x28
    2dac:	89 a5       	ldd	r24, Y+41	; 0x29
    2dae:	9a a5       	ldd	r25, Y+42	; 0x2a
    2db0:	20 e0       	ldi	r18, 0x00	; 0
    2db2:	30 e0       	ldi	r19, 0x00	; 0
    2db4:	4a e7       	ldi	r20, 0x7A	; 122
    2db6:	55 e4       	ldi	r21, 0x45	; 69
    2db8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2dbc:	dc 01       	movw	r26, r24
    2dbe:	cb 01       	movw	r24, r22
    2dc0:	8b a3       	std	Y+35, r24	; 0x23
    2dc2:	9c a3       	std	Y+36, r25	; 0x24
    2dc4:	ad a3       	std	Y+37, r26	; 0x25
    2dc6:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    2dc8:	6b a1       	ldd	r22, Y+35	; 0x23
    2dca:	7c a1       	ldd	r23, Y+36	; 0x24
    2dcc:	8d a1       	ldd	r24, Y+37	; 0x25
    2dce:	9e a1       	ldd	r25, Y+38	; 0x26
    2dd0:	20 e0       	ldi	r18, 0x00	; 0
    2dd2:	30 e0       	ldi	r19, 0x00	; 0
    2dd4:	40 e8       	ldi	r20, 0x80	; 128
    2dd6:	5f e3       	ldi	r21, 0x3F	; 63
    2dd8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2ddc:	88 23       	and	r24, r24
    2dde:	2c f4       	brge	.+10     	; 0x2dea <main+0x22b4>
		__ticks = 1;
    2de0:	81 e0       	ldi	r24, 0x01	; 1
    2de2:	90 e0       	ldi	r25, 0x00	; 0
    2de4:	9a a3       	std	Y+34, r25	; 0x22
    2de6:	89 a3       	std	Y+33, r24	; 0x21
    2de8:	3f c0       	rjmp	.+126    	; 0x2e68 <main+0x2332>
	else if (__tmp > 65535)
    2dea:	6b a1       	ldd	r22, Y+35	; 0x23
    2dec:	7c a1       	ldd	r23, Y+36	; 0x24
    2dee:	8d a1       	ldd	r24, Y+37	; 0x25
    2df0:	9e a1       	ldd	r25, Y+38	; 0x26
    2df2:	20 e0       	ldi	r18, 0x00	; 0
    2df4:	3f ef       	ldi	r19, 0xFF	; 255
    2df6:	4f e7       	ldi	r20, 0x7F	; 127
    2df8:	57 e4       	ldi	r21, 0x47	; 71
    2dfa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2dfe:	18 16       	cp	r1, r24
    2e00:	4c f5       	brge	.+82     	; 0x2e54 <main+0x231e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2e02:	6f a1       	ldd	r22, Y+39	; 0x27
    2e04:	78 a5       	ldd	r23, Y+40	; 0x28
    2e06:	89 a5       	ldd	r24, Y+41	; 0x29
    2e08:	9a a5       	ldd	r25, Y+42	; 0x2a
    2e0a:	20 e0       	ldi	r18, 0x00	; 0
    2e0c:	30 e0       	ldi	r19, 0x00	; 0
    2e0e:	40 e2       	ldi	r20, 0x20	; 32
    2e10:	51 e4       	ldi	r21, 0x41	; 65
    2e12:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2e16:	dc 01       	movw	r26, r24
    2e18:	cb 01       	movw	r24, r22
    2e1a:	bc 01       	movw	r22, r24
    2e1c:	cd 01       	movw	r24, r26
    2e1e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e22:	dc 01       	movw	r26, r24
    2e24:	cb 01       	movw	r24, r22
    2e26:	9a a3       	std	Y+34, r25	; 0x22
    2e28:	89 a3       	std	Y+33, r24	; 0x21
    2e2a:	0f c0       	rjmp	.+30     	; 0x2e4a <main+0x2314>
    2e2c:	80 e9       	ldi	r24, 0x90	; 144
    2e2e:	91 e0       	ldi	r25, 0x01	; 1
    2e30:	98 a3       	std	Y+32, r25	; 0x20
    2e32:	8f 8f       	std	Y+31, r24	; 0x1f
    2e34:	8f 8d       	ldd	r24, Y+31	; 0x1f
    2e36:	98 a1       	ldd	r25, Y+32	; 0x20
    2e38:	01 97       	sbiw	r24, 0x01	; 1
    2e3a:	f1 f7       	brne	.-4      	; 0x2e38 <main+0x2302>
    2e3c:	98 a3       	std	Y+32, r25	; 0x20
    2e3e:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2e40:	89 a1       	ldd	r24, Y+33	; 0x21
    2e42:	9a a1       	ldd	r25, Y+34	; 0x22
    2e44:	01 97       	sbiw	r24, 0x01	; 1
    2e46:	9a a3       	std	Y+34, r25	; 0x22
    2e48:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2e4a:	89 a1       	ldd	r24, Y+33	; 0x21
    2e4c:	9a a1       	ldd	r25, Y+34	; 0x22
    2e4e:	00 97       	sbiw	r24, 0x00	; 0
    2e50:	69 f7       	brne	.-38     	; 0x2e2c <main+0x22f6>
    2e52:	14 c1       	rjmp	.+552    	; 0x307c <main+0x2546>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2e54:	6b a1       	ldd	r22, Y+35	; 0x23
    2e56:	7c a1       	ldd	r23, Y+36	; 0x24
    2e58:	8d a1       	ldd	r24, Y+37	; 0x25
    2e5a:	9e a1       	ldd	r25, Y+38	; 0x26
    2e5c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2e60:	dc 01       	movw	r26, r24
    2e62:	cb 01       	movw	r24, r22
    2e64:	9a a3       	std	Y+34, r25	; 0x22
    2e66:	89 a3       	std	Y+33, r24	; 0x21
    2e68:	89 a1       	ldd	r24, Y+33	; 0x21
    2e6a:	9a a1       	ldd	r25, Y+34	; 0x22
    2e6c:	9e 8f       	std	Y+30, r25	; 0x1e
    2e6e:	8d 8f       	std	Y+29, r24	; 0x1d
    2e70:	8d 8d       	ldd	r24, Y+29	; 0x1d
    2e72:	9e 8d       	ldd	r25, Y+30	; 0x1e
    2e74:	01 97       	sbiw	r24, 0x01	; 1
    2e76:	f1 f7       	brne	.-4      	; 0x2e74 <main+0x233e>
    2e78:	9e 8f       	std	Y+30, r25	; 0x1e
    2e7a:	8d 8f       	std	Y+29, r24	; 0x1d
    2e7c:	ff c0       	rjmp	.+510    	; 0x307c <main+0x2546>
					_delay_ms(500);
				} else if (user_input == 2) {
    2e7e:	fe 01       	movw	r30, r28
    2e80:	e1 5a       	subi	r30, 0xA1	; 161
    2e82:	fe 4f       	sbci	r31, 0xFE	; 254
    2e84:	80 81       	ld	r24, Z
    2e86:	82 30       	cpi	r24, 0x02	; 2
    2e88:	09 f0       	breq	.+2      	; 0x2e8c <main+0x2356>
    2e8a:	80 c0       	rjmp	.+256    	; 0x2f8c <main+0x2456>
					LCD_clearScreen();
    2e8c:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					LCD_displayString("AC OFF");
    2e90:	8d ec       	ldi	r24, 0xCD	; 205
    2e92:	90 e0       	ldi	r25, 0x00	; 0
    2e94:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
					CLR_BIT(PORTC,1);
    2e98:	a5 e3       	ldi	r26, 0x35	; 53
    2e9a:	b0 e0       	ldi	r27, 0x00	; 0
    2e9c:	e5 e3       	ldi	r30, 0x35	; 53
    2e9e:	f0 e0       	ldi	r31, 0x00	; 0
    2ea0:	80 81       	ld	r24, Z
    2ea2:	8d 7f       	andi	r24, 0xFD	; 253
    2ea4:	8c 93       	st	X, r24
    2ea6:	80 e0       	ldi	r24, 0x00	; 0
    2ea8:	90 e0       	ldi	r25, 0x00	; 0
    2eaa:	aa ef       	ldi	r26, 0xFA	; 250
    2eac:	b3 e4       	ldi	r27, 0x43	; 67
    2eae:	89 8f       	std	Y+25, r24	; 0x19
    2eb0:	9a 8f       	std	Y+26, r25	; 0x1a
    2eb2:	ab 8f       	std	Y+27, r26	; 0x1b
    2eb4:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2eb6:	69 8d       	ldd	r22, Y+25	; 0x19
    2eb8:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2eba:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2ebc:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2ebe:	20 e0       	ldi	r18, 0x00	; 0
    2ec0:	30 e0       	ldi	r19, 0x00	; 0
    2ec2:	4a e7       	ldi	r20, 0x7A	; 122
    2ec4:	55 e4       	ldi	r21, 0x45	; 69
    2ec6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2eca:	dc 01       	movw	r26, r24
    2ecc:	cb 01       	movw	r24, r22
    2ece:	8d 8b       	std	Y+21, r24	; 0x15
    2ed0:	9e 8b       	std	Y+22, r25	; 0x16
    2ed2:	af 8b       	std	Y+23, r26	; 0x17
    2ed4:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    2ed6:	6d 89       	ldd	r22, Y+21	; 0x15
    2ed8:	7e 89       	ldd	r23, Y+22	; 0x16
    2eda:	8f 89       	ldd	r24, Y+23	; 0x17
    2edc:	98 8d       	ldd	r25, Y+24	; 0x18
    2ede:	20 e0       	ldi	r18, 0x00	; 0
    2ee0:	30 e0       	ldi	r19, 0x00	; 0
    2ee2:	40 e8       	ldi	r20, 0x80	; 128
    2ee4:	5f e3       	ldi	r21, 0x3F	; 63
    2ee6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2eea:	88 23       	and	r24, r24
    2eec:	2c f4       	brge	.+10     	; 0x2ef8 <main+0x23c2>
		__ticks = 1;
    2eee:	81 e0       	ldi	r24, 0x01	; 1
    2ef0:	90 e0       	ldi	r25, 0x00	; 0
    2ef2:	9c 8b       	std	Y+20, r25	; 0x14
    2ef4:	8b 8b       	std	Y+19, r24	; 0x13
    2ef6:	3f c0       	rjmp	.+126    	; 0x2f76 <main+0x2440>
	else if (__tmp > 65535)
    2ef8:	6d 89       	ldd	r22, Y+21	; 0x15
    2efa:	7e 89       	ldd	r23, Y+22	; 0x16
    2efc:	8f 89       	ldd	r24, Y+23	; 0x17
    2efe:	98 8d       	ldd	r25, Y+24	; 0x18
    2f00:	20 e0       	ldi	r18, 0x00	; 0
    2f02:	3f ef       	ldi	r19, 0xFF	; 255
    2f04:	4f e7       	ldi	r20, 0x7F	; 127
    2f06:	57 e4       	ldi	r21, 0x47	; 71
    2f08:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2f0c:	18 16       	cp	r1, r24
    2f0e:	4c f5       	brge	.+82     	; 0x2f62 <main+0x242c>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    2f10:	69 8d       	ldd	r22, Y+25	; 0x19
    2f12:	7a 8d       	ldd	r23, Y+26	; 0x1a
    2f14:	8b 8d       	ldd	r24, Y+27	; 0x1b
    2f16:	9c 8d       	ldd	r25, Y+28	; 0x1c
    2f18:	20 e0       	ldi	r18, 0x00	; 0
    2f1a:	30 e0       	ldi	r19, 0x00	; 0
    2f1c:	40 e2       	ldi	r20, 0x20	; 32
    2f1e:	51 e4       	ldi	r21, 0x41	; 65
    2f20:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2f24:	dc 01       	movw	r26, r24
    2f26:	cb 01       	movw	r24, r22
    2f28:	bc 01       	movw	r22, r24
    2f2a:	cd 01       	movw	r24, r26
    2f2c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f30:	dc 01       	movw	r26, r24
    2f32:	cb 01       	movw	r24, r22
    2f34:	9c 8b       	std	Y+20, r25	; 0x14
    2f36:	8b 8b       	std	Y+19, r24	; 0x13
    2f38:	0f c0       	rjmp	.+30     	; 0x2f58 <main+0x2422>
    2f3a:	80 e9       	ldi	r24, 0x90	; 144
    2f3c:	91 e0       	ldi	r25, 0x01	; 1
    2f3e:	9a 8b       	std	Y+18, r25	; 0x12
    2f40:	89 8b       	std	Y+17, r24	; 0x11
    2f42:	89 89       	ldd	r24, Y+17	; 0x11
    2f44:	9a 89       	ldd	r25, Y+18	; 0x12
    2f46:	01 97       	sbiw	r24, 0x01	; 1
    2f48:	f1 f7       	brne	.-4      	; 0x2f46 <main+0x2410>
    2f4a:	9a 8b       	std	Y+18, r25	; 0x12
    2f4c:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    2f4e:	8b 89       	ldd	r24, Y+19	; 0x13
    2f50:	9c 89       	ldd	r25, Y+20	; 0x14
    2f52:	01 97       	sbiw	r24, 0x01	; 1
    2f54:	9c 8b       	std	Y+20, r25	; 0x14
    2f56:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    2f58:	8b 89       	ldd	r24, Y+19	; 0x13
    2f5a:	9c 89       	ldd	r25, Y+20	; 0x14
    2f5c:	00 97       	sbiw	r24, 0x00	; 0
    2f5e:	69 f7       	brne	.-38     	; 0x2f3a <main+0x2404>
    2f60:	8d c0       	rjmp	.+282    	; 0x307c <main+0x2546>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    2f62:	6d 89       	ldd	r22, Y+21	; 0x15
    2f64:	7e 89       	ldd	r23, Y+22	; 0x16
    2f66:	8f 89       	ldd	r24, Y+23	; 0x17
    2f68:	98 8d       	ldd	r25, Y+24	; 0x18
    2f6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    2f6e:	dc 01       	movw	r26, r24
    2f70:	cb 01       	movw	r24, r22
    2f72:	9c 8b       	std	Y+20, r25	; 0x14
    2f74:	8b 8b       	std	Y+19, r24	; 0x13
    2f76:	8b 89       	ldd	r24, Y+19	; 0x13
    2f78:	9c 89       	ldd	r25, Y+20	; 0x14
    2f7a:	98 8b       	std	Y+16, r25	; 0x10
    2f7c:	8f 87       	std	Y+15, r24	; 0x0f
    2f7e:	8f 85       	ldd	r24, Y+15	; 0x0f
    2f80:	98 89       	ldd	r25, Y+16	; 0x10
    2f82:	01 97       	sbiw	r24, 0x01	; 1
    2f84:	f1 f7       	brne	.-4      	; 0x2f82 <main+0x244c>
    2f86:	98 8b       	std	Y+16, r25	; 0x10
    2f88:	8f 87       	std	Y+15, r24	; 0x0f
    2f8a:	78 c0       	rjmp	.+240    	; 0x307c <main+0x2546>
					_delay_ms(500);
				} else {
					LCD_clearScreen();
    2f8c:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
					LCD_displayString("Undefined Input");
    2f90:	8b e7       	ldi	r24, 0x7B	; 123
    2f92:	90 e0       	ldi	r25, 0x00	; 0
    2f94:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    2f98:	80 e0       	ldi	r24, 0x00	; 0
    2f9a:	90 e0       	ldi	r25, 0x00	; 0
    2f9c:	aa ef       	ldi	r26, 0xFA	; 250
    2f9e:	b3 e4       	ldi	r27, 0x43	; 67
    2fa0:	8b 87       	std	Y+11, r24	; 0x0b
    2fa2:	9c 87       	std	Y+12, r25	; 0x0c
    2fa4:	ad 87       	std	Y+13, r26	; 0x0d
    2fa6:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    2fa8:	6b 85       	ldd	r22, Y+11	; 0x0b
    2faa:	7c 85       	ldd	r23, Y+12	; 0x0c
    2fac:	8d 85       	ldd	r24, Y+13	; 0x0d
    2fae:	9e 85       	ldd	r25, Y+14	; 0x0e
    2fb0:	20 e0       	ldi	r18, 0x00	; 0
    2fb2:	30 e0       	ldi	r19, 0x00	; 0
    2fb4:	4a e7       	ldi	r20, 0x7A	; 122
    2fb6:	55 e4       	ldi	r21, 0x45	; 69
    2fb8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    2fbc:	dc 01       	movw	r26, r24
    2fbe:	cb 01       	movw	r24, r22
    2fc0:	8f 83       	std	Y+7, r24	; 0x07
    2fc2:	98 87       	std	Y+8, r25	; 0x08
    2fc4:	a9 87       	std	Y+9, r26	; 0x09
    2fc6:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    2fc8:	6f 81       	ldd	r22, Y+7	; 0x07
    2fca:	78 85       	ldd	r23, Y+8	; 0x08
    2fcc:	89 85       	ldd	r24, Y+9	; 0x09
    2fce:	9a 85       	ldd	r25, Y+10	; 0x0a
    2fd0:	20 e0       	ldi	r18, 0x00	; 0
    2fd2:	30 e0       	ldi	r19, 0x00	; 0
    2fd4:	40 e8       	ldi	r20, 0x80	; 128
    2fd6:	5f e3       	ldi	r21, 0x3F	; 63
    2fd8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    2fdc:	88 23       	and	r24, r24
    2fde:	2c f4       	brge	.+10     	; 0x2fea <main+0x24b4>
		__ticks = 1;
    2fe0:	81 e0       	ldi	r24, 0x01	; 1
    2fe2:	90 e0       	ldi	r25, 0x00	; 0
    2fe4:	9e 83       	std	Y+6, r25	; 0x06
    2fe6:	8d 83       	std	Y+5, r24	; 0x05
    2fe8:	3f c0       	rjmp	.+126    	; 0x3068 <main+0x2532>
	else if (__tmp > 65535)
    2fea:	6f 81       	ldd	r22, Y+7	; 0x07
    2fec:	78 85       	ldd	r23, Y+8	; 0x08
    2fee:	89 85       	ldd	r24, Y+9	; 0x09
    2ff0:	9a 85       	ldd	r25, Y+10	; 0x0a
    2ff2:	20 e0       	ldi	r18, 0x00	; 0
    2ff4:	3f ef       	ldi	r19, 0xFF	; 255
    2ff6:	4f e7       	ldi	r20, 0x7F	; 127
    2ff8:	57 e4       	ldi	r21, 0x47	; 71
    2ffa:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    2ffe:	18 16       	cp	r1, r24
    3000:	4c f5       	brge	.+82     	; 0x3054 <main+0x251e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3002:	6b 85       	ldd	r22, Y+11	; 0x0b
    3004:	7c 85       	ldd	r23, Y+12	; 0x0c
    3006:	8d 85       	ldd	r24, Y+13	; 0x0d
    3008:	9e 85       	ldd	r25, Y+14	; 0x0e
    300a:	20 e0       	ldi	r18, 0x00	; 0
    300c:	30 e0       	ldi	r19, 0x00	; 0
    300e:	40 e2       	ldi	r20, 0x20	; 32
    3010:	51 e4       	ldi	r21, 0x41	; 65
    3012:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3016:	dc 01       	movw	r26, r24
    3018:	cb 01       	movw	r24, r22
    301a:	bc 01       	movw	r22, r24
    301c:	cd 01       	movw	r24, r26
    301e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3022:	dc 01       	movw	r26, r24
    3024:	cb 01       	movw	r24, r22
    3026:	9e 83       	std	Y+6, r25	; 0x06
    3028:	8d 83       	std	Y+5, r24	; 0x05
    302a:	0f c0       	rjmp	.+30     	; 0x304a <main+0x2514>
    302c:	80 e9       	ldi	r24, 0x90	; 144
    302e:	91 e0       	ldi	r25, 0x01	; 1
    3030:	9c 83       	std	Y+4, r25	; 0x04
    3032:	8b 83       	std	Y+3, r24	; 0x03
    3034:	8b 81       	ldd	r24, Y+3	; 0x03
    3036:	9c 81       	ldd	r25, Y+4	; 0x04
    3038:	01 97       	sbiw	r24, 0x01	; 1
    303a:	f1 f7       	brne	.-4      	; 0x3038 <main+0x2502>
    303c:	9c 83       	std	Y+4, r25	; 0x04
    303e:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3040:	8d 81       	ldd	r24, Y+5	; 0x05
    3042:	9e 81       	ldd	r25, Y+6	; 0x06
    3044:	01 97       	sbiw	r24, 0x01	; 1
    3046:	9e 83       	std	Y+6, r25	; 0x06
    3048:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    304a:	8d 81       	ldd	r24, Y+5	; 0x05
    304c:	9e 81       	ldd	r25, Y+6	; 0x06
    304e:	00 97       	sbiw	r24, 0x00	; 0
    3050:	69 f7       	brne	.-38     	; 0x302c <main+0x24f6>
    3052:	14 c0       	rjmp	.+40     	; 0x307c <main+0x2546>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3054:	6f 81       	ldd	r22, Y+7	; 0x07
    3056:	78 85       	ldd	r23, Y+8	; 0x08
    3058:	89 85       	ldd	r24, Y+9	; 0x09
    305a:	9a 85       	ldd	r25, Y+10	; 0x0a
    305c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3060:	dc 01       	movw	r26, r24
    3062:	cb 01       	movw	r24, r22
    3064:	9e 83       	std	Y+6, r25	; 0x06
    3066:	8d 83       	std	Y+5, r24	; 0x05
    3068:	8d 81       	ldd	r24, Y+5	; 0x05
    306a:	9e 81       	ldd	r25, Y+6	; 0x06
    306c:	9a 83       	std	Y+2, r25	; 0x02
    306e:	89 83       	std	Y+1, r24	; 0x01
    3070:	89 81       	ldd	r24, Y+1	; 0x01
    3072:	9a 81       	ldd	r25, Y+2	; 0x02
    3074:	01 97       	sbiw	r24, 0x01	; 1
    3076:	f1 f7       	brne	.-4      	; 0x3074 <main+0x253e>
    3078:	9a 83       	std	Y+2, r25	; 0x02
    307a:	89 83       	std	Y+1, r24	; 0x01
					_delay_ms(500);
				}
				LCD_clearScreen();
    307c:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
				state = MAIN_MENU; // Return to main menu
    3080:	fe 01       	movw	r30, r28
    3082:	e0 5a       	subi	r30, 0xA0	; 160
    3084:	fe 4f       	sbci	r31, 0xFE	; 254
    3086:	81 e0       	ldi	r24, 0x01	; 1
    3088:	80 83       	st	Z, r24
    308a:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <main+0x82>
				break;

			default:
			    state = START_MENU; // Return to start menu
    308e:	fe 01       	movw	r30, r28
    3090:	e0 5a       	subi	r30, 0xA0	; 160
    3092:	fe 4f       	sbci	r31, 0xFE	; 254
    3094:	10 82       	st	Z, r1
    3096:	0c 94 dc 05 	jmp	0xbb8	; 0xbb8 <main+0x82>

0000309a <Display_MainMenu>:
#include "FinalProject_interface.h"

/*******************************************************************************
 *                           Program Functions                                 *
 *******************************************************************************/
unsigned char Display_MainMenu(){
    309a:	0f 93       	push	r16
    309c:	1f 93       	push	r17
    309e:	df 93       	push	r29
    30a0:	cf 93       	push	r28
    30a2:	cd b7       	in	r28, 0x3d	; 61
    30a4:	de b7       	in	r29, 0x3e	; 62
    30a6:	cc 59       	subi	r28, 0x9C	; 156
    30a8:	d0 40       	sbci	r29, 0x00	; 0
    30aa:	0f b6       	in	r0, 0x3f	; 63
    30ac:	f8 94       	cli
    30ae:	de bf       	out	0x3e, r29	; 62
    30b0:	0f be       	out	0x3f, r0	; 63
    30b2:	cd bf       	out	0x3d, r28	; 61
	unsigned char state;
	unsigned char user_input = 0;
    30b4:	fe 01       	movw	r30, r28
    30b6:	e5 56       	subi	r30, 0x65	; 101
    30b8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ba:	10 82       	st	Z, r1
	LCD_displayString("1-Engine Off");
    30bc:	84 ed       	ldi	r24, 0xD4	; 212
    30be:	90 e0       	ldi	r25, 0x00	; 0
    30c0:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    30c4:	fe 01       	movw	r30, r28
    30c6:	e9 56       	subi	r30, 0x69	; 105
    30c8:	ff 4f       	sbci	r31, 0xFF	; 255
    30ca:	80 e0       	ldi	r24, 0x00	; 0
    30cc:	90 e0       	ldi	r25, 0x00	; 0
    30ce:	aa e7       	ldi	r26, 0x7A	; 122
    30d0:	b4 e4       	ldi	r27, 0x44	; 68
    30d2:	80 83       	st	Z, r24
    30d4:	91 83       	std	Z+1, r25	; 0x01
    30d6:	a2 83       	std	Z+2, r26	; 0x02
    30d8:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    30da:	8e 01       	movw	r16, r28
    30dc:	0d 56       	subi	r16, 0x6D	; 109
    30de:	1f 4f       	sbci	r17, 0xFF	; 255
    30e0:	fe 01       	movw	r30, r28
    30e2:	e9 56       	subi	r30, 0x69	; 105
    30e4:	ff 4f       	sbci	r31, 0xFF	; 255
    30e6:	60 81       	ld	r22, Z
    30e8:	71 81       	ldd	r23, Z+1	; 0x01
    30ea:	82 81       	ldd	r24, Z+2	; 0x02
    30ec:	93 81       	ldd	r25, Z+3	; 0x03
    30ee:	20 e0       	ldi	r18, 0x00	; 0
    30f0:	30 e0       	ldi	r19, 0x00	; 0
    30f2:	4a e7       	ldi	r20, 0x7A	; 122
    30f4:	55 e4       	ldi	r21, 0x45	; 69
    30f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    30fa:	dc 01       	movw	r26, r24
    30fc:	cb 01       	movw	r24, r22
    30fe:	f8 01       	movw	r30, r16
    3100:	80 83       	st	Z, r24
    3102:	91 83       	std	Z+1, r25	; 0x01
    3104:	a2 83       	std	Z+2, r26	; 0x02
    3106:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3108:	fe 01       	movw	r30, r28
    310a:	ed 56       	subi	r30, 0x6D	; 109
    310c:	ff 4f       	sbci	r31, 0xFF	; 255
    310e:	60 81       	ld	r22, Z
    3110:	71 81       	ldd	r23, Z+1	; 0x01
    3112:	82 81       	ldd	r24, Z+2	; 0x02
    3114:	93 81       	ldd	r25, Z+3	; 0x03
    3116:	20 e0       	ldi	r18, 0x00	; 0
    3118:	30 e0       	ldi	r19, 0x00	; 0
    311a:	40 e8       	ldi	r20, 0x80	; 128
    311c:	5f e3       	ldi	r21, 0x3F	; 63
    311e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3122:	88 23       	and	r24, r24
    3124:	44 f4       	brge	.+16     	; 0x3136 <Display_MainMenu+0x9c>
		__ticks = 1;
    3126:	fe 01       	movw	r30, r28
    3128:	ef 56       	subi	r30, 0x6F	; 111
    312a:	ff 4f       	sbci	r31, 0xFF	; 255
    312c:	81 e0       	ldi	r24, 0x01	; 1
    312e:	90 e0       	ldi	r25, 0x00	; 0
    3130:	91 83       	std	Z+1, r25	; 0x01
    3132:	80 83       	st	Z, r24
    3134:	64 c0       	rjmp	.+200    	; 0x31fe <Display_MainMenu+0x164>
	else if (__tmp > 65535)
    3136:	fe 01       	movw	r30, r28
    3138:	ed 56       	subi	r30, 0x6D	; 109
    313a:	ff 4f       	sbci	r31, 0xFF	; 255
    313c:	60 81       	ld	r22, Z
    313e:	71 81       	ldd	r23, Z+1	; 0x01
    3140:	82 81       	ldd	r24, Z+2	; 0x02
    3142:	93 81       	ldd	r25, Z+3	; 0x03
    3144:	20 e0       	ldi	r18, 0x00	; 0
    3146:	3f ef       	ldi	r19, 0xFF	; 255
    3148:	4f e7       	ldi	r20, 0x7F	; 127
    314a:	57 e4       	ldi	r21, 0x47	; 71
    314c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3150:	18 16       	cp	r1, r24
    3152:	0c f0       	brlt	.+2      	; 0x3156 <Display_MainMenu+0xbc>
    3154:	43 c0       	rjmp	.+134    	; 0x31dc <Display_MainMenu+0x142>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3156:	fe 01       	movw	r30, r28
    3158:	e9 56       	subi	r30, 0x69	; 105
    315a:	ff 4f       	sbci	r31, 0xFF	; 255
    315c:	60 81       	ld	r22, Z
    315e:	71 81       	ldd	r23, Z+1	; 0x01
    3160:	82 81       	ldd	r24, Z+2	; 0x02
    3162:	93 81       	ldd	r25, Z+3	; 0x03
    3164:	20 e0       	ldi	r18, 0x00	; 0
    3166:	30 e0       	ldi	r19, 0x00	; 0
    3168:	40 e2       	ldi	r20, 0x20	; 32
    316a:	51 e4       	ldi	r21, 0x41	; 65
    316c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3170:	dc 01       	movw	r26, r24
    3172:	cb 01       	movw	r24, r22
    3174:	8e 01       	movw	r16, r28
    3176:	0f 56       	subi	r16, 0x6F	; 111
    3178:	1f 4f       	sbci	r17, 0xFF	; 255
    317a:	bc 01       	movw	r22, r24
    317c:	cd 01       	movw	r24, r26
    317e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3182:	dc 01       	movw	r26, r24
    3184:	cb 01       	movw	r24, r22
    3186:	f8 01       	movw	r30, r16
    3188:	91 83       	std	Z+1, r25	; 0x01
    318a:	80 83       	st	Z, r24
    318c:	1f c0       	rjmp	.+62     	; 0x31cc <Display_MainMenu+0x132>
    318e:	fe 01       	movw	r30, r28
    3190:	e1 57       	subi	r30, 0x71	; 113
    3192:	ff 4f       	sbci	r31, 0xFF	; 255
    3194:	80 e9       	ldi	r24, 0x90	; 144
    3196:	91 e0       	ldi	r25, 0x01	; 1
    3198:	91 83       	std	Z+1, r25	; 0x01
    319a:	80 83       	st	Z, r24
    319c:	fe 01       	movw	r30, r28
    319e:	e1 57       	subi	r30, 0x71	; 113
    31a0:	ff 4f       	sbci	r31, 0xFF	; 255
    31a2:	80 81       	ld	r24, Z
    31a4:	91 81       	ldd	r25, Z+1	; 0x01
    31a6:	01 97       	sbiw	r24, 0x01	; 1
    31a8:	f1 f7       	brne	.-4      	; 0x31a6 <Display_MainMenu+0x10c>
    31aa:	fe 01       	movw	r30, r28
    31ac:	e1 57       	subi	r30, 0x71	; 113
    31ae:	ff 4f       	sbci	r31, 0xFF	; 255
    31b0:	91 83       	std	Z+1, r25	; 0x01
    31b2:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    31b4:	de 01       	movw	r26, r28
    31b6:	af 56       	subi	r26, 0x6F	; 111
    31b8:	bf 4f       	sbci	r27, 0xFF	; 255
    31ba:	fe 01       	movw	r30, r28
    31bc:	ef 56       	subi	r30, 0x6F	; 111
    31be:	ff 4f       	sbci	r31, 0xFF	; 255
    31c0:	80 81       	ld	r24, Z
    31c2:	91 81       	ldd	r25, Z+1	; 0x01
    31c4:	01 97       	sbiw	r24, 0x01	; 1
    31c6:	11 96       	adiw	r26, 0x01	; 1
    31c8:	9c 93       	st	X, r25
    31ca:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    31cc:	fe 01       	movw	r30, r28
    31ce:	ef 56       	subi	r30, 0x6F	; 111
    31d0:	ff 4f       	sbci	r31, 0xFF	; 255
    31d2:	80 81       	ld	r24, Z
    31d4:	91 81       	ldd	r25, Z+1	; 0x01
    31d6:	00 97       	sbiw	r24, 0x00	; 0
    31d8:	d1 f6       	brne	.-76     	; 0x318e <Display_MainMenu+0xf4>
    31da:	27 c0       	rjmp	.+78     	; 0x322a <Display_MainMenu+0x190>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    31dc:	8e 01       	movw	r16, r28
    31de:	0f 56       	subi	r16, 0x6F	; 111
    31e0:	1f 4f       	sbci	r17, 0xFF	; 255
    31e2:	fe 01       	movw	r30, r28
    31e4:	ed 56       	subi	r30, 0x6D	; 109
    31e6:	ff 4f       	sbci	r31, 0xFF	; 255
    31e8:	60 81       	ld	r22, Z
    31ea:	71 81       	ldd	r23, Z+1	; 0x01
    31ec:	82 81       	ldd	r24, Z+2	; 0x02
    31ee:	93 81       	ldd	r25, Z+3	; 0x03
    31f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    31f4:	dc 01       	movw	r26, r24
    31f6:	cb 01       	movw	r24, r22
    31f8:	f8 01       	movw	r30, r16
    31fa:	91 83       	std	Z+1, r25	; 0x01
    31fc:	80 83       	st	Z, r24
    31fe:	de 01       	movw	r26, r28
    3200:	a3 57       	subi	r26, 0x73	; 115
    3202:	bf 4f       	sbci	r27, 0xFF	; 255
    3204:	fe 01       	movw	r30, r28
    3206:	ef 56       	subi	r30, 0x6F	; 111
    3208:	ff 4f       	sbci	r31, 0xFF	; 255
    320a:	80 81       	ld	r24, Z
    320c:	91 81       	ldd	r25, Z+1	; 0x01
    320e:	8d 93       	st	X+, r24
    3210:	9c 93       	st	X, r25
    3212:	fe 01       	movw	r30, r28
    3214:	e3 57       	subi	r30, 0x73	; 115
    3216:	ff 4f       	sbci	r31, 0xFF	; 255
    3218:	80 81       	ld	r24, Z
    321a:	91 81       	ldd	r25, Z+1	; 0x01
    321c:	01 97       	sbiw	r24, 0x01	; 1
    321e:	f1 f7       	brne	.-4      	; 0x321c <Display_MainMenu+0x182>
    3220:	fe 01       	movw	r30, r28
    3222:	e3 57       	subi	r30, 0x73	; 115
    3224:	ff 4f       	sbci	r31, 0xFF	; 255
    3226:	91 83       	std	Z+1, r25	; 0x01
    3228:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_clearScreen();
    322a:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
	LCD_displayString("2-Left Signal");
    322e:	81 ee       	ldi	r24, 0xE1	; 225
    3230:	90 e0       	ldi	r25, 0x00	; 0
    3232:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    3236:	fe 01       	movw	r30, r28
    3238:	e7 57       	subi	r30, 0x77	; 119
    323a:	ff 4f       	sbci	r31, 0xFF	; 255
    323c:	80 e0       	ldi	r24, 0x00	; 0
    323e:	90 e0       	ldi	r25, 0x00	; 0
    3240:	aa e7       	ldi	r26, 0x7A	; 122
    3242:	b4 e4       	ldi	r27, 0x44	; 68
    3244:	80 83       	st	Z, r24
    3246:	91 83       	std	Z+1, r25	; 0x01
    3248:	a2 83       	std	Z+2, r26	; 0x02
    324a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    324c:	8e 01       	movw	r16, r28
    324e:	0b 57       	subi	r16, 0x7B	; 123
    3250:	1f 4f       	sbci	r17, 0xFF	; 255
    3252:	fe 01       	movw	r30, r28
    3254:	e7 57       	subi	r30, 0x77	; 119
    3256:	ff 4f       	sbci	r31, 0xFF	; 255
    3258:	60 81       	ld	r22, Z
    325a:	71 81       	ldd	r23, Z+1	; 0x01
    325c:	82 81       	ldd	r24, Z+2	; 0x02
    325e:	93 81       	ldd	r25, Z+3	; 0x03
    3260:	20 e0       	ldi	r18, 0x00	; 0
    3262:	30 e0       	ldi	r19, 0x00	; 0
    3264:	4a e7       	ldi	r20, 0x7A	; 122
    3266:	55 e4       	ldi	r21, 0x45	; 69
    3268:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    326c:	dc 01       	movw	r26, r24
    326e:	cb 01       	movw	r24, r22
    3270:	f8 01       	movw	r30, r16
    3272:	80 83       	st	Z, r24
    3274:	91 83       	std	Z+1, r25	; 0x01
    3276:	a2 83       	std	Z+2, r26	; 0x02
    3278:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    327a:	fe 01       	movw	r30, r28
    327c:	eb 57       	subi	r30, 0x7B	; 123
    327e:	ff 4f       	sbci	r31, 0xFF	; 255
    3280:	60 81       	ld	r22, Z
    3282:	71 81       	ldd	r23, Z+1	; 0x01
    3284:	82 81       	ldd	r24, Z+2	; 0x02
    3286:	93 81       	ldd	r25, Z+3	; 0x03
    3288:	20 e0       	ldi	r18, 0x00	; 0
    328a:	30 e0       	ldi	r19, 0x00	; 0
    328c:	40 e8       	ldi	r20, 0x80	; 128
    328e:	5f e3       	ldi	r21, 0x3F	; 63
    3290:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3294:	88 23       	and	r24, r24
    3296:	44 f4       	brge	.+16     	; 0x32a8 <Display_MainMenu+0x20e>
		__ticks = 1;
    3298:	fe 01       	movw	r30, r28
    329a:	ed 57       	subi	r30, 0x7D	; 125
    329c:	ff 4f       	sbci	r31, 0xFF	; 255
    329e:	81 e0       	ldi	r24, 0x01	; 1
    32a0:	90 e0       	ldi	r25, 0x00	; 0
    32a2:	91 83       	std	Z+1, r25	; 0x01
    32a4:	80 83       	st	Z, r24
    32a6:	64 c0       	rjmp	.+200    	; 0x3370 <Display_MainMenu+0x2d6>
	else if (__tmp > 65535)
    32a8:	fe 01       	movw	r30, r28
    32aa:	eb 57       	subi	r30, 0x7B	; 123
    32ac:	ff 4f       	sbci	r31, 0xFF	; 255
    32ae:	60 81       	ld	r22, Z
    32b0:	71 81       	ldd	r23, Z+1	; 0x01
    32b2:	82 81       	ldd	r24, Z+2	; 0x02
    32b4:	93 81       	ldd	r25, Z+3	; 0x03
    32b6:	20 e0       	ldi	r18, 0x00	; 0
    32b8:	3f ef       	ldi	r19, 0xFF	; 255
    32ba:	4f e7       	ldi	r20, 0x7F	; 127
    32bc:	57 e4       	ldi	r21, 0x47	; 71
    32be:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    32c2:	18 16       	cp	r1, r24
    32c4:	0c f0       	brlt	.+2      	; 0x32c8 <Display_MainMenu+0x22e>
    32c6:	43 c0       	rjmp	.+134    	; 0x334e <Display_MainMenu+0x2b4>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    32c8:	fe 01       	movw	r30, r28
    32ca:	e7 57       	subi	r30, 0x77	; 119
    32cc:	ff 4f       	sbci	r31, 0xFF	; 255
    32ce:	60 81       	ld	r22, Z
    32d0:	71 81       	ldd	r23, Z+1	; 0x01
    32d2:	82 81       	ldd	r24, Z+2	; 0x02
    32d4:	93 81       	ldd	r25, Z+3	; 0x03
    32d6:	20 e0       	ldi	r18, 0x00	; 0
    32d8:	30 e0       	ldi	r19, 0x00	; 0
    32da:	40 e2       	ldi	r20, 0x20	; 32
    32dc:	51 e4       	ldi	r21, 0x41	; 65
    32de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    32e2:	dc 01       	movw	r26, r24
    32e4:	cb 01       	movw	r24, r22
    32e6:	8e 01       	movw	r16, r28
    32e8:	0d 57       	subi	r16, 0x7D	; 125
    32ea:	1f 4f       	sbci	r17, 0xFF	; 255
    32ec:	bc 01       	movw	r22, r24
    32ee:	cd 01       	movw	r24, r26
    32f0:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    32f4:	dc 01       	movw	r26, r24
    32f6:	cb 01       	movw	r24, r22
    32f8:	f8 01       	movw	r30, r16
    32fa:	91 83       	std	Z+1, r25	; 0x01
    32fc:	80 83       	st	Z, r24
    32fe:	1f c0       	rjmp	.+62     	; 0x333e <Display_MainMenu+0x2a4>
    3300:	fe 01       	movw	r30, r28
    3302:	ef 57       	subi	r30, 0x7F	; 127
    3304:	ff 4f       	sbci	r31, 0xFF	; 255
    3306:	80 e9       	ldi	r24, 0x90	; 144
    3308:	91 e0       	ldi	r25, 0x01	; 1
    330a:	91 83       	std	Z+1, r25	; 0x01
    330c:	80 83       	st	Z, r24
    330e:	fe 01       	movw	r30, r28
    3310:	ef 57       	subi	r30, 0x7F	; 127
    3312:	ff 4f       	sbci	r31, 0xFF	; 255
    3314:	80 81       	ld	r24, Z
    3316:	91 81       	ldd	r25, Z+1	; 0x01
    3318:	01 97       	sbiw	r24, 0x01	; 1
    331a:	f1 f7       	brne	.-4      	; 0x3318 <Display_MainMenu+0x27e>
    331c:	fe 01       	movw	r30, r28
    331e:	ef 57       	subi	r30, 0x7F	; 127
    3320:	ff 4f       	sbci	r31, 0xFF	; 255
    3322:	91 83       	std	Z+1, r25	; 0x01
    3324:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3326:	de 01       	movw	r26, r28
    3328:	ad 57       	subi	r26, 0x7D	; 125
    332a:	bf 4f       	sbci	r27, 0xFF	; 255
    332c:	fe 01       	movw	r30, r28
    332e:	ed 57       	subi	r30, 0x7D	; 125
    3330:	ff 4f       	sbci	r31, 0xFF	; 255
    3332:	80 81       	ld	r24, Z
    3334:	91 81       	ldd	r25, Z+1	; 0x01
    3336:	01 97       	sbiw	r24, 0x01	; 1
    3338:	11 96       	adiw	r26, 0x01	; 1
    333a:	9c 93       	st	X, r25
    333c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    333e:	fe 01       	movw	r30, r28
    3340:	ed 57       	subi	r30, 0x7D	; 125
    3342:	ff 4f       	sbci	r31, 0xFF	; 255
    3344:	80 81       	ld	r24, Z
    3346:	91 81       	ldd	r25, Z+1	; 0x01
    3348:	00 97       	sbiw	r24, 0x00	; 0
    334a:	d1 f6       	brne	.-76     	; 0x3300 <Display_MainMenu+0x266>
    334c:	27 c0       	rjmp	.+78     	; 0x339c <Display_MainMenu+0x302>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    334e:	8e 01       	movw	r16, r28
    3350:	0d 57       	subi	r16, 0x7D	; 125
    3352:	1f 4f       	sbci	r17, 0xFF	; 255
    3354:	fe 01       	movw	r30, r28
    3356:	eb 57       	subi	r30, 0x7B	; 123
    3358:	ff 4f       	sbci	r31, 0xFF	; 255
    335a:	60 81       	ld	r22, Z
    335c:	71 81       	ldd	r23, Z+1	; 0x01
    335e:	82 81       	ldd	r24, Z+2	; 0x02
    3360:	93 81       	ldd	r25, Z+3	; 0x03
    3362:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3366:	dc 01       	movw	r26, r24
    3368:	cb 01       	movw	r24, r22
    336a:	f8 01       	movw	r30, r16
    336c:	91 83       	std	Z+1, r25	; 0x01
    336e:	80 83       	st	Z, r24
    3370:	de 01       	movw	r26, r28
    3372:	a1 58       	subi	r26, 0x81	; 129
    3374:	bf 4f       	sbci	r27, 0xFF	; 255
    3376:	fe 01       	movw	r30, r28
    3378:	ed 57       	subi	r30, 0x7D	; 125
    337a:	ff 4f       	sbci	r31, 0xFF	; 255
    337c:	80 81       	ld	r24, Z
    337e:	91 81       	ldd	r25, Z+1	; 0x01
    3380:	8d 93       	st	X+, r24
    3382:	9c 93       	st	X, r25
    3384:	fe 01       	movw	r30, r28
    3386:	e1 58       	subi	r30, 0x81	; 129
    3388:	ff 4f       	sbci	r31, 0xFF	; 255
    338a:	80 81       	ld	r24, Z
    338c:	91 81       	ldd	r25, Z+1	; 0x01
    338e:	01 97       	sbiw	r24, 0x01	; 1
    3390:	f1 f7       	brne	.-4      	; 0x338e <Display_MainMenu+0x2f4>
    3392:	fe 01       	movw	r30, r28
    3394:	e1 58       	subi	r30, 0x81	; 129
    3396:	ff 4f       	sbci	r31, 0xFF	; 255
    3398:	91 83       	std	Z+1, r25	; 0x01
    339a:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_clearScreen();
    339c:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
	LCD_displayString("3-Right Signal");
    33a0:	8f ee       	ldi	r24, 0xEF	; 239
    33a2:	90 e0       	ldi	r25, 0x00	; 0
    33a4:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    33a8:	fe 01       	movw	r30, r28
    33aa:	e5 58       	subi	r30, 0x85	; 133
    33ac:	ff 4f       	sbci	r31, 0xFF	; 255
    33ae:	80 e0       	ldi	r24, 0x00	; 0
    33b0:	90 e0       	ldi	r25, 0x00	; 0
    33b2:	aa e7       	ldi	r26, 0x7A	; 122
    33b4:	b4 e4       	ldi	r27, 0x44	; 68
    33b6:	80 83       	st	Z, r24
    33b8:	91 83       	std	Z+1, r25	; 0x01
    33ba:	a2 83       	std	Z+2, r26	; 0x02
    33bc:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    33be:	8e 01       	movw	r16, r28
    33c0:	09 58       	subi	r16, 0x89	; 137
    33c2:	1f 4f       	sbci	r17, 0xFF	; 255
    33c4:	fe 01       	movw	r30, r28
    33c6:	e5 58       	subi	r30, 0x85	; 133
    33c8:	ff 4f       	sbci	r31, 0xFF	; 255
    33ca:	60 81       	ld	r22, Z
    33cc:	71 81       	ldd	r23, Z+1	; 0x01
    33ce:	82 81       	ldd	r24, Z+2	; 0x02
    33d0:	93 81       	ldd	r25, Z+3	; 0x03
    33d2:	20 e0       	ldi	r18, 0x00	; 0
    33d4:	30 e0       	ldi	r19, 0x00	; 0
    33d6:	4a e7       	ldi	r20, 0x7A	; 122
    33d8:	55 e4       	ldi	r21, 0x45	; 69
    33da:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    33de:	dc 01       	movw	r26, r24
    33e0:	cb 01       	movw	r24, r22
    33e2:	f8 01       	movw	r30, r16
    33e4:	80 83       	st	Z, r24
    33e6:	91 83       	std	Z+1, r25	; 0x01
    33e8:	a2 83       	std	Z+2, r26	; 0x02
    33ea:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    33ec:	fe 01       	movw	r30, r28
    33ee:	e9 58       	subi	r30, 0x89	; 137
    33f0:	ff 4f       	sbci	r31, 0xFF	; 255
    33f2:	60 81       	ld	r22, Z
    33f4:	71 81       	ldd	r23, Z+1	; 0x01
    33f6:	82 81       	ldd	r24, Z+2	; 0x02
    33f8:	93 81       	ldd	r25, Z+3	; 0x03
    33fa:	20 e0       	ldi	r18, 0x00	; 0
    33fc:	30 e0       	ldi	r19, 0x00	; 0
    33fe:	40 e8       	ldi	r20, 0x80	; 128
    3400:	5f e3       	ldi	r21, 0x3F	; 63
    3402:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3406:	88 23       	and	r24, r24
    3408:	44 f4       	brge	.+16     	; 0x341a <Display_MainMenu+0x380>
		__ticks = 1;
    340a:	fe 01       	movw	r30, r28
    340c:	eb 58       	subi	r30, 0x8B	; 139
    340e:	ff 4f       	sbci	r31, 0xFF	; 255
    3410:	81 e0       	ldi	r24, 0x01	; 1
    3412:	90 e0       	ldi	r25, 0x00	; 0
    3414:	91 83       	std	Z+1, r25	; 0x01
    3416:	80 83       	st	Z, r24
    3418:	64 c0       	rjmp	.+200    	; 0x34e2 <Display_MainMenu+0x448>
	else if (__tmp > 65535)
    341a:	fe 01       	movw	r30, r28
    341c:	e9 58       	subi	r30, 0x89	; 137
    341e:	ff 4f       	sbci	r31, 0xFF	; 255
    3420:	60 81       	ld	r22, Z
    3422:	71 81       	ldd	r23, Z+1	; 0x01
    3424:	82 81       	ldd	r24, Z+2	; 0x02
    3426:	93 81       	ldd	r25, Z+3	; 0x03
    3428:	20 e0       	ldi	r18, 0x00	; 0
    342a:	3f ef       	ldi	r19, 0xFF	; 255
    342c:	4f e7       	ldi	r20, 0x7F	; 127
    342e:	57 e4       	ldi	r21, 0x47	; 71
    3430:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3434:	18 16       	cp	r1, r24
    3436:	0c f0       	brlt	.+2      	; 0x343a <Display_MainMenu+0x3a0>
    3438:	43 c0       	rjmp	.+134    	; 0x34c0 <Display_MainMenu+0x426>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    343a:	fe 01       	movw	r30, r28
    343c:	e5 58       	subi	r30, 0x85	; 133
    343e:	ff 4f       	sbci	r31, 0xFF	; 255
    3440:	60 81       	ld	r22, Z
    3442:	71 81       	ldd	r23, Z+1	; 0x01
    3444:	82 81       	ldd	r24, Z+2	; 0x02
    3446:	93 81       	ldd	r25, Z+3	; 0x03
    3448:	20 e0       	ldi	r18, 0x00	; 0
    344a:	30 e0       	ldi	r19, 0x00	; 0
    344c:	40 e2       	ldi	r20, 0x20	; 32
    344e:	51 e4       	ldi	r21, 0x41	; 65
    3450:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3454:	dc 01       	movw	r26, r24
    3456:	cb 01       	movw	r24, r22
    3458:	8e 01       	movw	r16, r28
    345a:	0b 58       	subi	r16, 0x8B	; 139
    345c:	1f 4f       	sbci	r17, 0xFF	; 255
    345e:	bc 01       	movw	r22, r24
    3460:	cd 01       	movw	r24, r26
    3462:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3466:	dc 01       	movw	r26, r24
    3468:	cb 01       	movw	r24, r22
    346a:	f8 01       	movw	r30, r16
    346c:	91 83       	std	Z+1, r25	; 0x01
    346e:	80 83       	st	Z, r24
    3470:	1f c0       	rjmp	.+62     	; 0x34b0 <Display_MainMenu+0x416>
    3472:	fe 01       	movw	r30, r28
    3474:	ed 58       	subi	r30, 0x8D	; 141
    3476:	ff 4f       	sbci	r31, 0xFF	; 255
    3478:	80 e9       	ldi	r24, 0x90	; 144
    347a:	91 e0       	ldi	r25, 0x01	; 1
    347c:	91 83       	std	Z+1, r25	; 0x01
    347e:	80 83       	st	Z, r24
    3480:	fe 01       	movw	r30, r28
    3482:	ed 58       	subi	r30, 0x8D	; 141
    3484:	ff 4f       	sbci	r31, 0xFF	; 255
    3486:	80 81       	ld	r24, Z
    3488:	91 81       	ldd	r25, Z+1	; 0x01
    348a:	01 97       	sbiw	r24, 0x01	; 1
    348c:	f1 f7       	brne	.-4      	; 0x348a <Display_MainMenu+0x3f0>
    348e:	fe 01       	movw	r30, r28
    3490:	ed 58       	subi	r30, 0x8D	; 141
    3492:	ff 4f       	sbci	r31, 0xFF	; 255
    3494:	91 83       	std	Z+1, r25	; 0x01
    3496:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3498:	de 01       	movw	r26, r28
    349a:	ab 58       	subi	r26, 0x8B	; 139
    349c:	bf 4f       	sbci	r27, 0xFF	; 255
    349e:	fe 01       	movw	r30, r28
    34a0:	eb 58       	subi	r30, 0x8B	; 139
    34a2:	ff 4f       	sbci	r31, 0xFF	; 255
    34a4:	80 81       	ld	r24, Z
    34a6:	91 81       	ldd	r25, Z+1	; 0x01
    34a8:	01 97       	sbiw	r24, 0x01	; 1
    34aa:	11 96       	adiw	r26, 0x01	; 1
    34ac:	9c 93       	st	X, r25
    34ae:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    34b0:	fe 01       	movw	r30, r28
    34b2:	eb 58       	subi	r30, 0x8B	; 139
    34b4:	ff 4f       	sbci	r31, 0xFF	; 255
    34b6:	80 81       	ld	r24, Z
    34b8:	91 81       	ldd	r25, Z+1	; 0x01
    34ba:	00 97       	sbiw	r24, 0x00	; 0
    34bc:	d1 f6       	brne	.-76     	; 0x3472 <Display_MainMenu+0x3d8>
    34be:	27 c0       	rjmp	.+78     	; 0x350e <Display_MainMenu+0x474>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    34c0:	8e 01       	movw	r16, r28
    34c2:	0b 58       	subi	r16, 0x8B	; 139
    34c4:	1f 4f       	sbci	r17, 0xFF	; 255
    34c6:	fe 01       	movw	r30, r28
    34c8:	e9 58       	subi	r30, 0x89	; 137
    34ca:	ff 4f       	sbci	r31, 0xFF	; 255
    34cc:	60 81       	ld	r22, Z
    34ce:	71 81       	ldd	r23, Z+1	; 0x01
    34d0:	82 81       	ldd	r24, Z+2	; 0x02
    34d2:	93 81       	ldd	r25, Z+3	; 0x03
    34d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    34d8:	dc 01       	movw	r26, r24
    34da:	cb 01       	movw	r24, r22
    34dc:	f8 01       	movw	r30, r16
    34de:	91 83       	std	Z+1, r25	; 0x01
    34e0:	80 83       	st	Z, r24
    34e2:	de 01       	movw	r26, r28
    34e4:	af 58       	subi	r26, 0x8F	; 143
    34e6:	bf 4f       	sbci	r27, 0xFF	; 255
    34e8:	fe 01       	movw	r30, r28
    34ea:	eb 58       	subi	r30, 0x8B	; 139
    34ec:	ff 4f       	sbci	r31, 0xFF	; 255
    34ee:	80 81       	ld	r24, Z
    34f0:	91 81       	ldd	r25, Z+1	; 0x01
    34f2:	8d 93       	st	X+, r24
    34f4:	9c 93       	st	X, r25
    34f6:	fe 01       	movw	r30, r28
    34f8:	ef 58       	subi	r30, 0x8F	; 143
    34fa:	ff 4f       	sbci	r31, 0xFF	; 255
    34fc:	80 81       	ld	r24, Z
    34fe:	91 81       	ldd	r25, Z+1	; 0x01
    3500:	01 97       	sbiw	r24, 0x01	; 1
    3502:	f1 f7       	brne	.-4      	; 0x3500 <Display_MainMenu+0x466>
    3504:	fe 01       	movw	r30, r28
    3506:	ef 58       	subi	r30, 0x8F	; 143
    3508:	ff 4f       	sbci	r31, 0xFF	; 255
    350a:	91 83       	std	Z+1, r25	; 0x01
    350c:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_clearScreen();
    350e:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
	LCD_displayString("4-Waiting Signal");
    3512:	8e ef       	ldi	r24, 0xFE	; 254
    3514:	90 e0       	ldi	r25, 0x00	; 0
    3516:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    351a:	fe 01       	movw	r30, r28
    351c:	e3 59       	subi	r30, 0x93	; 147
    351e:	ff 4f       	sbci	r31, 0xFF	; 255
    3520:	80 e0       	ldi	r24, 0x00	; 0
    3522:	90 e0       	ldi	r25, 0x00	; 0
    3524:	aa e7       	ldi	r26, 0x7A	; 122
    3526:	b4 e4       	ldi	r27, 0x44	; 68
    3528:	80 83       	st	Z, r24
    352a:	91 83       	std	Z+1, r25	; 0x01
    352c:	a2 83       	std	Z+2, r26	; 0x02
    352e:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3530:	8e 01       	movw	r16, r28
    3532:	07 59       	subi	r16, 0x97	; 151
    3534:	1f 4f       	sbci	r17, 0xFF	; 255
    3536:	fe 01       	movw	r30, r28
    3538:	e3 59       	subi	r30, 0x93	; 147
    353a:	ff 4f       	sbci	r31, 0xFF	; 255
    353c:	60 81       	ld	r22, Z
    353e:	71 81       	ldd	r23, Z+1	; 0x01
    3540:	82 81       	ldd	r24, Z+2	; 0x02
    3542:	93 81       	ldd	r25, Z+3	; 0x03
    3544:	20 e0       	ldi	r18, 0x00	; 0
    3546:	30 e0       	ldi	r19, 0x00	; 0
    3548:	4a e7       	ldi	r20, 0x7A	; 122
    354a:	55 e4       	ldi	r21, 0x45	; 69
    354c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3550:	dc 01       	movw	r26, r24
    3552:	cb 01       	movw	r24, r22
    3554:	f8 01       	movw	r30, r16
    3556:	80 83       	st	Z, r24
    3558:	91 83       	std	Z+1, r25	; 0x01
    355a:	a2 83       	std	Z+2, r26	; 0x02
    355c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    355e:	fe 01       	movw	r30, r28
    3560:	e7 59       	subi	r30, 0x97	; 151
    3562:	ff 4f       	sbci	r31, 0xFF	; 255
    3564:	60 81       	ld	r22, Z
    3566:	71 81       	ldd	r23, Z+1	; 0x01
    3568:	82 81       	ldd	r24, Z+2	; 0x02
    356a:	93 81       	ldd	r25, Z+3	; 0x03
    356c:	20 e0       	ldi	r18, 0x00	; 0
    356e:	30 e0       	ldi	r19, 0x00	; 0
    3570:	40 e8       	ldi	r20, 0x80	; 128
    3572:	5f e3       	ldi	r21, 0x3F	; 63
    3574:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3578:	88 23       	and	r24, r24
    357a:	44 f4       	brge	.+16     	; 0x358c <Display_MainMenu+0x4f2>
		__ticks = 1;
    357c:	fe 01       	movw	r30, r28
    357e:	e9 59       	subi	r30, 0x99	; 153
    3580:	ff 4f       	sbci	r31, 0xFF	; 255
    3582:	81 e0       	ldi	r24, 0x01	; 1
    3584:	90 e0       	ldi	r25, 0x00	; 0
    3586:	91 83       	std	Z+1, r25	; 0x01
    3588:	80 83       	st	Z, r24
    358a:	64 c0       	rjmp	.+200    	; 0x3654 <Display_MainMenu+0x5ba>
	else if (__tmp > 65535)
    358c:	fe 01       	movw	r30, r28
    358e:	e7 59       	subi	r30, 0x97	; 151
    3590:	ff 4f       	sbci	r31, 0xFF	; 255
    3592:	60 81       	ld	r22, Z
    3594:	71 81       	ldd	r23, Z+1	; 0x01
    3596:	82 81       	ldd	r24, Z+2	; 0x02
    3598:	93 81       	ldd	r25, Z+3	; 0x03
    359a:	20 e0       	ldi	r18, 0x00	; 0
    359c:	3f ef       	ldi	r19, 0xFF	; 255
    359e:	4f e7       	ldi	r20, 0x7F	; 127
    35a0:	57 e4       	ldi	r21, 0x47	; 71
    35a2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    35a6:	18 16       	cp	r1, r24
    35a8:	0c f0       	brlt	.+2      	; 0x35ac <Display_MainMenu+0x512>
    35aa:	43 c0       	rjmp	.+134    	; 0x3632 <Display_MainMenu+0x598>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    35ac:	fe 01       	movw	r30, r28
    35ae:	e3 59       	subi	r30, 0x93	; 147
    35b0:	ff 4f       	sbci	r31, 0xFF	; 255
    35b2:	60 81       	ld	r22, Z
    35b4:	71 81       	ldd	r23, Z+1	; 0x01
    35b6:	82 81       	ldd	r24, Z+2	; 0x02
    35b8:	93 81       	ldd	r25, Z+3	; 0x03
    35ba:	20 e0       	ldi	r18, 0x00	; 0
    35bc:	30 e0       	ldi	r19, 0x00	; 0
    35be:	40 e2       	ldi	r20, 0x20	; 32
    35c0:	51 e4       	ldi	r21, 0x41	; 65
    35c2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    35c6:	dc 01       	movw	r26, r24
    35c8:	cb 01       	movw	r24, r22
    35ca:	8e 01       	movw	r16, r28
    35cc:	09 59       	subi	r16, 0x99	; 153
    35ce:	1f 4f       	sbci	r17, 0xFF	; 255
    35d0:	bc 01       	movw	r22, r24
    35d2:	cd 01       	movw	r24, r26
    35d4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    35d8:	dc 01       	movw	r26, r24
    35da:	cb 01       	movw	r24, r22
    35dc:	f8 01       	movw	r30, r16
    35de:	91 83       	std	Z+1, r25	; 0x01
    35e0:	80 83       	st	Z, r24
    35e2:	1f c0       	rjmp	.+62     	; 0x3622 <Display_MainMenu+0x588>
    35e4:	fe 01       	movw	r30, r28
    35e6:	eb 59       	subi	r30, 0x9B	; 155
    35e8:	ff 4f       	sbci	r31, 0xFF	; 255
    35ea:	80 e9       	ldi	r24, 0x90	; 144
    35ec:	91 e0       	ldi	r25, 0x01	; 1
    35ee:	91 83       	std	Z+1, r25	; 0x01
    35f0:	80 83       	st	Z, r24
    35f2:	fe 01       	movw	r30, r28
    35f4:	eb 59       	subi	r30, 0x9B	; 155
    35f6:	ff 4f       	sbci	r31, 0xFF	; 255
    35f8:	80 81       	ld	r24, Z
    35fa:	91 81       	ldd	r25, Z+1	; 0x01
    35fc:	01 97       	sbiw	r24, 0x01	; 1
    35fe:	f1 f7       	brne	.-4      	; 0x35fc <Display_MainMenu+0x562>
    3600:	fe 01       	movw	r30, r28
    3602:	eb 59       	subi	r30, 0x9B	; 155
    3604:	ff 4f       	sbci	r31, 0xFF	; 255
    3606:	91 83       	std	Z+1, r25	; 0x01
    3608:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    360a:	de 01       	movw	r26, r28
    360c:	a9 59       	subi	r26, 0x99	; 153
    360e:	bf 4f       	sbci	r27, 0xFF	; 255
    3610:	fe 01       	movw	r30, r28
    3612:	e9 59       	subi	r30, 0x99	; 153
    3614:	ff 4f       	sbci	r31, 0xFF	; 255
    3616:	80 81       	ld	r24, Z
    3618:	91 81       	ldd	r25, Z+1	; 0x01
    361a:	01 97       	sbiw	r24, 0x01	; 1
    361c:	11 96       	adiw	r26, 0x01	; 1
    361e:	9c 93       	st	X, r25
    3620:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3622:	fe 01       	movw	r30, r28
    3624:	e9 59       	subi	r30, 0x99	; 153
    3626:	ff 4f       	sbci	r31, 0xFF	; 255
    3628:	80 81       	ld	r24, Z
    362a:	91 81       	ldd	r25, Z+1	; 0x01
    362c:	00 97       	sbiw	r24, 0x00	; 0
    362e:	d1 f6       	brne	.-76     	; 0x35e4 <Display_MainMenu+0x54a>
    3630:	27 c0       	rjmp	.+78     	; 0x3680 <Display_MainMenu+0x5e6>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3632:	8e 01       	movw	r16, r28
    3634:	09 59       	subi	r16, 0x99	; 153
    3636:	1f 4f       	sbci	r17, 0xFF	; 255
    3638:	fe 01       	movw	r30, r28
    363a:	e7 59       	subi	r30, 0x97	; 151
    363c:	ff 4f       	sbci	r31, 0xFF	; 255
    363e:	60 81       	ld	r22, Z
    3640:	71 81       	ldd	r23, Z+1	; 0x01
    3642:	82 81       	ldd	r24, Z+2	; 0x02
    3644:	93 81       	ldd	r25, Z+3	; 0x03
    3646:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    364a:	dc 01       	movw	r26, r24
    364c:	cb 01       	movw	r24, r22
    364e:	f8 01       	movw	r30, r16
    3650:	91 83       	std	Z+1, r25	; 0x01
    3652:	80 83       	st	Z, r24
    3654:	de 01       	movw	r26, r28
    3656:	ad 59       	subi	r26, 0x9D	; 157
    3658:	bf 4f       	sbci	r27, 0xFF	; 255
    365a:	fe 01       	movw	r30, r28
    365c:	e9 59       	subi	r30, 0x99	; 153
    365e:	ff 4f       	sbci	r31, 0xFF	; 255
    3660:	80 81       	ld	r24, Z
    3662:	91 81       	ldd	r25, Z+1	; 0x01
    3664:	8d 93       	st	X+, r24
    3666:	9c 93       	st	X, r25
    3668:	fe 01       	movw	r30, r28
    366a:	ed 59       	subi	r30, 0x9D	; 157
    366c:	ff 4f       	sbci	r31, 0xFF	; 255
    366e:	80 81       	ld	r24, Z
    3670:	91 81       	ldd	r25, Z+1	; 0x01
    3672:	01 97       	sbiw	r24, 0x01	; 1
    3674:	f1 f7       	brne	.-4      	; 0x3672 <Display_MainMenu+0x5d8>
    3676:	fe 01       	movw	r30, r28
    3678:	ed 59       	subi	r30, 0x9D	; 157
    367a:	ff 4f       	sbci	r31, 0xFF	; 255
    367c:	91 83       	std	Z+1, r25	; 0x01
    367e:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_clearScreen();
    3680:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
	LCD_displayString("5-AC");
    3684:	8f e0       	ldi	r24, 0x0F	; 15
    3686:	91 e0       	ldi	r25, 0x01	; 1
    3688:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    368c:	fe 01       	movw	r30, r28
    368e:	e1 5a       	subi	r30, 0xA1	; 161
    3690:	ff 4f       	sbci	r31, 0xFF	; 255
    3692:	80 e0       	ldi	r24, 0x00	; 0
    3694:	90 e0       	ldi	r25, 0x00	; 0
    3696:	aa e7       	ldi	r26, 0x7A	; 122
    3698:	b4 e4       	ldi	r27, 0x44	; 68
    369a:	80 83       	st	Z, r24
    369c:	91 83       	std	Z+1, r25	; 0x01
    369e:	a2 83       	std	Z+2, r26	; 0x02
    36a0:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    36a2:	8e 01       	movw	r16, r28
    36a4:	05 5a       	subi	r16, 0xA5	; 165
    36a6:	1f 4f       	sbci	r17, 0xFF	; 255
    36a8:	fe 01       	movw	r30, r28
    36aa:	e1 5a       	subi	r30, 0xA1	; 161
    36ac:	ff 4f       	sbci	r31, 0xFF	; 255
    36ae:	60 81       	ld	r22, Z
    36b0:	71 81       	ldd	r23, Z+1	; 0x01
    36b2:	82 81       	ldd	r24, Z+2	; 0x02
    36b4:	93 81       	ldd	r25, Z+3	; 0x03
    36b6:	20 e0       	ldi	r18, 0x00	; 0
    36b8:	30 e0       	ldi	r19, 0x00	; 0
    36ba:	4a e7       	ldi	r20, 0x7A	; 122
    36bc:	55 e4       	ldi	r21, 0x45	; 69
    36be:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    36c2:	dc 01       	movw	r26, r24
    36c4:	cb 01       	movw	r24, r22
    36c6:	f8 01       	movw	r30, r16
    36c8:	80 83       	st	Z, r24
    36ca:	91 83       	std	Z+1, r25	; 0x01
    36cc:	a2 83       	std	Z+2, r26	; 0x02
    36ce:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    36d0:	fe 01       	movw	r30, r28
    36d2:	e5 5a       	subi	r30, 0xA5	; 165
    36d4:	ff 4f       	sbci	r31, 0xFF	; 255
    36d6:	60 81       	ld	r22, Z
    36d8:	71 81       	ldd	r23, Z+1	; 0x01
    36da:	82 81       	ldd	r24, Z+2	; 0x02
    36dc:	93 81       	ldd	r25, Z+3	; 0x03
    36de:	20 e0       	ldi	r18, 0x00	; 0
    36e0:	30 e0       	ldi	r19, 0x00	; 0
    36e2:	40 e8       	ldi	r20, 0x80	; 128
    36e4:	5f e3       	ldi	r21, 0x3F	; 63
    36e6:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    36ea:	88 23       	and	r24, r24
    36ec:	44 f4       	brge	.+16     	; 0x36fe <Display_MainMenu+0x664>
		__ticks = 1;
    36ee:	fe 01       	movw	r30, r28
    36f0:	e7 5a       	subi	r30, 0xA7	; 167
    36f2:	ff 4f       	sbci	r31, 0xFF	; 255
    36f4:	81 e0       	ldi	r24, 0x01	; 1
    36f6:	90 e0       	ldi	r25, 0x00	; 0
    36f8:	91 83       	std	Z+1, r25	; 0x01
    36fa:	80 83       	st	Z, r24
    36fc:	64 c0       	rjmp	.+200    	; 0x37c6 <Display_MainMenu+0x72c>
	else if (__tmp > 65535)
    36fe:	fe 01       	movw	r30, r28
    3700:	e5 5a       	subi	r30, 0xA5	; 165
    3702:	ff 4f       	sbci	r31, 0xFF	; 255
    3704:	60 81       	ld	r22, Z
    3706:	71 81       	ldd	r23, Z+1	; 0x01
    3708:	82 81       	ldd	r24, Z+2	; 0x02
    370a:	93 81       	ldd	r25, Z+3	; 0x03
    370c:	20 e0       	ldi	r18, 0x00	; 0
    370e:	3f ef       	ldi	r19, 0xFF	; 255
    3710:	4f e7       	ldi	r20, 0x7F	; 127
    3712:	57 e4       	ldi	r21, 0x47	; 71
    3714:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3718:	18 16       	cp	r1, r24
    371a:	0c f0       	brlt	.+2      	; 0x371e <Display_MainMenu+0x684>
    371c:	43 c0       	rjmp	.+134    	; 0x37a4 <Display_MainMenu+0x70a>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    371e:	fe 01       	movw	r30, r28
    3720:	e1 5a       	subi	r30, 0xA1	; 161
    3722:	ff 4f       	sbci	r31, 0xFF	; 255
    3724:	60 81       	ld	r22, Z
    3726:	71 81       	ldd	r23, Z+1	; 0x01
    3728:	82 81       	ldd	r24, Z+2	; 0x02
    372a:	93 81       	ldd	r25, Z+3	; 0x03
    372c:	20 e0       	ldi	r18, 0x00	; 0
    372e:	30 e0       	ldi	r19, 0x00	; 0
    3730:	40 e2       	ldi	r20, 0x20	; 32
    3732:	51 e4       	ldi	r21, 0x41	; 65
    3734:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3738:	dc 01       	movw	r26, r24
    373a:	cb 01       	movw	r24, r22
    373c:	8e 01       	movw	r16, r28
    373e:	07 5a       	subi	r16, 0xA7	; 167
    3740:	1f 4f       	sbci	r17, 0xFF	; 255
    3742:	bc 01       	movw	r22, r24
    3744:	cd 01       	movw	r24, r26
    3746:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    374a:	dc 01       	movw	r26, r24
    374c:	cb 01       	movw	r24, r22
    374e:	f8 01       	movw	r30, r16
    3750:	91 83       	std	Z+1, r25	; 0x01
    3752:	80 83       	st	Z, r24
    3754:	1f c0       	rjmp	.+62     	; 0x3794 <Display_MainMenu+0x6fa>
    3756:	fe 01       	movw	r30, r28
    3758:	e9 5a       	subi	r30, 0xA9	; 169
    375a:	ff 4f       	sbci	r31, 0xFF	; 255
    375c:	80 e9       	ldi	r24, 0x90	; 144
    375e:	91 e0       	ldi	r25, 0x01	; 1
    3760:	91 83       	std	Z+1, r25	; 0x01
    3762:	80 83       	st	Z, r24
    3764:	fe 01       	movw	r30, r28
    3766:	e9 5a       	subi	r30, 0xA9	; 169
    3768:	ff 4f       	sbci	r31, 0xFF	; 255
    376a:	80 81       	ld	r24, Z
    376c:	91 81       	ldd	r25, Z+1	; 0x01
    376e:	01 97       	sbiw	r24, 0x01	; 1
    3770:	f1 f7       	brne	.-4      	; 0x376e <Display_MainMenu+0x6d4>
    3772:	fe 01       	movw	r30, r28
    3774:	e9 5a       	subi	r30, 0xA9	; 169
    3776:	ff 4f       	sbci	r31, 0xFF	; 255
    3778:	91 83       	std	Z+1, r25	; 0x01
    377a:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    377c:	de 01       	movw	r26, r28
    377e:	a7 5a       	subi	r26, 0xA7	; 167
    3780:	bf 4f       	sbci	r27, 0xFF	; 255
    3782:	fe 01       	movw	r30, r28
    3784:	e7 5a       	subi	r30, 0xA7	; 167
    3786:	ff 4f       	sbci	r31, 0xFF	; 255
    3788:	80 81       	ld	r24, Z
    378a:	91 81       	ldd	r25, Z+1	; 0x01
    378c:	01 97       	sbiw	r24, 0x01	; 1
    378e:	11 96       	adiw	r26, 0x01	; 1
    3790:	9c 93       	st	X, r25
    3792:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3794:	fe 01       	movw	r30, r28
    3796:	e7 5a       	subi	r30, 0xA7	; 167
    3798:	ff 4f       	sbci	r31, 0xFF	; 255
    379a:	80 81       	ld	r24, Z
    379c:	91 81       	ldd	r25, Z+1	; 0x01
    379e:	00 97       	sbiw	r24, 0x00	; 0
    37a0:	d1 f6       	brne	.-76     	; 0x3756 <Display_MainMenu+0x6bc>
    37a2:	27 c0       	rjmp	.+78     	; 0x37f2 <Display_MainMenu+0x758>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    37a4:	8e 01       	movw	r16, r28
    37a6:	07 5a       	subi	r16, 0xA7	; 167
    37a8:	1f 4f       	sbci	r17, 0xFF	; 255
    37aa:	fe 01       	movw	r30, r28
    37ac:	e5 5a       	subi	r30, 0xA5	; 165
    37ae:	ff 4f       	sbci	r31, 0xFF	; 255
    37b0:	60 81       	ld	r22, Z
    37b2:	71 81       	ldd	r23, Z+1	; 0x01
    37b4:	82 81       	ldd	r24, Z+2	; 0x02
    37b6:	93 81       	ldd	r25, Z+3	; 0x03
    37b8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    37bc:	dc 01       	movw	r26, r24
    37be:	cb 01       	movw	r24, r22
    37c0:	f8 01       	movw	r30, r16
    37c2:	91 83       	std	Z+1, r25	; 0x01
    37c4:	80 83       	st	Z, r24
    37c6:	de 01       	movw	r26, r28
    37c8:	ab 5a       	subi	r26, 0xAB	; 171
    37ca:	bf 4f       	sbci	r27, 0xFF	; 255
    37cc:	fe 01       	movw	r30, r28
    37ce:	e7 5a       	subi	r30, 0xA7	; 167
    37d0:	ff 4f       	sbci	r31, 0xFF	; 255
    37d2:	80 81       	ld	r24, Z
    37d4:	91 81       	ldd	r25, Z+1	; 0x01
    37d6:	8d 93       	st	X+, r24
    37d8:	9c 93       	st	X, r25
    37da:	fe 01       	movw	r30, r28
    37dc:	eb 5a       	subi	r30, 0xAB	; 171
    37de:	ff 4f       	sbci	r31, 0xFF	; 255
    37e0:	80 81       	ld	r24, Z
    37e2:	91 81       	ldd	r25, Z+1	; 0x01
    37e4:	01 97       	sbiw	r24, 0x01	; 1
    37e6:	f1 f7       	brne	.-4      	; 0x37e4 <Display_MainMenu+0x74a>
    37e8:	fe 01       	movw	r30, r28
    37ea:	eb 5a       	subi	r30, 0xAB	; 171
    37ec:	ff 4f       	sbci	r31, 0xFF	; 255
    37ee:	91 83       	std	Z+1, r25	; 0x01
    37f0:	80 83       	st	Z, r24
	_delay_ms(1000);
	LCD_clearScreen();
    37f2:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
	LCD_displayString("6-Redisplay Menu");
    37f6:	84 e1       	ldi	r24, 0x14	; 20
    37f8:	91 e0       	ldi	r25, 0x01	; 1
    37fa:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>

	user_input = KEYPAD_getPressedKey();
    37fe:	0e 94 8e 29 	call	0x531c	; 0x531c <KEYPAD_getPressedKey>
    3802:	fe 01       	movw	r30, r28
    3804:	e5 56       	subi	r30, 0x65	; 101
    3806:	ff 4f       	sbci	r31, 0xFF	; 255
    3808:	80 83       	st	Z, r24
	if (user_input == 1) {
    380a:	fe 01       	movw	r30, r28
    380c:	e5 56       	subi	r30, 0x65	; 101
    380e:	ff 4f       	sbci	r31, 0xFF	; 255
    3810:	80 81       	ld	r24, Z
    3812:	81 30       	cpi	r24, 0x01	; 1
    3814:	09 f0       	breq	.+2      	; 0x3818 <Display_MainMenu+0x77e>
    3816:	19 c3       	rjmp	.+1586   	; 0x3e4a <Display_MainMenu+0xdb0>
		LCD_clearScreen();
    3818:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		LCD_displayString("Engine OFF");
    381c:	85 e2       	ldi	r24, 0x25	; 37
    381e:	91 e0       	ldi	r25, 0x01	; 1
    3820:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
		SET_BIT(PORTC,0);
    3824:	a5 e3       	ldi	r26, 0x35	; 53
    3826:	b0 e0       	ldi	r27, 0x00	; 0
    3828:	e5 e3       	ldi	r30, 0x35	; 53
    382a:	f0 e0       	ldi	r31, 0x00	; 0
    382c:	80 81       	ld	r24, Z
    382e:	81 60       	ori	r24, 0x01	; 1
    3830:	8c 93       	st	X, r24
		SET_BIT(PORTC,1);
    3832:	a5 e3       	ldi	r26, 0x35	; 53
    3834:	b0 e0       	ldi	r27, 0x00	; 0
    3836:	e5 e3       	ldi	r30, 0x35	; 53
    3838:	f0 e0       	ldi	r31, 0x00	; 0
    383a:	80 81       	ld	r24, Z
    383c:	82 60       	ori	r24, 0x02	; 2
    383e:	8c 93       	st	X, r24
		SET_BIT(PORTC,2);
    3840:	a5 e3       	ldi	r26, 0x35	; 53
    3842:	b0 e0       	ldi	r27, 0x00	; 0
    3844:	e5 e3       	ldi	r30, 0x35	; 53
    3846:	f0 e0       	ldi	r31, 0x00	; 0
    3848:	80 81       	ld	r24, Z
    384a:	84 60       	ori	r24, 0x04	; 4
    384c:	8c 93       	st	X, r24
    384e:	fe 01       	movw	r30, r28
    3850:	ef 5a       	subi	r30, 0xAF	; 175
    3852:	ff 4f       	sbci	r31, 0xFF	; 255
    3854:	80 e0       	ldi	r24, 0x00	; 0
    3856:	90 e0       	ldi	r25, 0x00	; 0
    3858:	a6 e9       	ldi	r26, 0x96	; 150
    385a:	b3 e4       	ldi	r27, 0x43	; 67
    385c:	80 83       	st	Z, r24
    385e:	91 83       	std	Z+1, r25	; 0x01
    3860:	a2 83       	std	Z+2, r26	; 0x02
    3862:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3864:	8e 01       	movw	r16, r28
    3866:	03 5b       	subi	r16, 0xB3	; 179
    3868:	1f 4f       	sbci	r17, 0xFF	; 255
    386a:	fe 01       	movw	r30, r28
    386c:	ef 5a       	subi	r30, 0xAF	; 175
    386e:	ff 4f       	sbci	r31, 0xFF	; 255
    3870:	60 81       	ld	r22, Z
    3872:	71 81       	ldd	r23, Z+1	; 0x01
    3874:	82 81       	ldd	r24, Z+2	; 0x02
    3876:	93 81       	ldd	r25, Z+3	; 0x03
    3878:	20 e0       	ldi	r18, 0x00	; 0
    387a:	30 e0       	ldi	r19, 0x00	; 0
    387c:	4a e7       	ldi	r20, 0x7A	; 122
    387e:	55 e4       	ldi	r21, 0x45	; 69
    3880:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3884:	dc 01       	movw	r26, r24
    3886:	cb 01       	movw	r24, r22
    3888:	f8 01       	movw	r30, r16
    388a:	80 83       	st	Z, r24
    388c:	91 83       	std	Z+1, r25	; 0x01
    388e:	a2 83       	std	Z+2, r26	; 0x02
    3890:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3892:	fe 01       	movw	r30, r28
    3894:	e3 5b       	subi	r30, 0xB3	; 179
    3896:	ff 4f       	sbci	r31, 0xFF	; 255
    3898:	60 81       	ld	r22, Z
    389a:	71 81       	ldd	r23, Z+1	; 0x01
    389c:	82 81       	ldd	r24, Z+2	; 0x02
    389e:	93 81       	ldd	r25, Z+3	; 0x03
    38a0:	20 e0       	ldi	r18, 0x00	; 0
    38a2:	30 e0       	ldi	r19, 0x00	; 0
    38a4:	40 e8       	ldi	r20, 0x80	; 128
    38a6:	5f e3       	ldi	r21, 0x3F	; 63
    38a8:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    38ac:	88 23       	and	r24, r24
    38ae:	44 f4       	brge	.+16     	; 0x38c0 <Display_MainMenu+0x826>
		__ticks = 1;
    38b0:	fe 01       	movw	r30, r28
    38b2:	e5 5b       	subi	r30, 0xB5	; 181
    38b4:	ff 4f       	sbci	r31, 0xFF	; 255
    38b6:	81 e0       	ldi	r24, 0x01	; 1
    38b8:	90 e0       	ldi	r25, 0x00	; 0
    38ba:	91 83       	std	Z+1, r25	; 0x01
    38bc:	80 83       	st	Z, r24
    38be:	64 c0       	rjmp	.+200    	; 0x3988 <Display_MainMenu+0x8ee>
	else if (__tmp > 65535)
    38c0:	fe 01       	movw	r30, r28
    38c2:	e3 5b       	subi	r30, 0xB3	; 179
    38c4:	ff 4f       	sbci	r31, 0xFF	; 255
    38c6:	60 81       	ld	r22, Z
    38c8:	71 81       	ldd	r23, Z+1	; 0x01
    38ca:	82 81       	ldd	r24, Z+2	; 0x02
    38cc:	93 81       	ldd	r25, Z+3	; 0x03
    38ce:	20 e0       	ldi	r18, 0x00	; 0
    38d0:	3f ef       	ldi	r19, 0xFF	; 255
    38d2:	4f e7       	ldi	r20, 0x7F	; 127
    38d4:	57 e4       	ldi	r21, 0x47	; 71
    38d6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    38da:	18 16       	cp	r1, r24
    38dc:	0c f0       	brlt	.+2      	; 0x38e0 <Display_MainMenu+0x846>
    38de:	43 c0       	rjmp	.+134    	; 0x3966 <Display_MainMenu+0x8cc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    38e0:	fe 01       	movw	r30, r28
    38e2:	ef 5a       	subi	r30, 0xAF	; 175
    38e4:	ff 4f       	sbci	r31, 0xFF	; 255
    38e6:	60 81       	ld	r22, Z
    38e8:	71 81       	ldd	r23, Z+1	; 0x01
    38ea:	82 81       	ldd	r24, Z+2	; 0x02
    38ec:	93 81       	ldd	r25, Z+3	; 0x03
    38ee:	20 e0       	ldi	r18, 0x00	; 0
    38f0:	30 e0       	ldi	r19, 0x00	; 0
    38f2:	40 e2       	ldi	r20, 0x20	; 32
    38f4:	51 e4       	ldi	r21, 0x41	; 65
    38f6:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    38fa:	dc 01       	movw	r26, r24
    38fc:	cb 01       	movw	r24, r22
    38fe:	8e 01       	movw	r16, r28
    3900:	05 5b       	subi	r16, 0xB5	; 181
    3902:	1f 4f       	sbci	r17, 0xFF	; 255
    3904:	bc 01       	movw	r22, r24
    3906:	cd 01       	movw	r24, r26
    3908:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    390c:	dc 01       	movw	r26, r24
    390e:	cb 01       	movw	r24, r22
    3910:	f8 01       	movw	r30, r16
    3912:	91 83       	std	Z+1, r25	; 0x01
    3914:	80 83       	st	Z, r24
    3916:	1f c0       	rjmp	.+62     	; 0x3956 <Display_MainMenu+0x8bc>
    3918:	fe 01       	movw	r30, r28
    391a:	e7 5b       	subi	r30, 0xB7	; 183
    391c:	ff 4f       	sbci	r31, 0xFF	; 255
    391e:	80 e9       	ldi	r24, 0x90	; 144
    3920:	91 e0       	ldi	r25, 0x01	; 1
    3922:	91 83       	std	Z+1, r25	; 0x01
    3924:	80 83       	st	Z, r24
    3926:	fe 01       	movw	r30, r28
    3928:	e7 5b       	subi	r30, 0xB7	; 183
    392a:	ff 4f       	sbci	r31, 0xFF	; 255
    392c:	80 81       	ld	r24, Z
    392e:	91 81       	ldd	r25, Z+1	; 0x01
    3930:	01 97       	sbiw	r24, 0x01	; 1
    3932:	f1 f7       	brne	.-4      	; 0x3930 <Display_MainMenu+0x896>
    3934:	fe 01       	movw	r30, r28
    3936:	e7 5b       	subi	r30, 0xB7	; 183
    3938:	ff 4f       	sbci	r31, 0xFF	; 255
    393a:	91 83       	std	Z+1, r25	; 0x01
    393c:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    393e:	de 01       	movw	r26, r28
    3940:	a5 5b       	subi	r26, 0xB5	; 181
    3942:	bf 4f       	sbci	r27, 0xFF	; 255
    3944:	fe 01       	movw	r30, r28
    3946:	e5 5b       	subi	r30, 0xB5	; 181
    3948:	ff 4f       	sbci	r31, 0xFF	; 255
    394a:	80 81       	ld	r24, Z
    394c:	91 81       	ldd	r25, Z+1	; 0x01
    394e:	01 97       	sbiw	r24, 0x01	; 1
    3950:	11 96       	adiw	r26, 0x01	; 1
    3952:	9c 93       	st	X, r25
    3954:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3956:	fe 01       	movw	r30, r28
    3958:	e5 5b       	subi	r30, 0xB5	; 181
    395a:	ff 4f       	sbci	r31, 0xFF	; 255
    395c:	80 81       	ld	r24, Z
    395e:	91 81       	ldd	r25, Z+1	; 0x01
    3960:	00 97       	sbiw	r24, 0x00	; 0
    3962:	d1 f6       	brne	.-76     	; 0x3918 <Display_MainMenu+0x87e>
    3964:	27 c0       	rjmp	.+78     	; 0x39b4 <Display_MainMenu+0x91a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3966:	8e 01       	movw	r16, r28
    3968:	05 5b       	subi	r16, 0xB5	; 181
    396a:	1f 4f       	sbci	r17, 0xFF	; 255
    396c:	fe 01       	movw	r30, r28
    396e:	e3 5b       	subi	r30, 0xB3	; 179
    3970:	ff 4f       	sbci	r31, 0xFF	; 255
    3972:	60 81       	ld	r22, Z
    3974:	71 81       	ldd	r23, Z+1	; 0x01
    3976:	82 81       	ldd	r24, Z+2	; 0x02
    3978:	93 81       	ldd	r25, Z+3	; 0x03
    397a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    397e:	dc 01       	movw	r26, r24
    3980:	cb 01       	movw	r24, r22
    3982:	f8 01       	movw	r30, r16
    3984:	91 83       	std	Z+1, r25	; 0x01
    3986:	80 83       	st	Z, r24
    3988:	de 01       	movw	r26, r28
    398a:	a9 5b       	subi	r26, 0xB9	; 185
    398c:	bf 4f       	sbci	r27, 0xFF	; 255
    398e:	fe 01       	movw	r30, r28
    3990:	e5 5b       	subi	r30, 0xB5	; 181
    3992:	ff 4f       	sbci	r31, 0xFF	; 255
    3994:	80 81       	ld	r24, Z
    3996:	91 81       	ldd	r25, Z+1	; 0x01
    3998:	8d 93       	st	X+, r24
    399a:	9c 93       	st	X, r25
    399c:	fe 01       	movw	r30, r28
    399e:	e9 5b       	subi	r30, 0xB9	; 185
    39a0:	ff 4f       	sbci	r31, 0xFF	; 255
    39a2:	80 81       	ld	r24, Z
    39a4:	91 81       	ldd	r25, Z+1	; 0x01
    39a6:	01 97       	sbiw	r24, 0x01	; 1
    39a8:	f1 f7       	brne	.-4      	; 0x39a6 <Display_MainMenu+0x90c>
    39aa:	fe 01       	movw	r30, r28
    39ac:	e9 5b       	subi	r30, 0xB9	; 185
    39ae:	ff 4f       	sbci	r31, 0xFF	; 255
    39b0:	91 83       	std	Z+1, r25	; 0x01
    39b2:	80 83       	st	Z, r24
		_delay_ms(300);
		CLR_BIT(PORTC,0);
    39b4:	a5 e3       	ldi	r26, 0x35	; 53
    39b6:	b0 e0       	ldi	r27, 0x00	; 0
    39b8:	e5 e3       	ldi	r30, 0x35	; 53
    39ba:	f0 e0       	ldi	r31, 0x00	; 0
    39bc:	80 81       	ld	r24, Z
    39be:	8e 7f       	andi	r24, 0xFE	; 254
    39c0:	8c 93       	st	X, r24
		CLR_BIT(PORTC,1);
    39c2:	a5 e3       	ldi	r26, 0x35	; 53
    39c4:	b0 e0       	ldi	r27, 0x00	; 0
    39c6:	e5 e3       	ldi	r30, 0x35	; 53
    39c8:	f0 e0       	ldi	r31, 0x00	; 0
    39ca:	80 81       	ld	r24, Z
    39cc:	8d 7f       	andi	r24, 0xFD	; 253
    39ce:	8c 93       	st	X, r24
		CLR_BIT(PORTC,2);
    39d0:	a5 e3       	ldi	r26, 0x35	; 53
    39d2:	b0 e0       	ldi	r27, 0x00	; 0
    39d4:	e5 e3       	ldi	r30, 0x35	; 53
    39d6:	f0 e0       	ldi	r31, 0x00	; 0
    39d8:	80 81       	ld	r24, Z
    39da:	8b 7f       	andi	r24, 0xFB	; 251
    39dc:	8c 93       	st	X, r24
    39de:	fe 01       	movw	r30, r28
    39e0:	ed 5b       	subi	r30, 0xBD	; 189
    39e2:	ff 4f       	sbci	r31, 0xFF	; 255
    39e4:	80 e0       	ldi	r24, 0x00	; 0
    39e6:	90 e0       	ldi	r25, 0x00	; 0
    39e8:	a6 e9       	ldi	r26, 0x96	; 150
    39ea:	b3 e4       	ldi	r27, 0x43	; 67
    39ec:	80 83       	st	Z, r24
    39ee:	91 83       	std	Z+1, r25	; 0x01
    39f0:	a2 83       	std	Z+2, r26	; 0x02
    39f2:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    39f4:	8e 01       	movw	r16, r28
    39f6:	01 5c       	subi	r16, 0xC1	; 193
    39f8:	1f 4f       	sbci	r17, 0xFF	; 255
    39fa:	fe 01       	movw	r30, r28
    39fc:	ed 5b       	subi	r30, 0xBD	; 189
    39fe:	ff 4f       	sbci	r31, 0xFF	; 255
    3a00:	60 81       	ld	r22, Z
    3a02:	71 81       	ldd	r23, Z+1	; 0x01
    3a04:	82 81       	ldd	r24, Z+2	; 0x02
    3a06:	93 81       	ldd	r25, Z+3	; 0x03
    3a08:	20 e0       	ldi	r18, 0x00	; 0
    3a0a:	30 e0       	ldi	r19, 0x00	; 0
    3a0c:	4a e7       	ldi	r20, 0x7A	; 122
    3a0e:	55 e4       	ldi	r21, 0x45	; 69
    3a10:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a14:	dc 01       	movw	r26, r24
    3a16:	cb 01       	movw	r24, r22
    3a18:	f8 01       	movw	r30, r16
    3a1a:	80 83       	st	Z, r24
    3a1c:	91 83       	std	Z+1, r25	; 0x01
    3a1e:	a2 83       	std	Z+2, r26	; 0x02
    3a20:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    3a22:	fe 01       	movw	r30, r28
    3a24:	ff 96       	adiw	r30, 0x3f	; 63
    3a26:	60 81       	ld	r22, Z
    3a28:	71 81       	ldd	r23, Z+1	; 0x01
    3a2a:	82 81       	ldd	r24, Z+2	; 0x02
    3a2c:	93 81       	ldd	r25, Z+3	; 0x03
    3a2e:	20 e0       	ldi	r18, 0x00	; 0
    3a30:	30 e0       	ldi	r19, 0x00	; 0
    3a32:	40 e8       	ldi	r20, 0x80	; 128
    3a34:	5f e3       	ldi	r21, 0x3F	; 63
    3a36:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3a3a:	88 23       	and	r24, r24
    3a3c:	2c f4       	brge	.+10     	; 0x3a48 <Display_MainMenu+0x9ae>
		__ticks = 1;
    3a3e:	81 e0       	ldi	r24, 0x01	; 1
    3a40:	90 e0       	ldi	r25, 0x00	; 0
    3a42:	9e af       	std	Y+62, r25	; 0x3e
    3a44:	8d af       	std	Y+61, r24	; 0x3d
    3a46:	46 c0       	rjmp	.+140    	; 0x3ad4 <Display_MainMenu+0xa3a>
	else if (__tmp > 65535)
    3a48:	fe 01       	movw	r30, r28
    3a4a:	ff 96       	adiw	r30, 0x3f	; 63
    3a4c:	60 81       	ld	r22, Z
    3a4e:	71 81       	ldd	r23, Z+1	; 0x01
    3a50:	82 81       	ldd	r24, Z+2	; 0x02
    3a52:	93 81       	ldd	r25, Z+3	; 0x03
    3a54:	20 e0       	ldi	r18, 0x00	; 0
    3a56:	3f ef       	ldi	r19, 0xFF	; 255
    3a58:	4f e7       	ldi	r20, 0x7F	; 127
    3a5a:	57 e4       	ldi	r21, 0x47	; 71
    3a5c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3a60:	18 16       	cp	r1, r24
    3a62:	64 f5       	brge	.+88     	; 0x3abc <Display_MainMenu+0xa22>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3a64:	fe 01       	movw	r30, r28
    3a66:	ed 5b       	subi	r30, 0xBD	; 189
    3a68:	ff 4f       	sbci	r31, 0xFF	; 255
    3a6a:	60 81       	ld	r22, Z
    3a6c:	71 81       	ldd	r23, Z+1	; 0x01
    3a6e:	82 81       	ldd	r24, Z+2	; 0x02
    3a70:	93 81       	ldd	r25, Z+3	; 0x03
    3a72:	20 e0       	ldi	r18, 0x00	; 0
    3a74:	30 e0       	ldi	r19, 0x00	; 0
    3a76:	40 e2       	ldi	r20, 0x20	; 32
    3a78:	51 e4       	ldi	r21, 0x41	; 65
    3a7a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3a7e:	dc 01       	movw	r26, r24
    3a80:	cb 01       	movw	r24, r22
    3a82:	bc 01       	movw	r22, r24
    3a84:	cd 01       	movw	r24, r26
    3a86:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3a8a:	dc 01       	movw	r26, r24
    3a8c:	cb 01       	movw	r24, r22
    3a8e:	9e af       	std	Y+62, r25	; 0x3e
    3a90:	8d af       	std	Y+61, r24	; 0x3d
    3a92:	0f c0       	rjmp	.+30     	; 0x3ab2 <Display_MainMenu+0xa18>
    3a94:	80 e9       	ldi	r24, 0x90	; 144
    3a96:	91 e0       	ldi	r25, 0x01	; 1
    3a98:	9c af       	std	Y+60, r25	; 0x3c
    3a9a:	8b af       	std	Y+59, r24	; 0x3b
    3a9c:	8b ad       	ldd	r24, Y+59	; 0x3b
    3a9e:	9c ad       	ldd	r25, Y+60	; 0x3c
    3aa0:	01 97       	sbiw	r24, 0x01	; 1
    3aa2:	f1 f7       	brne	.-4      	; 0x3aa0 <Display_MainMenu+0xa06>
    3aa4:	9c af       	std	Y+60, r25	; 0x3c
    3aa6:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3aa8:	8d ad       	ldd	r24, Y+61	; 0x3d
    3aaa:	9e ad       	ldd	r25, Y+62	; 0x3e
    3aac:	01 97       	sbiw	r24, 0x01	; 1
    3aae:	9e af       	std	Y+62, r25	; 0x3e
    3ab0:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3ab2:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ab4:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ab6:	00 97       	sbiw	r24, 0x00	; 0
    3ab8:	69 f7       	brne	.-38     	; 0x3a94 <Display_MainMenu+0x9fa>
    3aba:	16 c0       	rjmp	.+44     	; 0x3ae8 <Display_MainMenu+0xa4e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3abc:	fe 01       	movw	r30, r28
    3abe:	ff 96       	adiw	r30, 0x3f	; 63
    3ac0:	60 81       	ld	r22, Z
    3ac2:	71 81       	ldd	r23, Z+1	; 0x01
    3ac4:	82 81       	ldd	r24, Z+2	; 0x02
    3ac6:	93 81       	ldd	r25, Z+3	; 0x03
    3ac8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3acc:	dc 01       	movw	r26, r24
    3ace:	cb 01       	movw	r24, r22
    3ad0:	9e af       	std	Y+62, r25	; 0x3e
    3ad2:	8d af       	std	Y+61, r24	; 0x3d
    3ad4:	8d ad       	ldd	r24, Y+61	; 0x3d
    3ad6:	9e ad       	ldd	r25, Y+62	; 0x3e
    3ad8:	9a af       	std	Y+58, r25	; 0x3a
    3ada:	89 af       	std	Y+57, r24	; 0x39
    3adc:	89 ad       	ldd	r24, Y+57	; 0x39
    3ade:	9a ad       	ldd	r25, Y+58	; 0x3a
    3ae0:	01 97       	sbiw	r24, 0x01	; 1
    3ae2:	f1 f7       	brne	.-4      	; 0x3ae0 <Display_MainMenu+0xa46>
    3ae4:	9a af       	std	Y+58, r25	; 0x3a
    3ae6:	89 af       	std	Y+57, r24	; 0x39
		_delay_ms(300);
		SET_BIT(PORTC,0);
    3ae8:	a5 e3       	ldi	r26, 0x35	; 53
    3aea:	b0 e0       	ldi	r27, 0x00	; 0
    3aec:	e5 e3       	ldi	r30, 0x35	; 53
    3aee:	f0 e0       	ldi	r31, 0x00	; 0
    3af0:	80 81       	ld	r24, Z
    3af2:	81 60       	ori	r24, 0x01	; 1
    3af4:	8c 93       	st	X, r24
		SET_BIT(PORTC,1);
    3af6:	a5 e3       	ldi	r26, 0x35	; 53
    3af8:	b0 e0       	ldi	r27, 0x00	; 0
    3afa:	e5 e3       	ldi	r30, 0x35	; 53
    3afc:	f0 e0       	ldi	r31, 0x00	; 0
    3afe:	80 81       	ld	r24, Z
    3b00:	82 60       	ori	r24, 0x02	; 2
    3b02:	8c 93       	st	X, r24
		SET_BIT(PORTC,2);
    3b04:	a5 e3       	ldi	r26, 0x35	; 53
    3b06:	b0 e0       	ldi	r27, 0x00	; 0
    3b08:	e5 e3       	ldi	r30, 0x35	; 53
    3b0a:	f0 e0       	ldi	r31, 0x00	; 0
    3b0c:	80 81       	ld	r24, Z
    3b0e:	84 60       	ori	r24, 0x04	; 4
    3b10:	8c 93       	st	X, r24
    3b12:	80 e0       	ldi	r24, 0x00	; 0
    3b14:	90 e0       	ldi	r25, 0x00	; 0
    3b16:	a6 e9       	ldi	r26, 0x96	; 150
    3b18:	b3 e4       	ldi	r27, 0x43	; 67
    3b1a:	8d ab       	std	Y+53, r24	; 0x35
    3b1c:	9e ab       	std	Y+54, r25	; 0x36
    3b1e:	af ab       	std	Y+55, r26	; 0x37
    3b20:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3b22:	6d a9       	ldd	r22, Y+53	; 0x35
    3b24:	7e a9       	ldd	r23, Y+54	; 0x36
    3b26:	8f a9       	ldd	r24, Y+55	; 0x37
    3b28:	98 ad       	ldd	r25, Y+56	; 0x38
    3b2a:	20 e0       	ldi	r18, 0x00	; 0
    3b2c:	30 e0       	ldi	r19, 0x00	; 0
    3b2e:	4a e7       	ldi	r20, 0x7A	; 122
    3b30:	55 e4       	ldi	r21, 0x45	; 69
    3b32:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b36:	dc 01       	movw	r26, r24
    3b38:	cb 01       	movw	r24, r22
    3b3a:	89 ab       	std	Y+49, r24	; 0x31
    3b3c:	9a ab       	std	Y+50, r25	; 0x32
    3b3e:	ab ab       	std	Y+51, r26	; 0x33
    3b40:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    3b42:	69 a9       	ldd	r22, Y+49	; 0x31
    3b44:	7a a9       	ldd	r23, Y+50	; 0x32
    3b46:	8b a9       	ldd	r24, Y+51	; 0x33
    3b48:	9c a9       	ldd	r25, Y+52	; 0x34
    3b4a:	20 e0       	ldi	r18, 0x00	; 0
    3b4c:	30 e0       	ldi	r19, 0x00	; 0
    3b4e:	40 e8       	ldi	r20, 0x80	; 128
    3b50:	5f e3       	ldi	r21, 0x3F	; 63
    3b52:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3b56:	88 23       	and	r24, r24
    3b58:	2c f4       	brge	.+10     	; 0x3b64 <Display_MainMenu+0xaca>
		__ticks = 1;
    3b5a:	81 e0       	ldi	r24, 0x01	; 1
    3b5c:	90 e0       	ldi	r25, 0x00	; 0
    3b5e:	98 ab       	std	Y+48, r25	; 0x30
    3b60:	8f a7       	std	Y+47, r24	; 0x2f
    3b62:	3f c0       	rjmp	.+126    	; 0x3be2 <Display_MainMenu+0xb48>
	else if (__tmp > 65535)
    3b64:	69 a9       	ldd	r22, Y+49	; 0x31
    3b66:	7a a9       	ldd	r23, Y+50	; 0x32
    3b68:	8b a9       	ldd	r24, Y+51	; 0x33
    3b6a:	9c a9       	ldd	r25, Y+52	; 0x34
    3b6c:	20 e0       	ldi	r18, 0x00	; 0
    3b6e:	3f ef       	ldi	r19, 0xFF	; 255
    3b70:	4f e7       	ldi	r20, 0x7F	; 127
    3b72:	57 e4       	ldi	r21, 0x47	; 71
    3b74:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3b78:	18 16       	cp	r1, r24
    3b7a:	4c f5       	brge	.+82     	; 0x3bce <Display_MainMenu+0xb34>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3b7c:	6d a9       	ldd	r22, Y+53	; 0x35
    3b7e:	7e a9       	ldd	r23, Y+54	; 0x36
    3b80:	8f a9       	ldd	r24, Y+55	; 0x37
    3b82:	98 ad       	ldd	r25, Y+56	; 0x38
    3b84:	20 e0       	ldi	r18, 0x00	; 0
    3b86:	30 e0       	ldi	r19, 0x00	; 0
    3b88:	40 e2       	ldi	r20, 0x20	; 32
    3b8a:	51 e4       	ldi	r21, 0x41	; 65
    3b8c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3b90:	dc 01       	movw	r26, r24
    3b92:	cb 01       	movw	r24, r22
    3b94:	bc 01       	movw	r22, r24
    3b96:	cd 01       	movw	r24, r26
    3b98:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3b9c:	dc 01       	movw	r26, r24
    3b9e:	cb 01       	movw	r24, r22
    3ba0:	98 ab       	std	Y+48, r25	; 0x30
    3ba2:	8f a7       	std	Y+47, r24	; 0x2f
    3ba4:	0f c0       	rjmp	.+30     	; 0x3bc4 <Display_MainMenu+0xb2a>
    3ba6:	80 e9       	ldi	r24, 0x90	; 144
    3ba8:	91 e0       	ldi	r25, 0x01	; 1
    3baa:	9e a7       	std	Y+46, r25	; 0x2e
    3bac:	8d a7       	std	Y+45, r24	; 0x2d
    3bae:	8d a5       	ldd	r24, Y+45	; 0x2d
    3bb0:	9e a5       	ldd	r25, Y+46	; 0x2e
    3bb2:	01 97       	sbiw	r24, 0x01	; 1
    3bb4:	f1 f7       	brne	.-4      	; 0x3bb2 <Display_MainMenu+0xb18>
    3bb6:	9e a7       	std	Y+46, r25	; 0x2e
    3bb8:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3bba:	8f a5       	ldd	r24, Y+47	; 0x2f
    3bbc:	98 a9       	ldd	r25, Y+48	; 0x30
    3bbe:	01 97       	sbiw	r24, 0x01	; 1
    3bc0:	98 ab       	std	Y+48, r25	; 0x30
    3bc2:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3bc4:	8f a5       	ldd	r24, Y+47	; 0x2f
    3bc6:	98 a9       	ldd	r25, Y+48	; 0x30
    3bc8:	00 97       	sbiw	r24, 0x00	; 0
    3bca:	69 f7       	brne	.-38     	; 0x3ba6 <Display_MainMenu+0xb0c>
    3bcc:	14 c0       	rjmp	.+40     	; 0x3bf6 <Display_MainMenu+0xb5c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3bce:	69 a9       	ldd	r22, Y+49	; 0x31
    3bd0:	7a a9       	ldd	r23, Y+50	; 0x32
    3bd2:	8b a9       	ldd	r24, Y+51	; 0x33
    3bd4:	9c a9       	ldd	r25, Y+52	; 0x34
    3bd6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3bda:	dc 01       	movw	r26, r24
    3bdc:	cb 01       	movw	r24, r22
    3bde:	98 ab       	std	Y+48, r25	; 0x30
    3be0:	8f a7       	std	Y+47, r24	; 0x2f
    3be2:	8f a5       	ldd	r24, Y+47	; 0x2f
    3be4:	98 a9       	ldd	r25, Y+48	; 0x30
    3be6:	9c a7       	std	Y+44, r25	; 0x2c
    3be8:	8b a7       	std	Y+43, r24	; 0x2b
    3bea:	8b a5       	ldd	r24, Y+43	; 0x2b
    3bec:	9c a5       	ldd	r25, Y+44	; 0x2c
    3bee:	01 97       	sbiw	r24, 0x01	; 1
    3bf0:	f1 f7       	brne	.-4      	; 0x3bee <Display_MainMenu+0xb54>
    3bf2:	9c a7       	std	Y+44, r25	; 0x2c
    3bf4:	8b a7       	std	Y+43, r24	; 0x2b
		_delay_ms(300);
		CLR_BIT(PORTC,0);
    3bf6:	a5 e3       	ldi	r26, 0x35	; 53
    3bf8:	b0 e0       	ldi	r27, 0x00	; 0
    3bfa:	e5 e3       	ldi	r30, 0x35	; 53
    3bfc:	f0 e0       	ldi	r31, 0x00	; 0
    3bfe:	80 81       	ld	r24, Z
    3c00:	8e 7f       	andi	r24, 0xFE	; 254
    3c02:	8c 93       	st	X, r24
		CLR_BIT(PORTC,1);
    3c04:	a5 e3       	ldi	r26, 0x35	; 53
    3c06:	b0 e0       	ldi	r27, 0x00	; 0
    3c08:	e5 e3       	ldi	r30, 0x35	; 53
    3c0a:	f0 e0       	ldi	r31, 0x00	; 0
    3c0c:	80 81       	ld	r24, Z
    3c0e:	8d 7f       	andi	r24, 0xFD	; 253
    3c10:	8c 93       	st	X, r24
		CLR_BIT(PORTC,2);
    3c12:	a5 e3       	ldi	r26, 0x35	; 53
    3c14:	b0 e0       	ldi	r27, 0x00	; 0
    3c16:	e5 e3       	ldi	r30, 0x35	; 53
    3c18:	f0 e0       	ldi	r31, 0x00	; 0
    3c1a:	80 81       	ld	r24, Z
    3c1c:	8b 7f       	andi	r24, 0xFB	; 251
    3c1e:	8c 93       	st	X, r24
    3c20:	80 e0       	ldi	r24, 0x00	; 0
    3c22:	90 e0       	ldi	r25, 0x00	; 0
    3c24:	a6 e9       	ldi	r26, 0x96	; 150
    3c26:	b3 e4       	ldi	r27, 0x43	; 67
    3c28:	8f a3       	std	Y+39, r24	; 0x27
    3c2a:	98 a7       	std	Y+40, r25	; 0x28
    3c2c:	a9 a7       	std	Y+41, r26	; 0x29
    3c2e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3c30:	6f a1       	ldd	r22, Y+39	; 0x27
    3c32:	78 a5       	ldd	r23, Y+40	; 0x28
    3c34:	89 a5       	ldd	r24, Y+41	; 0x29
    3c36:	9a a5       	ldd	r25, Y+42	; 0x2a
    3c38:	20 e0       	ldi	r18, 0x00	; 0
    3c3a:	30 e0       	ldi	r19, 0x00	; 0
    3c3c:	4a e7       	ldi	r20, 0x7A	; 122
    3c3e:	55 e4       	ldi	r21, 0x45	; 69
    3c40:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c44:	dc 01       	movw	r26, r24
    3c46:	cb 01       	movw	r24, r22
    3c48:	8b a3       	std	Y+35, r24	; 0x23
    3c4a:	9c a3       	std	Y+36, r25	; 0x24
    3c4c:	ad a3       	std	Y+37, r26	; 0x25
    3c4e:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    3c50:	6b a1       	ldd	r22, Y+35	; 0x23
    3c52:	7c a1       	ldd	r23, Y+36	; 0x24
    3c54:	8d a1       	ldd	r24, Y+37	; 0x25
    3c56:	9e a1       	ldd	r25, Y+38	; 0x26
    3c58:	20 e0       	ldi	r18, 0x00	; 0
    3c5a:	30 e0       	ldi	r19, 0x00	; 0
    3c5c:	40 e8       	ldi	r20, 0x80	; 128
    3c5e:	5f e3       	ldi	r21, 0x3F	; 63
    3c60:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3c64:	88 23       	and	r24, r24
    3c66:	2c f4       	brge	.+10     	; 0x3c72 <Display_MainMenu+0xbd8>
		__ticks = 1;
    3c68:	81 e0       	ldi	r24, 0x01	; 1
    3c6a:	90 e0       	ldi	r25, 0x00	; 0
    3c6c:	9a a3       	std	Y+34, r25	; 0x22
    3c6e:	89 a3       	std	Y+33, r24	; 0x21
    3c70:	3f c0       	rjmp	.+126    	; 0x3cf0 <Display_MainMenu+0xc56>
	else if (__tmp > 65535)
    3c72:	6b a1       	ldd	r22, Y+35	; 0x23
    3c74:	7c a1       	ldd	r23, Y+36	; 0x24
    3c76:	8d a1       	ldd	r24, Y+37	; 0x25
    3c78:	9e a1       	ldd	r25, Y+38	; 0x26
    3c7a:	20 e0       	ldi	r18, 0x00	; 0
    3c7c:	3f ef       	ldi	r19, 0xFF	; 255
    3c7e:	4f e7       	ldi	r20, 0x7F	; 127
    3c80:	57 e4       	ldi	r21, 0x47	; 71
    3c82:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3c86:	18 16       	cp	r1, r24
    3c88:	4c f5       	brge	.+82     	; 0x3cdc <Display_MainMenu+0xc42>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3c8a:	6f a1       	ldd	r22, Y+39	; 0x27
    3c8c:	78 a5       	ldd	r23, Y+40	; 0x28
    3c8e:	89 a5       	ldd	r24, Y+41	; 0x29
    3c90:	9a a5       	ldd	r25, Y+42	; 0x2a
    3c92:	20 e0       	ldi	r18, 0x00	; 0
    3c94:	30 e0       	ldi	r19, 0x00	; 0
    3c96:	40 e2       	ldi	r20, 0x20	; 32
    3c98:	51 e4       	ldi	r21, 0x41	; 65
    3c9a:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3c9e:	dc 01       	movw	r26, r24
    3ca0:	cb 01       	movw	r24, r22
    3ca2:	bc 01       	movw	r22, r24
    3ca4:	cd 01       	movw	r24, r26
    3ca6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3caa:	dc 01       	movw	r26, r24
    3cac:	cb 01       	movw	r24, r22
    3cae:	9a a3       	std	Y+34, r25	; 0x22
    3cb0:	89 a3       	std	Y+33, r24	; 0x21
    3cb2:	0f c0       	rjmp	.+30     	; 0x3cd2 <Display_MainMenu+0xc38>
    3cb4:	80 e9       	ldi	r24, 0x90	; 144
    3cb6:	91 e0       	ldi	r25, 0x01	; 1
    3cb8:	98 a3       	std	Y+32, r25	; 0x20
    3cba:	8f 8f       	std	Y+31, r24	; 0x1f
    3cbc:	8f 8d       	ldd	r24, Y+31	; 0x1f
    3cbe:	98 a1       	ldd	r25, Y+32	; 0x20
    3cc0:	01 97       	sbiw	r24, 0x01	; 1
    3cc2:	f1 f7       	brne	.-4      	; 0x3cc0 <Display_MainMenu+0xc26>
    3cc4:	98 a3       	std	Y+32, r25	; 0x20
    3cc6:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3cc8:	89 a1       	ldd	r24, Y+33	; 0x21
    3cca:	9a a1       	ldd	r25, Y+34	; 0x22
    3ccc:	01 97       	sbiw	r24, 0x01	; 1
    3cce:	9a a3       	std	Y+34, r25	; 0x22
    3cd0:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3cd2:	89 a1       	ldd	r24, Y+33	; 0x21
    3cd4:	9a a1       	ldd	r25, Y+34	; 0x22
    3cd6:	00 97       	sbiw	r24, 0x00	; 0
    3cd8:	69 f7       	brne	.-38     	; 0x3cb4 <Display_MainMenu+0xc1a>
    3cda:	14 c0       	rjmp	.+40     	; 0x3d04 <Display_MainMenu+0xc6a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3cdc:	6b a1       	ldd	r22, Y+35	; 0x23
    3cde:	7c a1       	ldd	r23, Y+36	; 0x24
    3ce0:	8d a1       	ldd	r24, Y+37	; 0x25
    3ce2:	9e a1       	ldd	r25, Y+38	; 0x26
    3ce4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3ce8:	dc 01       	movw	r26, r24
    3cea:	cb 01       	movw	r24, r22
    3cec:	9a a3       	std	Y+34, r25	; 0x22
    3cee:	89 a3       	std	Y+33, r24	; 0x21
    3cf0:	89 a1       	ldd	r24, Y+33	; 0x21
    3cf2:	9a a1       	ldd	r25, Y+34	; 0x22
    3cf4:	9e 8f       	std	Y+30, r25	; 0x1e
    3cf6:	8d 8f       	std	Y+29, r24	; 0x1d
    3cf8:	8d 8d       	ldd	r24, Y+29	; 0x1d
    3cfa:	9e 8d       	ldd	r25, Y+30	; 0x1e
    3cfc:	01 97       	sbiw	r24, 0x01	; 1
    3cfe:	f1 f7       	brne	.-4      	; 0x3cfc <Display_MainMenu+0xc62>
    3d00:	9e 8f       	std	Y+30, r25	; 0x1e
    3d02:	8d 8f       	std	Y+29, r24	; 0x1d
		_delay_ms(300);
		SET_BIT(PORTC,0);
    3d04:	a5 e3       	ldi	r26, 0x35	; 53
    3d06:	b0 e0       	ldi	r27, 0x00	; 0
    3d08:	e5 e3       	ldi	r30, 0x35	; 53
    3d0a:	f0 e0       	ldi	r31, 0x00	; 0
    3d0c:	80 81       	ld	r24, Z
    3d0e:	81 60       	ori	r24, 0x01	; 1
    3d10:	8c 93       	st	X, r24
		SET_BIT(PORTC,1);
    3d12:	a5 e3       	ldi	r26, 0x35	; 53
    3d14:	b0 e0       	ldi	r27, 0x00	; 0
    3d16:	e5 e3       	ldi	r30, 0x35	; 53
    3d18:	f0 e0       	ldi	r31, 0x00	; 0
    3d1a:	80 81       	ld	r24, Z
    3d1c:	82 60       	ori	r24, 0x02	; 2
    3d1e:	8c 93       	st	X, r24
		SET_BIT(PORTC,2);
    3d20:	a5 e3       	ldi	r26, 0x35	; 53
    3d22:	b0 e0       	ldi	r27, 0x00	; 0
    3d24:	e5 e3       	ldi	r30, 0x35	; 53
    3d26:	f0 e0       	ldi	r31, 0x00	; 0
    3d28:	80 81       	ld	r24, Z
    3d2a:	84 60       	ori	r24, 0x04	; 4
    3d2c:	8c 93       	st	X, r24
    3d2e:	80 e0       	ldi	r24, 0x00	; 0
    3d30:	90 e0       	ldi	r25, 0x00	; 0
    3d32:	a6 e9       	ldi	r26, 0x96	; 150
    3d34:	b3 e4       	ldi	r27, 0x43	; 67
    3d36:	89 8f       	std	Y+25, r24	; 0x19
    3d38:	9a 8f       	std	Y+26, r25	; 0x1a
    3d3a:	ab 8f       	std	Y+27, r26	; 0x1b
    3d3c:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3d3e:	69 8d       	ldd	r22, Y+25	; 0x19
    3d40:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3d42:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d44:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3d46:	20 e0       	ldi	r18, 0x00	; 0
    3d48:	30 e0       	ldi	r19, 0x00	; 0
    3d4a:	4a e7       	ldi	r20, 0x7A	; 122
    3d4c:	55 e4       	ldi	r21, 0x45	; 69
    3d4e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3d52:	dc 01       	movw	r26, r24
    3d54:	cb 01       	movw	r24, r22
    3d56:	8d 8b       	std	Y+21, r24	; 0x15
    3d58:	9e 8b       	std	Y+22, r25	; 0x16
    3d5a:	af 8b       	std	Y+23, r26	; 0x17
    3d5c:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    3d5e:	6d 89       	ldd	r22, Y+21	; 0x15
    3d60:	7e 89       	ldd	r23, Y+22	; 0x16
    3d62:	8f 89       	ldd	r24, Y+23	; 0x17
    3d64:	98 8d       	ldd	r25, Y+24	; 0x18
    3d66:	20 e0       	ldi	r18, 0x00	; 0
    3d68:	30 e0       	ldi	r19, 0x00	; 0
    3d6a:	40 e8       	ldi	r20, 0x80	; 128
    3d6c:	5f e3       	ldi	r21, 0x3F	; 63
    3d6e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3d72:	88 23       	and	r24, r24
    3d74:	2c f4       	brge	.+10     	; 0x3d80 <Display_MainMenu+0xce6>
		__ticks = 1;
    3d76:	81 e0       	ldi	r24, 0x01	; 1
    3d78:	90 e0       	ldi	r25, 0x00	; 0
    3d7a:	9c 8b       	std	Y+20, r25	; 0x14
    3d7c:	8b 8b       	std	Y+19, r24	; 0x13
    3d7e:	3f c0       	rjmp	.+126    	; 0x3dfe <Display_MainMenu+0xd64>
	else if (__tmp > 65535)
    3d80:	6d 89       	ldd	r22, Y+21	; 0x15
    3d82:	7e 89       	ldd	r23, Y+22	; 0x16
    3d84:	8f 89       	ldd	r24, Y+23	; 0x17
    3d86:	98 8d       	ldd	r25, Y+24	; 0x18
    3d88:	20 e0       	ldi	r18, 0x00	; 0
    3d8a:	3f ef       	ldi	r19, 0xFF	; 255
    3d8c:	4f e7       	ldi	r20, 0x7F	; 127
    3d8e:	57 e4       	ldi	r21, 0x47	; 71
    3d90:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3d94:	18 16       	cp	r1, r24
    3d96:	4c f5       	brge	.+82     	; 0x3dea <Display_MainMenu+0xd50>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3d98:	69 8d       	ldd	r22, Y+25	; 0x19
    3d9a:	7a 8d       	ldd	r23, Y+26	; 0x1a
    3d9c:	8b 8d       	ldd	r24, Y+27	; 0x1b
    3d9e:	9c 8d       	ldd	r25, Y+28	; 0x1c
    3da0:	20 e0       	ldi	r18, 0x00	; 0
    3da2:	30 e0       	ldi	r19, 0x00	; 0
    3da4:	40 e2       	ldi	r20, 0x20	; 32
    3da6:	51 e4       	ldi	r21, 0x41	; 65
    3da8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3dac:	dc 01       	movw	r26, r24
    3dae:	cb 01       	movw	r24, r22
    3db0:	bc 01       	movw	r22, r24
    3db2:	cd 01       	movw	r24, r26
    3db4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3db8:	dc 01       	movw	r26, r24
    3dba:	cb 01       	movw	r24, r22
    3dbc:	9c 8b       	std	Y+20, r25	; 0x14
    3dbe:	8b 8b       	std	Y+19, r24	; 0x13
    3dc0:	0f c0       	rjmp	.+30     	; 0x3de0 <Display_MainMenu+0xd46>
    3dc2:	80 e9       	ldi	r24, 0x90	; 144
    3dc4:	91 e0       	ldi	r25, 0x01	; 1
    3dc6:	9a 8b       	std	Y+18, r25	; 0x12
    3dc8:	89 8b       	std	Y+17, r24	; 0x11
    3dca:	89 89       	ldd	r24, Y+17	; 0x11
    3dcc:	9a 89       	ldd	r25, Y+18	; 0x12
    3dce:	01 97       	sbiw	r24, 0x01	; 1
    3dd0:	f1 f7       	brne	.-4      	; 0x3dce <Display_MainMenu+0xd34>
    3dd2:	9a 8b       	std	Y+18, r25	; 0x12
    3dd4:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3dd6:	8b 89       	ldd	r24, Y+19	; 0x13
    3dd8:	9c 89       	ldd	r25, Y+20	; 0x14
    3dda:	01 97       	sbiw	r24, 0x01	; 1
    3ddc:	9c 8b       	std	Y+20, r25	; 0x14
    3dde:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3de0:	8b 89       	ldd	r24, Y+19	; 0x13
    3de2:	9c 89       	ldd	r25, Y+20	; 0x14
    3de4:	00 97       	sbiw	r24, 0x00	; 0
    3de6:	69 f7       	brne	.-38     	; 0x3dc2 <Display_MainMenu+0xd28>
    3de8:	14 c0       	rjmp	.+40     	; 0x3e12 <Display_MainMenu+0xd78>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3dea:	6d 89       	ldd	r22, Y+21	; 0x15
    3dec:	7e 89       	ldd	r23, Y+22	; 0x16
    3dee:	8f 89       	ldd	r24, Y+23	; 0x17
    3df0:	98 8d       	ldd	r25, Y+24	; 0x18
    3df2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3df6:	dc 01       	movw	r26, r24
    3df8:	cb 01       	movw	r24, r22
    3dfa:	9c 8b       	std	Y+20, r25	; 0x14
    3dfc:	8b 8b       	std	Y+19, r24	; 0x13
    3dfe:	8b 89       	ldd	r24, Y+19	; 0x13
    3e00:	9c 89       	ldd	r25, Y+20	; 0x14
    3e02:	98 8b       	std	Y+16, r25	; 0x10
    3e04:	8f 87       	std	Y+15, r24	; 0x0f
    3e06:	8f 85       	ldd	r24, Y+15	; 0x0f
    3e08:	98 89       	ldd	r25, Y+16	; 0x10
    3e0a:	01 97       	sbiw	r24, 0x01	; 1
    3e0c:	f1 f7       	brne	.-4      	; 0x3e0a <Display_MainMenu+0xd70>
    3e0e:	98 8b       	std	Y+16, r25	; 0x10
    3e10:	8f 87       	std	Y+15, r24	; 0x0f
		_delay_ms(300);
		CLR_BIT(PORTC,0);
    3e12:	a5 e3       	ldi	r26, 0x35	; 53
    3e14:	b0 e0       	ldi	r27, 0x00	; 0
    3e16:	e5 e3       	ldi	r30, 0x35	; 53
    3e18:	f0 e0       	ldi	r31, 0x00	; 0
    3e1a:	80 81       	ld	r24, Z
    3e1c:	8e 7f       	andi	r24, 0xFE	; 254
    3e1e:	8c 93       	st	X, r24
		CLR_BIT(PORTC,1);
    3e20:	a5 e3       	ldi	r26, 0x35	; 53
    3e22:	b0 e0       	ldi	r27, 0x00	; 0
    3e24:	e5 e3       	ldi	r30, 0x35	; 53
    3e26:	f0 e0       	ldi	r31, 0x00	; 0
    3e28:	80 81       	ld	r24, Z
    3e2a:	8d 7f       	andi	r24, 0xFD	; 253
    3e2c:	8c 93       	st	X, r24
		CLR_BIT(PORTC,2);
    3e2e:	a5 e3       	ldi	r26, 0x35	; 53
    3e30:	b0 e0       	ldi	r27, 0x00	; 0
    3e32:	e5 e3       	ldi	r30, 0x35	; 53
    3e34:	f0 e0       	ldi	r31, 0x00	; 0
    3e36:	80 81       	ld	r24, Z
    3e38:	8b 7f       	andi	r24, 0xFB	; 251
    3e3a:	8c 93       	st	X, r24
		LCD_clearScreen();
    3e3c:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = START_MENU; // Return to start menu
    3e40:	fe 01       	movw	r30, r28
    3e42:	e4 56       	subi	r30, 0x64	; 100
    3e44:	ff 4f       	sbci	r31, 0xFF	; 255
    3e46:	10 82       	st	Z, r1
    3e48:	c5 c0       	rjmp	.+394    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else if (user_input == 2) {
    3e4a:	fe 01       	movw	r30, r28
    3e4c:	e5 56       	subi	r30, 0x65	; 101
    3e4e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e50:	80 81       	ld	r24, Z
    3e52:	82 30       	cpi	r24, 0x02	; 2
    3e54:	41 f4       	brne	.+16     	; 0x3e66 <Display_MainMenu+0xdcc>
		LCD_clearScreen();
    3e56:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = LEFT_SIGNAL_STATE;
    3e5a:	fe 01       	movw	r30, r28
    3e5c:	e4 56       	subi	r30, 0x64	; 100
    3e5e:	ff 4f       	sbci	r31, 0xFF	; 255
    3e60:	82 e0       	ldi	r24, 0x02	; 2
    3e62:	80 83       	st	Z, r24
    3e64:	b7 c0       	rjmp	.+366    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else if (user_input == 3) {
    3e66:	fe 01       	movw	r30, r28
    3e68:	e5 56       	subi	r30, 0x65	; 101
    3e6a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e6c:	80 81       	ld	r24, Z
    3e6e:	83 30       	cpi	r24, 0x03	; 3
    3e70:	41 f4       	brne	.+16     	; 0x3e82 <Display_MainMenu+0xde8>
		LCD_clearScreen();
    3e72:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = RIGHT_SIGNAL_STATE;
    3e76:	fe 01       	movw	r30, r28
    3e78:	e4 56       	subi	r30, 0x64	; 100
    3e7a:	ff 4f       	sbci	r31, 0xFF	; 255
    3e7c:	83 e0       	ldi	r24, 0x03	; 3
    3e7e:	80 83       	st	Z, r24
    3e80:	a9 c0       	rjmp	.+338    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else if (user_input == 4) {
    3e82:	fe 01       	movw	r30, r28
    3e84:	e5 56       	subi	r30, 0x65	; 101
    3e86:	ff 4f       	sbci	r31, 0xFF	; 255
    3e88:	80 81       	ld	r24, Z
    3e8a:	84 30       	cpi	r24, 0x04	; 4
    3e8c:	41 f4       	brne	.+16     	; 0x3e9e <Display_MainMenu+0xe04>
		LCD_clearScreen();
    3e8e:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = WAITING_SIGNAL_STATE;
    3e92:	fe 01       	movw	r30, r28
    3e94:	e4 56       	subi	r30, 0x64	; 100
    3e96:	ff 4f       	sbci	r31, 0xFF	; 255
    3e98:	84 e0       	ldi	r24, 0x04	; 4
    3e9a:	80 83       	st	Z, r24
    3e9c:	9b c0       	rjmp	.+310    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else if (user_input == 5) {
    3e9e:	fe 01       	movw	r30, r28
    3ea0:	e5 56       	subi	r30, 0x65	; 101
    3ea2:	ff 4f       	sbci	r31, 0xFF	; 255
    3ea4:	80 81       	ld	r24, Z
    3ea6:	85 30       	cpi	r24, 0x05	; 5
    3ea8:	41 f4       	brne	.+16     	; 0x3eba <Display_MainMenu+0xe20>
		LCD_clearScreen();
    3eaa:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = AC_MODE_STATE;
    3eae:	fe 01       	movw	r30, r28
    3eb0:	e4 56       	subi	r30, 0x64	; 100
    3eb2:	ff 4f       	sbci	r31, 0xFF	; 255
    3eb4:	85 e0       	ldi	r24, 0x05	; 5
    3eb6:	80 83       	st	Z, r24
    3eb8:	8d c0       	rjmp	.+282    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else if (user_input == 6) {
    3eba:	fe 01       	movw	r30, r28
    3ebc:	e5 56       	subi	r30, 0x65	; 101
    3ebe:	ff 4f       	sbci	r31, 0xFF	; 255
    3ec0:	80 81       	ld	r24, Z
    3ec2:	86 30       	cpi	r24, 0x06	; 6
    3ec4:	41 f4       	brne	.+16     	; 0x3ed6 <Display_MainMenu+0xe3c>
		LCD_clearScreen();
    3ec6:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = MAIN_MENU; // Re-display the menu
    3eca:	fe 01       	movw	r30, r28
    3ecc:	e4 56       	subi	r30, 0x64	; 100
    3ece:	ff 4f       	sbci	r31, 0xFF	; 255
    3ed0:	81 e0       	ldi	r24, 0x01	; 1
    3ed2:	80 83       	st	Z, r24
    3ed4:	7f c0       	rjmp	.+254    	; 0x3fd4 <Display_MainMenu+0xf3a>
	} else {
		LCD_clearScreen();
    3ed6:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		LCD_displayString("Undefined Input");
    3eda:	80 e3       	ldi	r24, 0x30	; 48
    3edc:	91 e0       	ldi	r25, 0x01	; 1
    3ede:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
    3ee2:	80 e0       	ldi	r24, 0x00	; 0
    3ee4:	90 e0       	ldi	r25, 0x00	; 0
    3ee6:	aa ef       	ldi	r26, 0xFA	; 250
    3ee8:	b3 e4       	ldi	r27, 0x43	; 67
    3eea:	8b 87       	std	Y+11, r24	; 0x0b
    3eec:	9c 87       	std	Y+12, r25	; 0x0c
    3eee:	ad 87       	std	Y+13, r26	; 0x0d
    3ef0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    3ef2:	6b 85       	ldd	r22, Y+11	; 0x0b
    3ef4:	7c 85       	ldd	r23, Y+12	; 0x0c
    3ef6:	8d 85       	ldd	r24, Y+13	; 0x0d
    3ef8:	9e 85       	ldd	r25, Y+14	; 0x0e
    3efa:	20 e0       	ldi	r18, 0x00	; 0
    3efc:	30 e0       	ldi	r19, 0x00	; 0
    3efe:	4a e7       	ldi	r20, 0x7A	; 122
    3f00:	55 e4       	ldi	r21, 0x45	; 69
    3f02:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f06:	dc 01       	movw	r26, r24
    3f08:	cb 01       	movw	r24, r22
    3f0a:	8f 83       	std	Y+7, r24	; 0x07
    3f0c:	98 87       	std	Y+8, r25	; 0x08
    3f0e:	a9 87       	std	Y+9, r26	; 0x09
    3f10:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    3f12:	6f 81       	ldd	r22, Y+7	; 0x07
    3f14:	78 85       	ldd	r23, Y+8	; 0x08
    3f16:	89 85       	ldd	r24, Y+9	; 0x09
    3f18:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f1a:	20 e0       	ldi	r18, 0x00	; 0
    3f1c:	30 e0       	ldi	r19, 0x00	; 0
    3f1e:	40 e8       	ldi	r20, 0x80	; 128
    3f20:	5f e3       	ldi	r21, 0x3F	; 63
    3f22:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    3f26:	88 23       	and	r24, r24
    3f28:	2c f4       	brge	.+10     	; 0x3f34 <Display_MainMenu+0xe9a>
		__ticks = 1;
    3f2a:	81 e0       	ldi	r24, 0x01	; 1
    3f2c:	90 e0       	ldi	r25, 0x00	; 0
    3f2e:	9e 83       	std	Y+6, r25	; 0x06
    3f30:	8d 83       	std	Y+5, r24	; 0x05
    3f32:	3f c0       	rjmp	.+126    	; 0x3fb2 <Display_MainMenu+0xf18>
	else if (__tmp > 65535)
    3f34:	6f 81       	ldd	r22, Y+7	; 0x07
    3f36:	78 85       	ldd	r23, Y+8	; 0x08
    3f38:	89 85       	ldd	r24, Y+9	; 0x09
    3f3a:	9a 85       	ldd	r25, Y+10	; 0x0a
    3f3c:	20 e0       	ldi	r18, 0x00	; 0
    3f3e:	3f ef       	ldi	r19, 0xFF	; 255
    3f40:	4f e7       	ldi	r20, 0x7F	; 127
    3f42:	57 e4       	ldi	r21, 0x47	; 71
    3f44:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    3f48:	18 16       	cp	r1, r24
    3f4a:	4c f5       	brge	.+82     	; 0x3f9e <Display_MainMenu+0xf04>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    3f4c:	6b 85       	ldd	r22, Y+11	; 0x0b
    3f4e:	7c 85       	ldd	r23, Y+12	; 0x0c
    3f50:	8d 85       	ldd	r24, Y+13	; 0x0d
    3f52:	9e 85       	ldd	r25, Y+14	; 0x0e
    3f54:	20 e0       	ldi	r18, 0x00	; 0
    3f56:	30 e0       	ldi	r19, 0x00	; 0
    3f58:	40 e2       	ldi	r20, 0x20	; 32
    3f5a:	51 e4       	ldi	r21, 0x41	; 65
    3f5c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    3f60:	dc 01       	movw	r26, r24
    3f62:	cb 01       	movw	r24, r22
    3f64:	bc 01       	movw	r22, r24
    3f66:	cd 01       	movw	r24, r26
    3f68:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3f6c:	dc 01       	movw	r26, r24
    3f6e:	cb 01       	movw	r24, r22
    3f70:	9e 83       	std	Y+6, r25	; 0x06
    3f72:	8d 83       	std	Y+5, r24	; 0x05
    3f74:	0f c0       	rjmp	.+30     	; 0x3f94 <Display_MainMenu+0xefa>
    3f76:	80 e9       	ldi	r24, 0x90	; 144
    3f78:	91 e0       	ldi	r25, 0x01	; 1
    3f7a:	9c 83       	std	Y+4, r25	; 0x04
    3f7c:	8b 83       	std	Y+3, r24	; 0x03
    3f7e:	8b 81       	ldd	r24, Y+3	; 0x03
    3f80:	9c 81       	ldd	r25, Y+4	; 0x04
    3f82:	01 97       	sbiw	r24, 0x01	; 1
    3f84:	f1 f7       	brne	.-4      	; 0x3f82 <Display_MainMenu+0xee8>
    3f86:	9c 83       	std	Y+4, r25	; 0x04
    3f88:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    3f8a:	8d 81       	ldd	r24, Y+5	; 0x05
    3f8c:	9e 81       	ldd	r25, Y+6	; 0x06
    3f8e:	01 97       	sbiw	r24, 0x01	; 1
    3f90:	9e 83       	std	Y+6, r25	; 0x06
    3f92:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    3f94:	8d 81       	ldd	r24, Y+5	; 0x05
    3f96:	9e 81       	ldd	r25, Y+6	; 0x06
    3f98:	00 97       	sbiw	r24, 0x00	; 0
    3f9a:	69 f7       	brne	.-38     	; 0x3f76 <Display_MainMenu+0xedc>
    3f9c:	14 c0       	rjmp	.+40     	; 0x3fc6 <Display_MainMenu+0xf2c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    3f9e:	6f 81       	ldd	r22, Y+7	; 0x07
    3fa0:	78 85       	ldd	r23, Y+8	; 0x08
    3fa2:	89 85       	ldd	r24, Y+9	; 0x09
    3fa4:	9a 85       	ldd	r25, Y+10	; 0x0a
    3fa6:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    3faa:	dc 01       	movw	r26, r24
    3fac:	cb 01       	movw	r24, r22
    3fae:	9e 83       	std	Y+6, r25	; 0x06
    3fb0:	8d 83       	std	Y+5, r24	; 0x05
    3fb2:	8d 81       	ldd	r24, Y+5	; 0x05
    3fb4:	9e 81       	ldd	r25, Y+6	; 0x06
    3fb6:	9a 83       	std	Y+2, r25	; 0x02
    3fb8:	89 83       	std	Y+1, r24	; 0x01
    3fba:	89 81       	ldd	r24, Y+1	; 0x01
    3fbc:	9a 81       	ldd	r25, Y+2	; 0x02
    3fbe:	01 97       	sbiw	r24, 0x01	; 1
    3fc0:	f1 f7       	brne	.-4      	; 0x3fbe <Display_MainMenu+0xf24>
    3fc2:	9a 83       	std	Y+2, r25	; 0x02
    3fc4:	89 83       	std	Y+1, r24	; 0x01
		_delay_ms(500);
		LCD_clearScreen();
    3fc6:	0e 94 84 29 	call	0x5308	; 0x5308 <LCD_clearScreen>
		state = MAIN_MENU; // Re-display the menu
    3fca:	fe 01       	movw	r30, r28
    3fcc:	e4 56       	subi	r30, 0x64	; 100
    3fce:	ff 4f       	sbci	r31, 0xFF	; 255
    3fd0:	81 e0       	ldi	r24, 0x01	; 1
    3fd2:	80 83       	st	Z, r24
	}
	return state;
    3fd4:	fe 01       	movw	r30, r28
    3fd6:	e4 56       	subi	r30, 0x64	; 100
    3fd8:	ff 4f       	sbci	r31, 0xFF	; 255
    3fda:	80 81       	ld	r24, Z
}
    3fdc:	c4 56       	subi	r28, 0x64	; 100
    3fde:	df 4f       	sbci	r29, 0xFF	; 255
    3fe0:	0f b6       	in	r0, 0x3f	; 63
    3fe2:	f8 94       	cli
    3fe4:	de bf       	out	0x3e, r29	; 62
    3fe6:	0f be       	out	0x3f, r0	; 63
    3fe8:	cd bf       	out	0x3d, r28	; 61
    3fea:	cf 91       	pop	r28
    3fec:	df 91       	pop	r29
    3fee:	1f 91       	pop	r17
    3ff0:	0f 91       	pop	r16
    3ff2:	08 95       	ret

00003ff4 <LCD_init>:

/*******************************************************************************
 *                             LCD Functions                                   *
 *******************************************************************************/
void LCD_init(void)
{
    3ff4:	df 93       	push	r29
    3ff6:	cf 93       	push	r28
    3ff8:	cd b7       	in	r28, 0x3d	; 61
    3ffa:	de b7       	in	r29, 0x3e	; 62
    3ffc:	2e 97       	sbiw	r28, 0x0e	; 14
    3ffe:	0f b6       	in	r0, 0x3f	; 63
    4000:	f8 94       	cli
    4002:	de bf       	out	0x3e, r29	; 62
    4004:	0f be       	out	0x3f, r0	; 63
    4006:	cd bf       	out	0x3d, r28	; 61
	/* Configure the direction for RS and E pins as output pins */
	SET_BIT(DDRA,1);
    4008:	aa e3       	ldi	r26, 0x3A	; 58
    400a:	b0 e0       	ldi	r27, 0x00	; 0
    400c:	ea e3       	ldi	r30, 0x3A	; 58
    400e:	f0 e0       	ldi	r31, 0x00	; 0
    4010:	80 81       	ld	r24, Z
    4012:	82 60       	ori	r24, 0x02	; 2
    4014:	8c 93       	st	X, r24
	SET_BIT(DDRA,2);
    4016:	aa e3       	ldi	r26, 0x3A	; 58
    4018:	b0 e0       	ldi	r27, 0x00	; 0
    401a:	ea e3       	ldi	r30, 0x3A	; 58
    401c:	f0 e0       	ldi	r31, 0x00	; 0
    401e:	80 81       	ld	r24, Z
    4020:	84 60       	ori	r24, 0x04	; 4
    4022:	8c 93       	st	X, r24
    4024:	80 e0       	ldi	r24, 0x00	; 0
    4026:	90 e0       	ldi	r25, 0x00	; 0
    4028:	a0 ea       	ldi	r26, 0xA0	; 160
    402a:	b1 e4       	ldi	r27, 0x41	; 65
    402c:	8b 87       	std	Y+11, r24	; 0x0b
    402e:	9c 87       	std	Y+12, r25	; 0x0c
    4030:	ad 87       	std	Y+13, r26	; 0x0d
    4032:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4034:	6b 85       	ldd	r22, Y+11	; 0x0b
    4036:	7c 85       	ldd	r23, Y+12	; 0x0c
    4038:	8d 85       	ldd	r24, Y+13	; 0x0d
    403a:	9e 85       	ldd	r25, Y+14	; 0x0e
    403c:	20 e0       	ldi	r18, 0x00	; 0
    403e:	30 e0       	ldi	r19, 0x00	; 0
    4040:	4a e7       	ldi	r20, 0x7A	; 122
    4042:	55 e4       	ldi	r21, 0x45	; 69
    4044:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4048:	dc 01       	movw	r26, r24
    404a:	cb 01       	movw	r24, r22
    404c:	8f 83       	std	Y+7, r24	; 0x07
    404e:	98 87       	std	Y+8, r25	; 0x08
    4050:	a9 87       	std	Y+9, r26	; 0x09
    4052:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    4054:	6f 81       	ldd	r22, Y+7	; 0x07
    4056:	78 85       	ldd	r23, Y+8	; 0x08
    4058:	89 85       	ldd	r24, Y+9	; 0x09
    405a:	9a 85       	ldd	r25, Y+10	; 0x0a
    405c:	20 e0       	ldi	r18, 0x00	; 0
    405e:	30 e0       	ldi	r19, 0x00	; 0
    4060:	40 e8       	ldi	r20, 0x80	; 128
    4062:	5f e3       	ldi	r21, 0x3F	; 63
    4064:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4068:	88 23       	and	r24, r24
    406a:	2c f4       	brge	.+10     	; 0x4076 <LCD_init+0x82>
		__ticks = 1;
    406c:	81 e0       	ldi	r24, 0x01	; 1
    406e:	90 e0       	ldi	r25, 0x00	; 0
    4070:	9e 83       	std	Y+6, r25	; 0x06
    4072:	8d 83       	std	Y+5, r24	; 0x05
    4074:	3f c0       	rjmp	.+126    	; 0x40f4 <LCD_init+0x100>
	else if (__tmp > 65535)
    4076:	6f 81       	ldd	r22, Y+7	; 0x07
    4078:	78 85       	ldd	r23, Y+8	; 0x08
    407a:	89 85       	ldd	r24, Y+9	; 0x09
    407c:	9a 85       	ldd	r25, Y+10	; 0x0a
    407e:	20 e0       	ldi	r18, 0x00	; 0
    4080:	3f ef       	ldi	r19, 0xFF	; 255
    4082:	4f e7       	ldi	r20, 0x7F	; 127
    4084:	57 e4       	ldi	r21, 0x47	; 71
    4086:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    408a:	18 16       	cp	r1, r24
    408c:	4c f5       	brge	.+82     	; 0x40e0 <LCD_init+0xec>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    408e:	6b 85       	ldd	r22, Y+11	; 0x0b
    4090:	7c 85       	ldd	r23, Y+12	; 0x0c
    4092:	8d 85       	ldd	r24, Y+13	; 0x0d
    4094:	9e 85       	ldd	r25, Y+14	; 0x0e
    4096:	20 e0       	ldi	r18, 0x00	; 0
    4098:	30 e0       	ldi	r19, 0x00	; 0
    409a:	40 e2       	ldi	r20, 0x20	; 32
    409c:	51 e4       	ldi	r21, 0x41	; 65
    409e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    40a2:	dc 01       	movw	r26, r24
    40a4:	cb 01       	movw	r24, r22
    40a6:	bc 01       	movw	r22, r24
    40a8:	cd 01       	movw	r24, r26
    40aa:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40ae:	dc 01       	movw	r26, r24
    40b0:	cb 01       	movw	r24, r22
    40b2:	9e 83       	std	Y+6, r25	; 0x06
    40b4:	8d 83       	std	Y+5, r24	; 0x05
    40b6:	0f c0       	rjmp	.+30     	; 0x40d6 <LCD_init+0xe2>
    40b8:	80 e9       	ldi	r24, 0x90	; 144
    40ba:	91 e0       	ldi	r25, 0x01	; 1
    40bc:	9c 83       	std	Y+4, r25	; 0x04
    40be:	8b 83       	std	Y+3, r24	; 0x03
    40c0:	8b 81       	ldd	r24, Y+3	; 0x03
    40c2:	9c 81       	ldd	r25, Y+4	; 0x04
    40c4:	01 97       	sbiw	r24, 0x01	; 1
    40c6:	f1 f7       	brne	.-4      	; 0x40c4 <LCD_init+0xd0>
    40c8:	9c 83       	std	Y+4, r25	; 0x04
    40ca:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    40cc:	8d 81       	ldd	r24, Y+5	; 0x05
    40ce:	9e 81       	ldd	r25, Y+6	; 0x06
    40d0:	01 97       	sbiw	r24, 0x01	; 1
    40d2:	9e 83       	std	Y+6, r25	; 0x06
    40d4:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    40d6:	8d 81       	ldd	r24, Y+5	; 0x05
    40d8:	9e 81       	ldd	r25, Y+6	; 0x06
    40da:	00 97       	sbiw	r24, 0x00	; 0
    40dc:	69 f7       	brne	.-38     	; 0x40b8 <LCD_init+0xc4>
    40de:	14 c0       	rjmp	.+40     	; 0x4108 <LCD_init+0x114>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    40e0:	6f 81       	ldd	r22, Y+7	; 0x07
    40e2:	78 85       	ldd	r23, Y+8	; 0x08
    40e4:	89 85       	ldd	r24, Y+9	; 0x09
    40e6:	9a 85       	ldd	r25, Y+10	; 0x0a
    40e8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    40ec:	dc 01       	movw	r26, r24
    40ee:	cb 01       	movw	r24, r22
    40f0:	9e 83       	std	Y+6, r25	; 0x06
    40f2:	8d 83       	std	Y+5, r24	; 0x05
    40f4:	8d 81       	ldd	r24, Y+5	; 0x05
    40f6:	9e 81       	ldd	r25, Y+6	; 0x06
    40f8:	9a 83       	std	Y+2, r25	; 0x02
    40fa:	89 83       	std	Y+1, r24	; 0x01
    40fc:	89 81       	ldd	r24, Y+1	; 0x01
    40fe:	9a 81       	ldd	r25, Y+2	; 0x02
    4100:	01 97       	sbiw	r24, 0x01	; 1
    4102:	f1 f7       	brne	.-4      	; 0x4100 <LCD_init+0x10c>
    4104:	9a 83       	std	Y+2, r25	; 0x02
    4106:	89 83       	std	Y+1, r24	; 0x01

	_delay_ms(20);		/* LCD Power ON delay always > 15ms */

	/* Configure 4 pins in the data port as output pins PA3 --> PA6 */
	DDRA |= (1<<3) | (1<<4) | (1<<5) | (1<<6);
    4108:	aa e3       	ldi	r26, 0x3A	; 58
    410a:	b0 e0       	ldi	r27, 0x00	; 0
    410c:	ea e3       	ldi	r30, 0x3A	; 58
    410e:	f0 e0       	ldi	r31, 0x00	; 0
    4110:	80 81       	ld	r24, Z
    4112:	88 67       	ori	r24, 0x78	; 120
    4114:	8c 93       	st	X, r24

	/* Send for 4 bit initialization of LCD  */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT1);
    4116:	83 e3       	ldi	r24, 0x33	; 51
    4118:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE_INIT2);
    411c:	82 e3       	ldi	r24, 0x32	; 50
    411e:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>

	/* use 2-lines LCD + 4-bits Data Mode + 5*7 dot display Mode */
	LCD_sendCommand(LCD_TWO_LINES_FOUR_BITS_MODE);
    4122:	88 e2       	ldi	r24, 0x28	; 40
    4124:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
	LCD_sendCommand(LCD_CURSOR_OFF); /* cursor off */
    4128:	8c e0       	ldi	r24, 0x0C	; 12
    412a:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* clear LCD at the beginning */
    412e:	81 e0       	ldi	r24, 0x01	; 1
    4130:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
}
    4134:	2e 96       	adiw	r28, 0x0e	; 14
    4136:	0f b6       	in	r0, 0x3f	; 63
    4138:	f8 94       	cli
    413a:	de bf       	out	0x3e, r29	; 62
    413c:	0f be       	out	0x3f, r0	; 63
    413e:	cd bf       	out	0x3d, r28	; 61
    4140:	cf 91       	pop	r28
    4142:	df 91       	pop	r29
    4144:	08 95       	ret

00004146 <LCD_sendCommand>:

void LCD_sendCommand(unsigned char command)
{
    4146:	0f 93       	push	r16
    4148:	1f 93       	push	r17
    414a:	df 93       	push	r29
    414c:	cf 93       	push	r28
    414e:	cd b7       	in	r28, 0x3d	; 61
    4150:	de b7       	in	r29, 0x3e	; 62
    4152:	c3 56       	subi	r28, 0x63	; 99
    4154:	d0 40       	sbci	r29, 0x00	; 0
    4156:	0f b6       	in	r0, 0x3f	; 63
    4158:	f8 94       	cli
    415a:	de bf       	out	0x3e, r29	; 62
    415c:	0f be       	out	0x3f, r0	; 63
    415e:	cd bf       	out	0x3d, r28	; 61
    4160:	fe 01       	movw	r30, r28
    4162:	ed 59       	subi	r30, 0x9D	; 157
    4164:	ff 4f       	sbci	r31, 0xFF	; 255
    4166:	80 83       	st	Z, r24
	CLR_BIT(PORTA,1); /* Instruction Mode RS=0 */
    4168:	ab e3       	ldi	r26, 0x3B	; 59
    416a:	b0 e0       	ldi	r27, 0x00	; 0
    416c:	eb e3       	ldi	r30, 0x3B	; 59
    416e:	f0 e0       	ldi	r31, 0x00	; 0
    4170:	80 81       	ld	r24, Z
    4172:	8d 7f       	andi	r24, 0xFD	; 253
    4174:	8c 93       	st	X, r24
    4176:	fe 01       	movw	r30, r28
    4178:	e1 5a       	subi	r30, 0xA1	; 161
    417a:	ff 4f       	sbci	r31, 0xFF	; 255
    417c:	80 e0       	ldi	r24, 0x00	; 0
    417e:	90 e0       	ldi	r25, 0x00	; 0
    4180:	a0 e8       	ldi	r26, 0x80	; 128
    4182:	bf e3       	ldi	r27, 0x3F	; 63
    4184:	80 83       	st	Z, r24
    4186:	91 83       	std	Z+1, r25	; 0x01
    4188:	a2 83       	std	Z+2, r26	; 0x02
    418a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    418c:	8e 01       	movw	r16, r28
    418e:	05 5a       	subi	r16, 0xA5	; 165
    4190:	1f 4f       	sbci	r17, 0xFF	; 255
    4192:	fe 01       	movw	r30, r28
    4194:	e1 5a       	subi	r30, 0xA1	; 161
    4196:	ff 4f       	sbci	r31, 0xFF	; 255
    4198:	60 81       	ld	r22, Z
    419a:	71 81       	ldd	r23, Z+1	; 0x01
    419c:	82 81       	ldd	r24, Z+2	; 0x02
    419e:	93 81       	ldd	r25, Z+3	; 0x03
    41a0:	20 e0       	ldi	r18, 0x00	; 0
    41a2:	30 e0       	ldi	r19, 0x00	; 0
    41a4:	4a e7       	ldi	r20, 0x7A	; 122
    41a6:	55 e4       	ldi	r21, 0x45	; 69
    41a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    41ac:	dc 01       	movw	r26, r24
    41ae:	cb 01       	movw	r24, r22
    41b0:	f8 01       	movw	r30, r16
    41b2:	80 83       	st	Z, r24
    41b4:	91 83       	std	Z+1, r25	; 0x01
    41b6:	a2 83       	std	Z+2, r26	; 0x02
    41b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    41ba:	fe 01       	movw	r30, r28
    41bc:	e5 5a       	subi	r30, 0xA5	; 165
    41be:	ff 4f       	sbci	r31, 0xFF	; 255
    41c0:	60 81       	ld	r22, Z
    41c2:	71 81       	ldd	r23, Z+1	; 0x01
    41c4:	82 81       	ldd	r24, Z+2	; 0x02
    41c6:	93 81       	ldd	r25, Z+3	; 0x03
    41c8:	20 e0       	ldi	r18, 0x00	; 0
    41ca:	30 e0       	ldi	r19, 0x00	; 0
    41cc:	40 e8       	ldi	r20, 0x80	; 128
    41ce:	5f e3       	ldi	r21, 0x3F	; 63
    41d0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    41d4:	88 23       	and	r24, r24
    41d6:	44 f4       	brge	.+16     	; 0x41e8 <LCD_sendCommand+0xa2>
		__ticks = 1;
    41d8:	fe 01       	movw	r30, r28
    41da:	e7 5a       	subi	r30, 0xA7	; 167
    41dc:	ff 4f       	sbci	r31, 0xFF	; 255
    41de:	81 e0       	ldi	r24, 0x01	; 1
    41e0:	90 e0       	ldi	r25, 0x00	; 0
    41e2:	91 83       	std	Z+1, r25	; 0x01
    41e4:	80 83       	st	Z, r24
    41e6:	64 c0       	rjmp	.+200    	; 0x42b0 <LCD_sendCommand+0x16a>
	else if (__tmp > 65535)
    41e8:	fe 01       	movw	r30, r28
    41ea:	e5 5a       	subi	r30, 0xA5	; 165
    41ec:	ff 4f       	sbci	r31, 0xFF	; 255
    41ee:	60 81       	ld	r22, Z
    41f0:	71 81       	ldd	r23, Z+1	; 0x01
    41f2:	82 81       	ldd	r24, Z+2	; 0x02
    41f4:	93 81       	ldd	r25, Z+3	; 0x03
    41f6:	20 e0       	ldi	r18, 0x00	; 0
    41f8:	3f ef       	ldi	r19, 0xFF	; 255
    41fa:	4f e7       	ldi	r20, 0x7F	; 127
    41fc:	57 e4       	ldi	r21, 0x47	; 71
    41fe:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4202:	18 16       	cp	r1, r24
    4204:	0c f0       	brlt	.+2      	; 0x4208 <LCD_sendCommand+0xc2>
    4206:	43 c0       	rjmp	.+134    	; 0x428e <LCD_sendCommand+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4208:	fe 01       	movw	r30, r28
    420a:	e1 5a       	subi	r30, 0xA1	; 161
    420c:	ff 4f       	sbci	r31, 0xFF	; 255
    420e:	60 81       	ld	r22, Z
    4210:	71 81       	ldd	r23, Z+1	; 0x01
    4212:	82 81       	ldd	r24, Z+2	; 0x02
    4214:	93 81       	ldd	r25, Z+3	; 0x03
    4216:	20 e0       	ldi	r18, 0x00	; 0
    4218:	30 e0       	ldi	r19, 0x00	; 0
    421a:	40 e2       	ldi	r20, 0x20	; 32
    421c:	51 e4       	ldi	r21, 0x41	; 65
    421e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4222:	dc 01       	movw	r26, r24
    4224:	cb 01       	movw	r24, r22
    4226:	8e 01       	movw	r16, r28
    4228:	07 5a       	subi	r16, 0xA7	; 167
    422a:	1f 4f       	sbci	r17, 0xFF	; 255
    422c:	bc 01       	movw	r22, r24
    422e:	cd 01       	movw	r24, r26
    4230:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4234:	dc 01       	movw	r26, r24
    4236:	cb 01       	movw	r24, r22
    4238:	f8 01       	movw	r30, r16
    423a:	91 83       	std	Z+1, r25	; 0x01
    423c:	80 83       	st	Z, r24
    423e:	1f c0       	rjmp	.+62     	; 0x427e <LCD_sendCommand+0x138>
    4240:	fe 01       	movw	r30, r28
    4242:	e9 5a       	subi	r30, 0xA9	; 169
    4244:	ff 4f       	sbci	r31, 0xFF	; 255
    4246:	80 e9       	ldi	r24, 0x90	; 144
    4248:	91 e0       	ldi	r25, 0x01	; 1
    424a:	91 83       	std	Z+1, r25	; 0x01
    424c:	80 83       	st	Z, r24
    424e:	fe 01       	movw	r30, r28
    4250:	e9 5a       	subi	r30, 0xA9	; 169
    4252:	ff 4f       	sbci	r31, 0xFF	; 255
    4254:	80 81       	ld	r24, Z
    4256:	91 81       	ldd	r25, Z+1	; 0x01
    4258:	01 97       	sbiw	r24, 0x01	; 1
    425a:	f1 f7       	brne	.-4      	; 0x4258 <LCD_sendCommand+0x112>
    425c:	fe 01       	movw	r30, r28
    425e:	e9 5a       	subi	r30, 0xA9	; 169
    4260:	ff 4f       	sbci	r31, 0xFF	; 255
    4262:	91 83       	std	Z+1, r25	; 0x01
    4264:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4266:	de 01       	movw	r26, r28
    4268:	a7 5a       	subi	r26, 0xA7	; 167
    426a:	bf 4f       	sbci	r27, 0xFF	; 255
    426c:	fe 01       	movw	r30, r28
    426e:	e7 5a       	subi	r30, 0xA7	; 167
    4270:	ff 4f       	sbci	r31, 0xFF	; 255
    4272:	80 81       	ld	r24, Z
    4274:	91 81       	ldd	r25, Z+1	; 0x01
    4276:	01 97       	sbiw	r24, 0x01	; 1
    4278:	11 96       	adiw	r26, 0x01	; 1
    427a:	9c 93       	st	X, r25
    427c:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    427e:	fe 01       	movw	r30, r28
    4280:	e7 5a       	subi	r30, 0xA7	; 167
    4282:	ff 4f       	sbci	r31, 0xFF	; 255
    4284:	80 81       	ld	r24, Z
    4286:	91 81       	ldd	r25, Z+1	; 0x01
    4288:	00 97       	sbiw	r24, 0x00	; 0
    428a:	d1 f6       	brne	.-76     	; 0x4240 <LCD_sendCommand+0xfa>
    428c:	27 c0       	rjmp	.+78     	; 0x42dc <LCD_sendCommand+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    428e:	8e 01       	movw	r16, r28
    4290:	07 5a       	subi	r16, 0xA7	; 167
    4292:	1f 4f       	sbci	r17, 0xFF	; 255
    4294:	fe 01       	movw	r30, r28
    4296:	e5 5a       	subi	r30, 0xA5	; 165
    4298:	ff 4f       	sbci	r31, 0xFF	; 255
    429a:	60 81       	ld	r22, Z
    429c:	71 81       	ldd	r23, Z+1	; 0x01
    429e:	82 81       	ldd	r24, Z+2	; 0x02
    42a0:	93 81       	ldd	r25, Z+3	; 0x03
    42a2:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    42a6:	dc 01       	movw	r26, r24
    42a8:	cb 01       	movw	r24, r22
    42aa:	f8 01       	movw	r30, r16
    42ac:	91 83       	std	Z+1, r25	; 0x01
    42ae:	80 83       	st	Z, r24
    42b0:	de 01       	movw	r26, r28
    42b2:	ab 5a       	subi	r26, 0xAB	; 171
    42b4:	bf 4f       	sbci	r27, 0xFF	; 255
    42b6:	fe 01       	movw	r30, r28
    42b8:	e7 5a       	subi	r30, 0xA7	; 167
    42ba:	ff 4f       	sbci	r31, 0xFF	; 255
    42bc:	80 81       	ld	r24, Z
    42be:	91 81       	ldd	r25, Z+1	; 0x01
    42c0:	8d 93       	st	X+, r24
    42c2:	9c 93       	st	X, r25
    42c4:	fe 01       	movw	r30, r28
    42c6:	eb 5a       	subi	r30, 0xAB	; 171
    42c8:	ff 4f       	sbci	r31, 0xFF	; 255
    42ca:	80 81       	ld	r24, Z
    42cc:	91 81       	ldd	r25, Z+1	; 0x01
    42ce:	01 97       	sbiw	r24, 0x01	; 1
    42d0:	f1 f7       	brne	.-4      	; 0x42ce <LCD_sendCommand+0x188>
    42d2:	fe 01       	movw	r30, r28
    42d4:	eb 5a       	subi	r30, 0xAB	; 171
    42d6:	ff 4f       	sbci	r31, 0xFF	; 255
    42d8:	91 83       	std	Z+1, r25	; 0x01
    42da:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	SET_BIT(PORTA,2); /* Enable LCD E=1 */
    42dc:	ab e3       	ldi	r26, 0x3B	; 59
    42de:	b0 e0       	ldi	r27, 0x00	; 0
    42e0:	eb e3       	ldi	r30, 0x3B	; 59
    42e2:	f0 e0       	ldi	r31, 0x00	; 0
    42e4:	80 81       	ld	r24, Z
    42e6:	84 60       	ori	r24, 0x04	; 4
    42e8:	8c 93       	st	X, r24
    42ea:	fe 01       	movw	r30, r28
    42ec:	ef 5a       	subi	r30, 0xAF	; 175
    42ee:	ff 4f       	sbci	r31, 0xFF	; 255
    42f0:	80 e0       	ldi	r24, 0x00	; 0
    42f2:	90 e0       	ldi	r25, 0x00	; 0
    42f4:	a0 e8       	ldi	r26, 0x80	; 128
    42f6:	bf e3       	ldi	r27, 0x3F	; 63
    42f8:	80 83       	st	Z, r24
    42fa:	91 83       	std	Z+1, r25	; 0x01
    42fc:	a2 83       	std	Z+2, r26	; 0x02
    42fe:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4300:	8e 01       	movw	r16, r28
    4302:	03 5b       	subi	r16, 0xB3	; 179
    4304:	1f 4f       	sbci	r17, 0xFF	; 255
    4306:	fe 01       	movw	r30, r28
    4308:	ef 5a       	subi	r30, 0xAF	; 175
    430a:	ff 4f       	sbci	r31, 0xFF	; 255
    430c:	60 81       	ld	r22, Z
    430e:	71 81       	ldd	r23, Z+1	; 0x01
    4310:	82 81       	ldd	r24, Z+2	; 0x02
    4312:	93 81       	ldd	r25, Z+3	; 0x03
    4314:	20 e0       	ldi	r18, 0x00	; 0
    4316:	30 e0       	ldi	r19, 0x00	; 0
    4318:	4a e7       	ldi	r20, 0x7A	; 122
    431a:	55 e4       	ldi	r21, 0x45	; 69
    431c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4320:	dc 01       	movw	r26, r24
    4322:	cb 01       	movw	r24, r22
    4324:	f8 01       	movw	r30, r16
    4326:	80 83       	st	Z, r24
    4328:	91 83       	std	Z+1, r25	; 0x01
    432a:	a2 83       	std	Z+2, r26	; 0x02
    432c:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    432e:	fe 01       	movw	r30, r28
    4330:	e3 5b       	subi	r30, 0xB3	; 179
    4332:	ff 4f       	sbci	r31, 0xFF	; 255
    4334:	60 81       	ld	r22, Z
    4336:	71 81       	ldd	r23, Z+1	; 0x01
    4338:	82 81       	ldd	r24, Z+2	; 0x02
    433a:	93 81       	ldd	r25, Z+3	; 0x03
    433c:	20 e0       	ldi	r18, 0x00	; 0
    433e:	30 e0       	ldi	r19, 0x00	; 0
    4340:	40 e8       	ldi	r20, 0x80	; 128
    4342:	5f e3       	ldi	r21, 0x3F	; 63
    4344:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4348:	88 23       	and	r24, r24
    434a:	44 f4       	brge	.+16     	; 0x435c <LCD_sendCommand+0x216>
		__ticks = 1;
    434c:	fe 01       	movw	r30, r28
    434e:	e5 5b       	subi	r30, 0xB5	; 181
    4350:	ff 4f       	sbci	r31, 0xFF	; 255
    4352:	81 e0       	ldi	r24, 0x01	; 1
    4354:	90 e0       	ldi	r25, 0x00	; 0
    4356:	91 83       	std	Z+1, r25	; 0x01
    4358:	80 83       	st	Z, r24
    435a:	64 c0       	rjmp	.+200    	; 0x4424 <LCD_sendCommand+0x2de>
	else if (__tmp > 65535)
    435c:	fe 01       	movw	r30, r28
    435e:	e3 5b       	subi	r30, 0xB3	; 179
    4360:	ff 4f       	sbci	r31, 0xFF	; 255
    4362:	60 81       	ld	r22, Z
    4364:	71 81       	ldd	r23, Z+1	; 0x01
    4366:	82 81       	ldd	r24, Z+2	; 0x02
    4368:	93 81       	ldd	r25, Z+3	; 0x03
    436a:	20 e0       	ldi	r18, 0x00	; 0
    436c:	3f ef       	ldi	r19, 0xFF	; 255
    436e:	4f e7       	ldi	r20, 0x7F	; 127
    4370:	57 e4       	ldi	r21, 0x47	; 71
    4372:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4376:	18 16       	cp	r1, r24
    4378:	0c f0       	brlt	.+2      	; 0x437c <LCD_sendCommand+0x236>
    437a:	43 c0       	rjmp	.+134    	; 0x4402 <LCD_sendCommand+0x2bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    437c:	fe 01       	movw	r30, r28
    437e:	ef 5a       	subi	r30, 0xAF	; 175
    4380:	ff 4f       	sbci	r31, 0xFF	; 255
    4382:	60 81       	ld	r22, Z
    4384:	71 81       	ldd	r23, Z+1	; 0x01
    4386:	82 81       	ldd	r24, Z+2	; 0x02
    4388:	93 81       	ldd	r25, Z+3	; 0x03
    438a:	20 e0       	ldi	r18, 0x00	; 0
    438c:	30 e0       	ldi	r19, 0x00	; 0
    438e:	40 e2       	ldi	r20, 0x20	; 32
    4390:	51 e4       	ldi	r21, 0x41	; 65
    4392:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4396:	dc 01       	movw	r26, r24
    4398:	cb 01       	movw	r24, r22
    439a:	8e 01       	movw	r16, r28
    439c:	05 5b       	subi	r16, 0xB5	; 181
    439e:	1f 4f       	sbci	r17, 0xFF	; 255
    43a0:	bc 01       	movw	r22, r24
    43a2:	cd 01       	movw	r24, r26
    43a4:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    43a8:	dc 01       	movw	r26, r24
    43aa:	cb 01       	movw	r24, r22
    43ac:	f8 01       	movw	r30, r16
    43ae:	91 83       	std	Z+1, r25	; 0x01
    43b0:	80 83       	st	Z, r24
    43b2:	1f c0       	rjmp	.+62     	; 0x43f2 <LCD_sendCommand+0x2ac>
    43b4:	fe 01       	movw	r30, r28
    43b6:	e7 5b       	subi	r30, 0xB7	; 183
    43b8:	ff 4f       	sbci	r31, 0xFF	; 255
    43ba:	80 e9       	ldi	r24, 0x90	; 144
    43bc:	91 e0       	ldi	r25, 0x01	; 1
    43be:	91 83       	std	Z+1, r25	; 0x01
    43c0:	80 83       	st	Z, r24
    43c2:	fe 01       	movw	r30, r28
    43c4:	e7 5b       	subi	r30, 0xB7	; 183
    43c6:	ff 4f       	sbci	r31, 0xFF	; 255
    43c8:	80 81       	ld	r24, Z
    43ca:	91 81       	ldd	r25, Z+1	; 0x01
    43cc:	01 97       	sbiw	r24, 0x01	; 1
    43ce:	f1 f7       	brne	.-4      	; 0x43cc <LCD_sendCommand+0x286>
    43d0:	fe 01       	movw	r30, r28
    43d2:	e7 5b       	subi	r30, 0xB7	; 183
    43d4:	ff 4f       	sbci	r31, 0xFF	; 255
    43d6:	91 83       	std	Z+1, r25	; 0x01
    43d8:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    43da:	de 01       	movw	r26, r28
    43dc:	a5 5b       	subi	r26, 0xB5	; 181
    43de:	bf 4f       	sbci	r27, 0xFF	; 255
    43e0:	fe 01       	movw	r30, r28
    43e2:	e5 5b       	subi	r30, 0xB5	; 181
    43e4:	ff 4f       	sbci	r31, 0xFF	; 255
    43e6:	80 81       	ld	r24, Z
    43e8:	91 81       	ldd	r25, Z+1	; 0x01
    43ea:	01 97       	sbiw	r24, 0x01	; 1
    43ec:	11 96       	adiw	r26, 0x01	; 1
    43ee:	9c 93       	st	X, r25
    43f0:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    43f2:	fe 01       	movw	r30, r28
    43f4:	e5 5b       	subi	r30, 0xB5	; 181
    43f6:	ff 4f       	sbci	r31, 0xFF	; 255
    43f8:	80 81       	ld	r24, Z
    43fa:	91 81       	ldd	r25, Z+1	; 0x01
    43fc:	00 97       	sbiw	r24, 0x00	; 0
    43fe:	d1 f6       	brne	.-76     	; 0x43b4 <LCD_sendCommand+0x26e>
    4400:	27 c0       	rjmp	.+78     	; 0x4450 <LCD_sendCommand+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4402:	8e 01       	movw	r16, r28
    4404:	05 5b       	subi	r16, 0xB5	; 181
    4406:	1f 4f       	sbci	r17, 0xFF	; 255
    4408:	fe 01       	movw	r30, r28
    440a:	e3 5b       	subi	r30, 0xB3	; 179
    440c:	ff 4f       	sbci	r31, 0xFF	; 255
    440e:	60 81       	ld	r22, Z
    4410:	71 81       	ldd	r23, Z+1	; 0x01
    4412:	82 81       	ldd	r24, Z+2	; 0x02
    4414:	93 81       	ldd	r25, Z+3	; 0x03
    4416:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    441a:	dc 01       	movw	r26, r24
    441c:	cb 01       	movw	r24, r22
    441e:	f8 01       	movw	r30, r16
    4420:	91 83       	std	Z+1, r25	; 0x01
    4422:	80 83       	st	Z, r24
    4424:	de 01       	movw	r26, r28
    4426:	a9 5b       	subi	r26, 0xB9	; 185
    4428:	bf 4f       	sbci	r27, 0xFF	; 255
    442a:	fe 01       	movw	r30, r28
    442c:	e5 5b       	subi	r30, 0xB5	; 181
    442e:	ff 4f       	sbci	r31, 0xFF	; 255
    4430:	80 81       	ld	r24, Z
    4432:	91 81       	ldd	r25, Z+1	; 0x01
    4434:	8d 93       	st	X+, r24
    4436:	9c 93       	st	X, r25
    4438:	fe 01       	movw	r30, r28
    443a:	e9 5b       	subi	r30, 0xB9	; 185
    443c:	ff 4f       	sbci	r31, 0xFF	; 255
    443e:	80 81       	ld	r24, Z
    4440:	91 81       	ldd	r25, Z+1	; 0x01
    4442:	01 97       	sbiw	r24, 0x01	; 1
    4444:	f1 f7       	brne	.-4      	; 0x4442 <LCD_sendCommand+0x2fc>
    4446:	fe 01       	movw	r30, r28
    4448:	e9 5b       	subi	r30, 0xB9	; 185
    444a:	ff 4f       	sbci	r31, 0xFF	; 255
    444c:	91 83       	std	Z+1, r25	; 0x01
    444e:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	/* Send first 4 bits in command(Most Significant four bits) on PA3 --> PA6   */
	PORTA = (PORTA & 0x87) | ((command & 0xF0) >> 1);
    4450:	ab e3       	ldi	r26, 0x3B	; 59
    4452:	b0 e0       	ldi	r27, 0x00	; 0
    4454:	eb e3       	ldi	r30, 0x3B	; 59
    4456:	f0 e0       	ldi	r31, 0x00	; 0
    4458:	80 81       	ld	r24, Z
    445a:	28 2f       	mov	r18, r24
    445c:	27 78       	andi	r18, 0x87	; 135
    445e:	fe 01       	movw	r30, r28
    4460:	ed 59       	subi	r30, 0x9D	; 157
    4462:	ff 4f       	sbci	r31, 0xFF	; 255
    4464:	80 81       	ld	r24, Z
    4466:	88 2f       	mov	r24, r24
    4468:	90 e0       	ldi	r25, 0x00	; 0
    446a:	80 7f       	andi	r24, 0xF0	; 240
    446c:	90 70       	andi	r25, 0x00	; 0
    446e:	95 95       	asr	r25
    4470:	87 95       	ror	r24
    4472:	82 2b       	or	r24, r18
    4474:	8c 93       	st	X, r24
    4476:	fe 01       	movw	r30, r28
    4478:	ed 5b       	subi	r30, 0xBD	; 189
    447a:	ff 4f       	sbci	r31, 0xFF	; 255
    447c:	80 e0       	ldi	r24, 0x00	; 0
    447e:	90 e0       	ldi	r25, 0x00	; 0
    4480:	a0 e8       	ldi	r26, 0x80	; 128
    4482:	bf e3       	ldi	r27, 0x3F	; 63
    4484:	80 83       	st	Z, r24
    4486:	91 83       	std	Z+1, r25	; 0x01
    4488:	a2 83       	std	Z+2, r26	; 0x02
    448a:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    448c:	8e 01       	movw	r16, r28
    448e:	01 5c       	subi	r16, 0xC1	; 193
    4490:	1f 4f       	sbci	r17, 0xFF	; 255
    4492:	fe 01       	movw	r30, r28
    4494:	ed 5b       	subi	r30, 0xBD	; 189
    4496:	ff 4f       	sbci	r31, 0xFF	; 255
    4498:	60 81       	ld	r22, Z
    449a:	71 81       	ldd	r23, Z+1	; 0x01
    449c:	82 81       	ldd	r24, Z+2	; 0x02
    449e:	93 81       	ldd	r25, Z+3	; 0x03
    44a0:	20 e0       	ldi	r18, 0x00	; 0
    44a2:	30 e0       	ldi	r19, 0x00	; 0
    44a4:	4a e7       	ldi	r20, 0x7A	; 122
    44a6:	55 e4       	ldi	r21, 0x45	; 69
    44a8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    44ac:	dc 01       	movw	r26, r24
    44ae:	cb 01       	movw	r24, r22
    44b0:	f8 01       	movw	r30, r16
    44b2:	80 83       	st	Z, r24
    44b4:	91 83       	std	Z+1, r25	; 0x01
    44b6:	a2 83       	std	Z+2, r26	; 0x02
    44b8:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    44ba:	fe 01       	movw	r30, r28
    44bc:	ff 96       	adiw	r30, 0x3f	; 63
    44be:	60 81       	ld	r22, Z
    44c0:	71 81       	ldd	r23, Z+1	; 0x01
    44c2:	82 81       	ldd	r24, Z+2	; 0x02
    44c4:	93 81       	ldd	r25, Z+3	; 0x03
    44c6:	20 e0       	ldi	r18, 0x00	; 0
    44c8:	30 e0       	ldi	r19, 0x00	; 0
    44ca:	40 e8       	ldi	r20, 0x80	; 128
    44cc:	5f e3       	ldi	r21, 0x3F	; 63
    44ce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    44d2:	88 23       	and	r24, r24
    44d4:	2c f4       	brge	.+10     	; 0x44e0 <LCD_sendCommand+0x39a>
		__ticks = 1;
    44d6:	81 e0       	ldi	r24, 0x01	; 1
    44d8:	90 e0       	ldi	r25, 0x00	; 0
    44da:	9e af       	std	Y+62, r25	; 0x3e
    44dc:	8d af       	std	Y+61, r24	; 0x3d
    44de:	46 c0       	rjmp	.+140    	; 0x456c <LCD_sendCommand+0x426>
	else if (__tmp > 65535)
    44e0:	fe 01       	movw	r30, r28
    44e2:	ff 96       	adiw	r30, 0x3f	; 63
    44e4:	60 81       	ld	r22, Z
    44e6:	71 81       	ldd	r23, Z+1	; 0x01
    44e8:	82 81       	ldd	r24, Z+2	; 0x02
    44ea:	93 81       	ldd	r25, Z+3	; 0x03
    44ec:	20 e0       	ldi	r18, 0x00	; 0
    44ee:	3f ef       	ldi	r19, 0xFF	; 255
    44f0:	4f e7       	ldi	r20, 0x7F	; 127
    44f2:	57 e4       	ldi	r21, 0x47	; 71
    44f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    44f8:	18 16       	cp	r1, r24
    44fa:	64 f5       	brge	.+88     	; 0x4554 <LCD_sendCommand+0x40e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    44fc:	fe 01       	movw	r30, r28
    44fe:	ed 5b       	subi	r30, 0xBD	; 189
    4500:	ff 4f       	sbci	r31, 0xFF	; 255
    4502:	60 81       	ld	r22, Z
    4504:	71 81       	ldd	r23, Z+1	; 0x01
    4506:	82 81       	ldd	r24, Z+2	; 0x02
    4508:	93 81       	ldd	r25, Z+3	; 0x03
    450a:	20 e0       	ldi	r18, 0x00	; 0
    450c:	30 e0       	ldi	r19, 0x00	; 0
    450e:	40 e2       	ldi	r20, 0x20	; 32
    4510:	51 e4       	ldi	r21, 0x41	; 65
    4512:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4516:	dc 01       	movw	r26, r24
    4518:	cb 01       	movw	r24, r22
    451a:	bc 01       	movw	r22, r24
    451c:	cd 01       	movw	r24, r26
    451e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4522:	dc 01       	movw	r26, r24
    4524:	cb 01       	movw	r24, r22
    4526:	9e af       	std	Y+62, r25	; 0x3e
    4528:	8d af       	std	Y+61, r24	; 0x3d
    452a:	0f c0       	rjmp	.+30     	; 0x454a <LCD_sendCommand+0x404>
    452c:	80 e9       	ldi	r24, 0x90	; 144
    452e:	91 e0       	ldi	r25, 0x01	; 1
    4530:	9c af       	std	Y+60, r25	; 0x3c
    4532:	8b af       	std	Y+59, r24	; 0x3b
    4534:	8b ad       	ldd	r24, Y+59	; 0x3b
    4536:	9c ad       	ldd	r25, Y+60	; 0x3c
    4538:	01 97       	sbiw	r24, 0x01	; 1
    453a:	f1 f7       	brne	.-4      	; 0x4538 <LCD_sendCommand+0x3f2>
    453c:	9c af       	std	Y+60, r25	; 0x3c
    453e:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4540:	8d ad       	ldd	r24, Y+61	; 0x3d
    4542:	9e ad       	ldd	r25, Y+62	; 0x3e
    4544:	01 97       	sbiw	r24, 0x01	; 1
    4546:	9e af       	std	Y+62, r25	; 0x3e
    4548:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    454a:	8d ad       	ldd	r24, Y+61	; 0x3d
    454c:	9e ad       	ldd	r25, Y+62	; 0x3e
    454e:	00 97       	sbiw	r24, 0x00	; 0
    4550:	69 f7       	brne	.-38     	; 0x452c <LCD_sendCommand+0x3e6>
    4552:	16 c0       	rjmp	.+44     	; 0x4580 <LCD_sendCommand+0x43a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4554:	fe 01       	movw	r30, r28
    4556:	ff 96       	adiw	r30, 0x3f	; 63
    4558:	60 81       	ld	r22, Z
    455a:	71 81       	ldd	r23, Z+1	; 0x01
    455c:	82 81       	ldd	r24, Z+2	; 0x02
    455e:	93 81       	ldd	r25, Z+3	; 0x03
    4560:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4564:	dc 01       	movw	r26, r24
    4566:	cb 01       	movw	r24, r22
    4568:	9e af       	std	Y+62, r25	; 0x3e
    456a:	8d af       	std	Y+61, r24	; 0x3d
    456c:	8d ad       	ldd	r24, Y+61	; 0x3d
    456e:	9e ad       	ldd	r25, Y+62	; 0x3e
    4570:	9a af       	std	Y+58, r25	; 0x3a
    4572:	89 af       	std	Y+57, r24	; 0x39
    4574:	89 ad       	ldd	r24, Y+57	; 0x39
    4576:	9a ad       	ldd	r25, Y+58	; 0x3a
    4578:	01 97       	sbiw	r24, 0x01	; 1
    457a:	f1 f7       	brne	.-4      	; 0x4578 <LCD_sendCommand+0x432>
    457c:	9a af       	std	Y+58, r25	; 0x3a
    457e:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLR_BIT(PORTA,2);  /* Disable LCD E=0 */
    4580:	ab e3       	ldi	r26, 0x3B	; 59
    4582:	b0 e0       	ldi	r27, 0x00	; 0
    4584:	eb e3       	ldi	r30, 0x3B	; 59
    4586:	f0 e0       	ldi	r31, 0x00	; 0
    4588:	80 81       	ld	r24, Z
    458a:	8b 7f       	andi	r24, 0xFB	; 251
    458c:	8c 93       	st	X, r24
    458e:	80 e0       	ldi	r24, 0x00	; 0
    4590:	90 e0       	ldi	r25, 0x00	; 0
    4592:	a0 e8       	ldi	r26, 0x80	; 128
    4594:	bf e3       	ldi	r27, 0x3F	; 63
    4596:	8d ab       	std	Y+53, r24	; 0x35
    4598:	9e ab       	std	Y+54, r25	; 0x36
    459a:	af ab       	std	Y+55, r26	; 0x37
    459c:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    459e:	6d a9       	ldd	r22, Y+53	; 0x35
    45a0:	7e a9       	ldd	r23, Y+54	; 0x36
    45a2:	8f a9       	ldd	r24, Y+55	; 0x37
    45a4:	98 ad       	ldd	r25, Y+56	; 0x38
    45a6:	20 e0       	ldi	r18, 0x00	; 0
    45a8:	30 e0       	ldi	r19, 0x00	; 0
    45aa:	4a e7       	ldi	r20, 0x7A	; 122
    45ac:	55 e4       	ldi	r21, 0x45	; 69
    45ae:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    45b2:	dc 01       	movw	r26, r24
    45b4:	cb 01       	movw	r24, r22
    45b6:	89 ab       	std	Y+49, r24	; 0x31
    45b8:	9a ab       	std	Y+50, r25	; 0x32
    45ba:	ab ab       	std	Y+51, r26	; 0x33
    45bc:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    45be:	69 a9       	ldd	r22, Y+49	; 0x31
    45c0:	7a a9       	ldd	r23, Y+50	; 0x32
    45c2:	8b a9       	ldd	r24, Y+51	; 0x33
    45c4:	9c a9       	ldd	r25, Y+52	; 0x34
    45c6:	20 e0       	ldi	r18, 0x00	; 0
    45c8:	30 e0       	ldi	r19, 0x00	; 0
    45ca:	40 e8       	ldi	r20, 0x80	; 128
    45cc:	5f e3       	ldi	r21, 0x3F	; 63
    45ce:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    45d2:	88 23       	and	r24, r24
    45d4:	2c f4       	brge	.+10     	; 0x45e0 <LCD_sendCommand+0x49a>
		__ticks = 1;
    45d6:	81 e0       	ldi	r24, 0x01	; 1
    45d8:	90 e0       	ldi	r25, 0x00	; 0
    45da:	98 ab       	std	Y+48, r25	; 0x30
    45dc:	8f a7       	std	Y+47, r24	; 0x2f
    45de:	3f c0       	rjmp	.+126    	; 0x465e <LCD_sendCommand+0x518>
	else if (__tmp > 65535)
    45e0:	69 a9       	ldd	r22, Y+49	; 0x31
    45e2:	7a a9       	ldd	r23, Y+50	; 0x32
    45e4:	8b a9       	ldd	r24, Y+51	; 0x33
    45e6:	9c a9       	ldd	r25, Y+52	; 0x34
    45e8:	20 e0       	ldi	r18, 0x00	; 0
    45ea:	3f ef       	ldi	r19, 0xFF	; 255
    45ec:	4f e7       	ldi	r20, 0x7F	; 127
    45ee:	57 e4       	ldi	r21, 0x47	; 71
    45f0:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    45f4:	18 16       	cp	r1, r24
    45f6:	4c f5       	brge	.+82     	; 0x464a <LCD_sendCommand+0x504>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    45f8:	6d a9       	ldd	r22, Y+53	; 0x35
    45fa:	7e a9       	ldd	r23, Y+54	; 0x36
    45fc:	8f a9       	ldd	r24, Y+55	; 0x37
    45fe:	98 ad       	ldd	r25, Y+56	; 0x38
    4600:	20 e0       	ldi	r18, 0x00	; 0
    4602:	30 e0       	ldi	r19, 0x00	; 0
    4604:	40 e2       	ldi	r20, 0x20	; 32
    4606:	51 e4       	ldi	r21, 0x41	; 65
    4608:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    460c:	dc 01       	movw	r26, r24
    460e:	cb 01       	movw	r24, r22
    4610:	bc 01       	movw	r22, r24
    4612:	cd 01       	movw	r24, r26
    4614:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4618:	dc 01       	movw	r26, r24
    461a:	cb 01       	movw	r24, r22
    461c:	98 ab       	std	Y+48, r25	; 0x30
    461e:	8f a7       	std	Y+47, r24	; 0x2f
    4620:	0f c0       	rjmp	.+30     	; 0x4640 <LCD_sendCommand+0x4fa>
    4622:	80 e9       	ldi	r24, 0x90	; 144
    4624:	91 e0       	ldi	r25, 0x01	; 1
    4626:	9e a7       	std	Y+46, r25	; 0x2e
    4628:	8d a7       	std	Y+45, r24	; 0x2d
    462a:	8d a5       	ldd	r24, Y+45	; 0x2d
    462c:	9e a5       	ldd	r25, Y+46	; 0x2e
    462e:	01 97       	sbiw	r24, 0x01	; 1
    4630:	f1 f7       	brne	.-4      	; 0x462e <LCD_sendCommand+0x4e8>
    4632:	9e a7       	std	Y+46, r25	; 0x2e
    4634:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4636:	8f a5       	ldd	r24, Y+47	; 0x2f
    4638:	98 a9       	ldd	r25, Y+48	; 0x30
    463a:	01 97       	sbiw	r24, 0x01	; 1
    463c:	98 ab       	std	Y+48, r25	; 0x30
    463e:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4640:	8f a5       	ldd	r24, Y+47	; 0x2f
    4642:	98 a9       	ldd	r25, Y+48	; 0x30
    4644:	00 97       	sbiw	r24, 0x00	; 0
    4646:	69 f7       	brne	.-38     	; 0x4622 <LCD_sendCommand+0x4dc>
    4648:	14 c0       	rjmp	.+40     	; 0x4672 <LCD_sendCommand+0x52c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    464a:	69 a9       	ldd	r22, Y+49	; 0x31
    464c:	7a a9       	ldd	r23, Y+50	; 0x32
    464e:	8b a9       	ldd	r24, Y+51	; 0x33
    4650:	9c a9       	ldd	r25, Y+52	; 0x34
    4652:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4656:	dc 01       	movw	r26, r24
    4658:	cb 01       	movw	r24, r22
    465a:	98 ab       	std	Y+48, r25	; 0x30
    465c:	8f a7       	std	Y+47, r24	; 0x2f
    465e:	8f a5       	ldd	r24, Y+47	; 0x2f
    4660:	98 a9       	ldd	r25, Y+48	; 0x30
    4662:	9c a7       	std	Y+44, r25	; 0x2c
    4664:	8b a7       	std	Y+43, r24	; 0x2b
    4666:	8b a5       	ldd	r24, Y+43	; 0x2b
    4668:	9c a5       	ldd	r25, Y+44	; 0x2c
    466a:	01 97       	sbiw	r24, 0x01	; 1
    466c:	f1 f7       	brne	.-4      	; 0x466a <LCD_sendCommand+0x524>
    466e:	9c a7       	std	Y+44, r25	; 0x2c
    4670:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	SET_BIT(PORTA,2);  /* Enable LCD E=1 */
    4672:	ab e3       	ldi	r26, 0x3B	; 59
    4674:	b0 e0       	ldi	r27, 0x00	; 0
    4676:	eb e3       	ldi	r30, 0x3B	; 59
    4678:	f0 e0       	ldi	r31, 0x00	; 0
    467a:	80 81       	ld	r24, Z
    467c:	84 60       	ori	r24, 0x04	; 4
    467e:	8c 93       	st	X, r24
    4680:	80 e0       	ldi	r24, 0x00	; 0
    4682:	90 e0       	ldi	r25, 0x00	; 0
    4684:	a0 e8       	ldi	r26, 0x80	; 128
    4686:	bf e3       	ldi	r27, 0x3F	; 63
    4688:	8f a3       	std	Y+39, r24	; 0x27
    468a:	98 a7       	std	Y+40, r25	; 0x28
    468c:	a9 a7       	std	Y+41, r26	; 0x29
    468e:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4690:	6f a1       	ldd	r22, Y+39	; 0x27
    4692:	78 a5       	ldd	r23, Y+40	; 0x28
    4694:	89 a5       	ldd	r24, Y+41	; 0x29
    4696:	9a a5       	ldd	r25, Y+42	; 0x2a
    4698:	20 e0       	ldi	r18, 0x00	; 0
    469a:	30 e0       	ldi	r19, 0x00	; 0
    469c:	4a e7       	ldi	r20, 0x7A	; 122
    469e:	55 e4       	ldi	r21, 0x45	; 69
    46a0:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46a4:	dc 01       	movw	r26, r24
    46a6:	cb 01       	movw	r24, r22
    46a8:	8b a3       	std	Y+35, r24	; 0x23
    46aa:	9c a3       	std	Y+36, r25	; 0x24
    46ac:	ad a3       	std	Y+37, r26	; 0x25
    46ae:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    46b0:	6b a1       	ldd	r22, Y+35	; 0x23
    46b2:	7c a1       	ldd	r23, Y+36	; 0x24
    46b4:	8d a1       	ldd	r24, Y+37	; 0x25
    46b6:	9e a1       	ldd	r25, Y+38	; 0x26
    46b8:	20 e0       	ldi	r18, 0x00	; 0
    46ba:	30 e0       	ldi	r19, 0x00	; 0
    46bc:	40 e8       	ldi	r20, 0x80	; 128
    46be:	5f e3       	ldi	r21, 0x3F	; 63
    46c0:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    46c4:	88 23       	and	r24, r24
    46c6:	2c f4       	brge	.+10     	; 0x46d2 <LCD_sendCommand+0x58c>
		__ticks = 1;
    46c8:	81 e0       	ldi	r24, 0x01	; 1
    46ca:	90 e0       	ldi	r25, 0x00	; 0
    46cc:	9a a3       	std	Y+34, r25	; 0x22
    46ce:	89 a3       	std	Y+33, r24	; 0x21
    46d0:	3f c0       	rjmp	.+126    	; 0x4750 <LCD_sendCommand+0x60a>
	else if (__tmp > 65535)
    46d2:	6b a1       	ldd	r22, Y+35	; 0x23
    46d4:	7c a1       	ldd	r23, Y+36	; 0x24
    46d6:	8d a1       	ldd	r24, Y+37	; 0x25
    46d8:	9e a1       	ldd	r25, Y+38	; 0x26
    46da:	20 e0       	ldi	r18, 0x00	; 0
    46dc:	3f ef       	ldi	r19, 0xFF	; 255
    46de:	4f e7       	ldi	r20, 0x7F	; 127
    46e0:	57 e4       	ldi	r21, 0x47	; 71
    46e2:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    46e6:	18 16       	cp	r1, r24
    46e8:	4c f5       	brge	.+82     	; 0x473c <LCD_sendCommand+0x5f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    46ea:	6f a1       	ldd	r22, Y+39	; 0x27
    46ec:	78 a5       	ldd	r23, Y+40	; 0x28
    46ee:	89 a5       	ldd	r24, Y+41	; 0x29
    46f0:	9a a5       	ldd	r25, Y+42	; 0x2a
    46f2:	20 e0       	ldi	r18, 0x00	; 0
    46f4:	30 e0       	ldi	r19, 0x00	; 0
    46f6:	40 e2       	ldi	r20, 0x20	; 32
    46f8:	51 e4       	ldi	r21, 0x41	; 65
    46fa:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    46fe:	dc 01       	movw	r26, r24
    4700:	cb 01       	movw	r24, r22
    4702:	bc 01       	movw	r22, r24
    4704:	cd 01       	movw	r24, r26
    4706:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    470a:	dc 01       	movw	r26, r24
    470c:	cb 01       	movw	r24, r22
    470e:	9a a3       	std	Y+34, r25	; 0x22
    4710:	89 a3       	std	Y+33, r24	; 0x21
    4712:	0f c0       	rjmp	.+30     	; 0x4732 <LCD_sendCommand+0x5ec>
    4714:	80 e9       	ldi	r24, 0x90	; 144
    4716:	91 e0       	ldi	r25, 0x01	; 1
    4718:	98 a3       	std	Y+32, r25	; 0x20
    471a:	8f 8f       	std	Y+31, r24	; 0x1f
    471c:	8f 8d       	ldd	r24, Y+31	; 0x1f
    471e:	98 a1       	ldd	r25, Y+32	; 0x20
    4720:	01 97       	sbiw	r24, 0x01	; 1
    4722:	f1 f7       	brne	.-4      	; 0x4720 <LCD_sendCommand+0x5da>
    4724:	98 a3       	std	Y+32, r25	; 0x20
    4726:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4728:	89 a1       	ldd	r24, Y+33	; 0x21
    472a:	9a a1       	ldd	r25, Y+34	; 0x22
    472c:	01 97       	sbiw	r24, 0x01	; 1
    472e:	9a a3       	std	Y+34, r25	; 0x22
    4730:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4732:	89 a1       	ldd	r24, Y+33	; 0x21
    4734:	9a a1       	ldd	r25, Y+34	; 0x22
    4736:	00 97       	sbiw	r24, 0x00	; 0
    4738:	69 f7       	brne	.-38     	; 0x4714 <LCD_sendCommand+0x5ce>
    473a:	14 c0       	rjmp	.+40     	; 0x4764 <LCD_sendCommand+0x61e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    473c:	6b a1       	ldd	r22, Y+35	; 0x23
    473e:	7c a1       	ldd	r23, Y+36	; 0x24
    4740:	8d a1       	ldd	r24, Y+37	; 0x25
    4742:	9e a1       	ldd	r25, Y+38	; 0x26
    4744:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4748:	dc 01       	movw	r26, r24
    474a:	cb 01       	movw	r24, r22
    474c:	9a a3       	std	Y+34, r25	; 0x22
    474e:	89 a3       	std	Y+33, r24	; 0x21
    4750:	89 a1       	ldd	r24, Y+33	; 0x21
    4752:	9a a1       	ldd	r25, Y+34	; 0x22
    4754:	9e 8f       	std	Y+30, r25	; 0x1e
    4756:	8d 8f       	std	Y+29, r24	; 0x1d
    4758:	8d 8d       	ldd	r24, Y+29	; 0x1d
    475a:	9e 8d       	ldd	r25, Y+30	; 0x1e
    475c:	01 97       	sbiw	r24, 0x01	; 1
    475e:	f1 f7       	brne	.-4      	; 0x475c <LCD_sendCommand+0x616>
    4760:	9e 8f       	std	Y+30, r25	; 0x1e
    4762:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	/* Send second 4 bits in command(Least Significant four bits) on PA3 --> PA6   */
	PORTA = (PORTA & 0x87) | ((command & 0x0F) << 3);
    4764:	ab e3       	ldi	r26, 0x3B	; 59
    4766:	b0 e0       	ldi	r27, 0x00	; 0
    4768:	eb e3       	ldi	r30, 0x3B	; 59
    476a:	f0 e0       	ldi	r31, 0x00	; 0
    476c:	80 81       	ld	r24, Z
    476e:	28 2f       	mov	r18, r24
    4770:	27 78       	andi	r18, 0x87	; 135
    4772:	fe 01       	movw	r30, r28
    4774:	ed 59       	subi	r30, 0x9D	; 157
    4776:	ff 4f       	sbci	r31, 0xFF	; 255
    4778:	80 81       	ld	r24, Z
    477a:	88 2f       	mov	r24, r24
    477c:	90 e0       	ldi	r25, 0x00	; 0
    477e:	8f 70       	andi	r24, 0x0F	; 15
    4780:	90 70       	andi	r25, 0x00	; 0
    4782:	88 0f       	add	r24, r24
    4784:	99 1f       	adc	r25, r25
    4786:	88 0f       	add	r24, r24
    4788:	99 1f       	adc	r25, r25
    478a:	88 0f       	add	r24, r24
    478c:	99 1f       	adc	r25, r25
    478e:	82 2b       	or	r24, r18
    4790:	8c 93       	st	X, r24
    4792:	80 e0       	ldi	r24, 0x00	; 0
    4794:	90 e0       	ldi	r25, 0x00	; 0
    4796:	a0 e8       	ldi	r26, 0x80	; 128
    4798:	bf e3       	ldi	r27, 0x3F	; 63
    479a:	89 8f       	std	Y+25, r24	; 0x19
    479c:	9a 8f       	std	Y+26, r25	; 0x1a
    479e:	ab 8f       	std	Y+27, r26	; 0x1b
    47a0:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    47a2:	69 8d       	ldd	r22, Y+25	; 0x19
    47a4:	7a 8d       	ldd	r23, Y+26	; 0x1a
    47a6:	8b 8d       	ldd	r24, Y+27	; 0x1b
    47a8:	9c 8d       	ldd	r25, Y+28	; 0x1c
    47aa:	20 e0       	ldi	r18, 0x00	; 0
    47ac:	30 e0       	ldi	r19, 0x00	; 0
    47ae:	4a e7       	ldi	r20, 0x7A	; 122
    47b0:	55 e4       	ldi	r21, 0x45	; 69
    47b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    47b6:	dc 01       	movw	r26, r24
    47b8:	cb 01       	movw	r24, r22
    47ba:	8d 8b       	std	Y+21, r24	; 0x15
    47bc:	9e 8b       	std	Y+22, r25	; 0x16
    47be:	af 8b       	std	Y+23, r26	; 0x17
    47c0:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    47c2:	6d 89       	ldd	r22, Y+21	; 0x15
    47c4:	7e 89       	ldd	r23, Y+22	; 0x16
    47c6:	8f 89       	ldd	r24, Y+23	; 0x17
    47c8:	98 8d       	ldd	r25, Y+24	; 0x18
    47ca:	20 e0       	ldi	r18, 0x00	; 0
    47cc:	30 e0       	ldi	r19, 0x00	; 0
    47ce:	40 e8       	ldi	r20, 0x80	; 128
    47d0:	5f e3       	ldi	r21, 0x3F	; 63
    47d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    47d6:	88 23       	and	r24, r24
    47d8:	2c f4       	brge	.+10     	; 0x47e4 <LCD_sendCommand+0x69e>
		__ticks = 1;
    47da:	81 e0       	ldi	r24, 0x01	; 1
    47dc:	90 e0       	ldi	r25, 0x00	; 0
    47de:	9c 8b       	std	Y+20, r25	; 0x14
    47e0:	8b 8b       	std	Y+19, r24	; 0x13
    47e2:	3f c0       	rjmp	.+126    	; 0x4862 <LCD_sendCommand+0x71c>
	else if (__tmp > 65535)
    47e4:	6d 89       	ldd	r22, Y+21	; 0x15
    47e6:	7e 89       	ldd	r23, Y+22	; 0x16
    47e8:	8f 89       	ldd	r24, Y+23	; 0x17
    47ea:	98 8d       	ldd	r25, Y+24	; 0x18
    47ec:	20 e0       	ldi	r18, 0x00	; 0
    47ee:	3f ef       	ldi	r19, 0xFF	; 255
    47f0:	4f e7       	ldi	r20, 0x7F	; 127
    47f2:	57 e4       	ldi	r21, 0x47	; 71
    47f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    47f8:	18 16       	cp	r1, r24
    47fa:	4c f5       	brge	.+82     	; 0x484e <LCD_sendCommand+0x708>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    47fc:	69 8d       	ldd	r22, Y+25	; 0x19
    47fe:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4800:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4802:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4804:	20 e0       	ldi	r18, 0x00	; 0
    4806:	30 e0       	ldi	r19, 0x00	; 0
    4808:	40 e2       	ldi	r20, 0x20	; 32
    480a:	51 e4       	ldi	r21, 0x41	; 65
    480c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4810:	dc 01       	movw	r26, r24
    4812:	cb 01       	movw	r24, r22
    4814:	bc 01       	movw	r22, r24
    4816:	cd 01       	movw	r24, r26
    4818:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    481c:	dc 01       	movw	r26, r24
    481e:	cb 01       	movw	r24, r22
    4820:	9c 8b       	std	Y+20, r25	; 0x14
    4822:	8b 8b       	std	Y+19, r24	; 0x13
    4824:	0f c0       	rjmp	.+30     	; 0x4844 <LCD_sendCommand+0x6fe>
    4826:	80 e9       	ldi	r24, 0x90	; 144
    4828:	91 e0       	ldi	r25, 0x01	; 1
    482a:	9a 8b       	std	Y+18, r25	; 0x12
    482c:	89 8b       	std	Y+17, r24	; 0x11
    482e:	89 89       	ldd	r24, Y+17	; 0x11
    4830:	9a 89       	ldd	r25, Y+18	; 0x12
    4832:	01 97       	sbiw	r24, 0x01	; 1
    4834:	f1 f7       	brne	.-4      	; 0x4832 <LCD_sendCommand+0x6ec>
    4836:	9a 8b       	std	Y+18, r25	; 0x12
    4838:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    483a:	8b 89       	ldd	r24, Y+19	; 0x13
    483c:	9c 89       	ldd	r25, Y+20	; 0x14
    483e:	01 97       	sbiw	r24, 0x01	; 1
    4840:	9c 8b       	std	Y+20, r25	; 0x14
    4842:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4844:	8b 89       	ldd	r24, Y+19	; 0x13
    4846:	9c 89       	ldd	r25, Y+20	; 0x14
    4848:	00 97       	sbiw	r24, 0x00	; 0
    484a:	69 f7       	brne	.-38     	; 0x4826 <LCD_sendCommand+0x6e0>
    484c:	14 c0       	rjmp	.+40     	; 0x4876 <LCD_sendCommand+0x730>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    484e:	6d 89       	ldd	r22, Y+21	; 0x15
    4850:	7e 89       	ldd	r23, Y+22	; 0x16
    4852:	8f 89       	ldd	r24, Y+23	; 0x17
    4854:	98 8d       	ldd	r25, Y+24	; 0x18
    4856:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    485a:	dc 01       	movw	r26, r24
    485c:	cb 01       	movw	r24, r22
    485e:	9c 8b       	std	Y+20, r25	; 0x14
    4860:	8b 8b       	std	Y+19, r24	; 0x13
    4862:	8b 89       	ldd	r24, Y+19	; 0x13
    4864:	9c 89       	ldd	r25, Y+20	; 0x14
    4866:	98 8b       	std	Y+16, r25	; 0x10
    4868:	8f 87       	std	Y+15, r24	; 0x0f
    486a:	8f 85       	ldd	r24, Y+15	; 0x0f
    486c:	98 89       	ldd	r25, Y+16	; 0x10
    486e:	01 97       	sbiw	r24, 0x01	; 1
    4870:	f1 f7       	brne	.-4      	; 0x486e <LCD_sendCommand+0x728>
    4872:	98 8b       	std	Y+16, r25	; 0x10
    4874:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLR_BIT(PORTA,2);  /* Disable LCD E=0 */
    4876:	ab e3       	ldi	r26, 0x3B	; 59
    4878:	b0 e0       	ldi	r27, 0x00	; 0
    487a:	eb e3       	ldi	r30, 0x3B	; 59
    487c:	f0 e0       	ldi	r31, 0x00	; 0
    487e:	80 81       	ld	r24, Z
    4880:	8b 7f       	andi	r24, 0xFB	; 251
    4882:	8c 93       	st	X, r24
    4884:	80 e0       	ldi	r24, 0x00	; 0
    4886:	90 e0       	ldi	r25, 0x00	; 0
    4888:	a0 e8       	ldi	r26, 0x80	; 128
    488a:	bf e3       	ldi	r27, 0x3F	; 63
    488c:	8b 87       	std	Y+11, r24	; 0x0b
    488e:	9c 87       	std	Y+12, r25	; 0x0c
    4890:	ad 87       	std	Y+13, r26	; 0x0d
    4892:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4894:	6b 85       	ldd	r22, Y+11	; 0x0b
    4896:	7c 85       	ldd	r23, Y+12	; 0x0c
    4898:	8d 85       	ldd	r24, Y+13	; 0x0d
    489a:	9e 85       	ldd	r25, Y+14	; 0x0e
    489c:	20 e0       	ldi	r18, 0x00	; 0
    489e:	30 e0       	ldi	r19, 0x00	; 0
    48a0:	4a e7       	ldi	r20, 0x7A	; 122
    48a2:	55 e4       	ldi	r21, 0x45	; 69
    48a4:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    48a8:	dc 01       	movw	r26, r24
    48aa:	cb 01       	movw	r24, r22
    48ac:	8f 83       	std	Y+7, r24	; 0x07
    48ae:	98 87       	std	Y+8, r25	; 0x08
    48b0:	a9 87       	std	Y+9, r26	; 0x09
    48b2:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    48b4:	6f 81       	ldd	r22, Y+7	; 0x07
    48b6:	78 85       	ldd	r23, Y+8	; 0x08
    48b8:	89 85       	ldd	r24, Y+9	; 0x09
    48ba:	9a 85       	ldd	r25, Y+10	; 0x0a
    48bc:	20 e0       	ldi	r18, 0x00	; 0
    48be:	30 e0       	ldi	r19, 0x00	; 0
    48c0:	40 e8       	ldi	r20, 0x80	; 128
    48c2:	5f e3       	ldi	r21, 0x3F	; 63
    48c4:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    48c8:	88 23       	and	r24, r24
    48ca:	2c f4       	brge	.+10     	; 0x48d6 <LCD_sendCommand+0x790>
		__ticks = 1;
    48cc:	81 e0       	ldi	r24, 0x01	; 1
    48ce:	90 e0       	ldi	r25, 0x00	; 0
    48d0:	9e 83       	std	Y+6, r25	; 0x06
    48d2:	8d 83       	std	Y+5, r24	; 0x05
    48d4:	3f c0       	rjmp	.+126    	; 0x4954 <LCD_sendCommand+0x80e>
	else if (__tmp > 65535)
    48d6:	6f 81       	ldd	r22, Y+7	; 0x07
    48d8:	78 85       	ldd	r23, Y+8	; 0x08
    48da:	89 85       	ldd	r24, Y+9	; 0x09
    48dc:	9a 85       	ldd	r25, Y+10	; 0x0a
    48de:	20 e0       	ldi	r18, 0x00	; 0
    48e0:	3f ef       	ldi	r19, 0xFF	; 255
    48e2:	4f e7       	ldi	r20, 0x7F	; 127
    48e4:	57 e4       	ldi	r21, 0x47	; 71
    48e6:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    48ea:	18 16       	cp	r1, r24
    48ec:	4c f5       	brge	.+82     	; 0x4940 <LCD_sendCommand+0x7fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    48ee:	6b 85       	ldd	r22, Y+11	; 0x0b
    48f0:	7c 85       	ldd	r23, Y+12	; 0x0c
    48f2:	8d 85       	ldd	r24, Y+13	; 0x0d
    48f4:	9e 85       	ldd	r25, Y+14	; 0x0e
    48f6:	20 e0       	ldi	r18, 0x00	; 0
    48f8:	30 e0       	ldi	r19, 0x00	; 0
    48fa:	40 e2       	ldi	r20, 0x20	; 32
    48fc:	51 e4       	ldi	r21, 0x41	; 65
    48fe:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4902:	dc 01       	movw	r26, r24
    4904:	cb 01       	movw	r24, r22
    4906:	bc 01       	movw	r22, r24
    4908:	cd 01       	movw	r24, r26
    490a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    490e:	dc 01       	movw	r26, r24
    4910:	cb 01       	movw	r24, r22
    4912:	9e 83       	std	Y+6, r25	; 0x06
    4914:	8d 83       	std	Y+5, r24	; 0x05
    4916:	0f c0       	rjmp	.+30     	; 0x4936 <LCD_sendCommand+0x7f0>
    4918:	80 e9       	ldi	r24, 0x90	; 144
    491a:	91 e0       	ldi	r25, 0x01	; 1
    491c:	9c 83       	std	Y+4, r25	; 0x04
    491e:	8b 83       	std	Y+3, r24	; 0x03
    4920:	8b 81       	ldd	r24, Y+3	; 0x03
    4922:	9c 81       	ldd	r25, Y+4	; 0x04
    4924:	01 97       	sbiw	r24, 0x01	; 1
    4926:	f1 f7       	brne	.-4      	; 0x4924 <LCD_sendCommand+0x7de>
    4928:	9c 83       	std	Y+4, r25	; 0x04
    492a:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    492c:	8d 81       	ldd	r24, Y+5	; 0x05
    492e:	9e 81       	ldd	r25, Y+6	; 0x06
    4930:	01 97       	sbiw	r24, 0x01	; 1
    4932:	9e 83       	std	Y+6, r25	; 0x06
    4934:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4936:	8d 81       	ldd	r24, Y+5	; 0x05
    4938:	9e 81       	ldd	r25, Y+6	; 0x06
    493a:	00 97       	sbiw	r24, 0x00	; 0
    493c:	69 f7       	brne	.-38     	; 0x4918 <LCD_sendCommand+0x7d2>
    493e:	14 c0       	rjmp	.+40     	; 0x4968 <LCD_sendCommand+0x822>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4940:	6f 81       	ldd	r22, Y+7	; 0x07
    4942:	78 85       	ldd	r23, Y+8	; 0x08
    4944:	89 85       	ldd	r24, Y+9	; 0x09
    4946:	9a 85       	ldd	r25, Y+10	; 0x0a
    4948:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    494c:	dc 01       	movw	r26, r24
    494e:	cb 01       	movw	r24, r22
    4950:	9e 83       	std	Y+6, r25	; 0x06
    4952:	8d 83       	std	Y+5, r24	; 0x05
    4954:	8d 81       	ldd	r24, Y+5	; 0x05
    4956:	9e 81       	ldd	r25, Y+6	; 0x06
    4958:	9a 83       	std	Y+2, r25	; 0x02
    495a:	89 83       	std	Y+1, r24	; 0x01
    495c:	89 81       	ldd	r24, Y+1	; 0x01
    495e:	9a 81       	ldd	r25, Y+2	; 0x02
    4960:	01 97       	sbiw	r24, 0x01	; 1
    4962:	f1 f7       	brne	.-4      	; 0x4960 <LCD_sendCommand+0x81a>
    4964:	9a 83       	std	Y+2, r25	; 0x02
    4966:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
    4968:	cd 59       	subi	r28, 0x9D	; 157
    496a:	df 4f       	sbci	r29, 0xFF	; 255
    496c:	0f b6       	in	r0, 0x3f	; 63
    496e:	f8 94       	cli
    4970:	de bf       	out	0x3e, r29	; 62
    4972:	0f be       	out	0x3f, r0	; 63
    4974:	cd bf       	out	0x3d, r28	; 61
    4976:	cf 91       	pop	r28
    4978:	df 91       	pop	r29
    497a:	1f 91       	pop	r17
    497c:	0f 91       	pop	r16
    497e:	08 95       	ret

00004980 <LCD_displayCharacter>:

void LCD_displayCharacter(unsigned char data)
{
    4980:	0f 93       	push	r16
    4982:	1f 93       	push	r17
    4984:	df 93       	push	r29
    4986:	cf 93       	push	r28
    4988:	cd b7       	in	r28, 0x3d	; 61
    498a:	de b7       	in	r29, 0x3e	; 62
    498c:	c3 56       	subi	r28, 0x63	; 99
    498e:	d0 40       	sbci	r29, 0x00	; 0
    4990:	0f b6       	in	r0, 0x3f	; 63
    4992:	f8 94       	cli
    4994:	de bf       	out	0x3e, r29	; 62
    4996:	0f be       	out	0x3f, r0	; 63
    4998:	cd bf       	out	0x3d, r28	; 61
    499a:	fe 01       	movw	r30, r28
    499c:	ed 59       	subi	r30, 0x9D	; 157
    499e:	ff 4f       	sbci	r31, 0xFF	; 255
    49a0:	80 83       	st	Z, r24
	SET_BIT(PORTA,1); /* Data Mode RS=1 */
    49a2:	ab e3       	ldi	r26, 0x3B	; 59
    49a4:	b0 e0       	ldi	r27, 0x00	; 0
    49a6:	eb e3       	ldi	r30, 0x3B	; 59
    49a8:	f0 e0       	ldi	r31, 0x00	; 0
    49aa:	80 81       	ld	r24, Z
    49ac:	82 60       	ori	r24, 0x02	; 2
    49ae:	8c 93       	st	X, r24
    49b0:	fe 01       	movw	r30, r28
    49b2:	e1 5a       	subi	r30, 0xA1	; 161
    49b4:	ff 4f       	sbci	r31, 0xFF	; 255
    49b6:	80 e0       	ldi	r24, 0x00	; 0
    49b8:	90 e0       	ldi	r25, 0x00	; 0
    49ba:	a0 e8       	ldi	r26, 0x80	; 128
    49bc:	bf e3       	ldi	r27, 0x3F	; 63
    49be:	80 83       	st	Z, r24
    49c0:	91 83       	std	Z+1, r25	; 0x01
    49c2:	a2 83       	std	Z+2, r26	; 0x02
    49c4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    49c6:	8e 01       	movw	r16, r28
    49c8:	05 5a       	subi	r16, 0xA5	; 165
    49ca:	1f 4f       	sbci	r17, 0xFF	; 255
    49cc:	fe 01       	movw	r30, r28
    49ce:	e1 5a       	subi	r30, 0xA1	; 161
    49d0:	ff 4f       	sbci	r31, 0xFF	; 255
    49d2:	60 81       	ld	r22, Z
    49d4:	71 81       	ldd	r23, Z+1	; 0x01
    49d6:	82 81       	ldd	r24, Z+2	; 0x02
    49d8:	93 81       	ldd	r25, Z+3	; 0x03
    49da:	20 e0       	ldi	r18, 0x00	; 0
    49dc:	30 e0       	ldi	r19, 0x00	; 0
    49de:	4a e7       	ldi	r20, 0x7A	; 122
    49e0:	55 e4       	ldi	r21, 0x45	; 69
    49e2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    49e6:	dc 01       	movw	r26, r24
    49e8:	cb 01       	movw	r24, r22
    49ea:	f8 01       	movw	r30, r16
    49ec:	80 83       	st	Z, r24
    49ee:	91 83       	std	Z+1, r25	; 0x01
    49f0:	a2 83       	std	Z+2, r26	; 0x02
    49f2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    49f4:	fe 01       	movw	r30, r28
    49f6:	e5 5a       	subi	r30, 0xA5	; 165
    49f8:	ff 4f       	sbci	r31, 0xFF	; 255
    49fa:	60 81       	ld	r22, Z
    49fc:	71 81       	ldd	r23, Z+1	; 0x01
    49fe:	82 81       	ldd	r24, Z+2	; 0x02
    4a00:	93 81       	ldd	r25, Z+3	; 0x03
    4a02:	20 e0       	ldi	r18, 0x00	; 0
    4a04:	30 e0       	ldi	r19, 0x00	; 0
    4a06:	40 e8       	ldi	r20, 0x80	; 128
    4a08:	5f e3       	ldi	r21, 0x3F	; 63
    4a0a:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4a0e:	88 23       	and	r24, r24
    4a10:	44 f4       	brge	.+16     	; 0x4a22 <LCD_displayCharacter+0xa2>
		__ticks = 1;
    4a12:	fe 01       	movw	r30, r28
    4a14:	e7 5a       	subi	r30, 0xA7	; 167
    4a16:	ff 4f       	sbci	r31, 0xFF	; 255
    4a18:	81 e0       	ldi	r24, 0x01	; 1
    4a1a:	90 e0       	ldi	r25, 0x00	; 0
    4a1c:	91 83       	std	Z+1, r25	; 0x01
    4a1e:	80 83       	st	Z, r24
    4a20:	64 c0       	rjmp	.+200    	; 0x4aea <LCD_displayCharacter+0x16a>
	else if (__tmp > 65535)
    4a22:	fe 01       	movw	r30, r28
    4a24:	e5 5a       	subi	r30, 0xA5	; 165
    4a26:	ff 4f       	sbci	r31, 0xFF	; 255
    4a28:	60 81       	ld	r22, Z
    4a2a:	71 81       	ldd	r23, Z+1	; 0x01
    4a2c:	82 81       	ldd	r24, Z+2	; 0x02
    4a2e:	93 81       	ldd	r25, Z+3	; 0x03
    4a30:	20 e0       	ldi	r18, 0x00	; 0
    4a32:	3f ef       	ldi	r19, 0xFF	; 255
    4a34:	4f e7       	ldi	r20, 0x7F	; 127
    4a36:	57 e4       	ldi	r21, 0x47	; 71
    4a38:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4a3c:	18 16       	cp	r1, r24
    4a3e:	0c f0       	brlt	.+2      	; 0x4a42 <LCD_displayCharacter+0xc2>
    4a40:	43 c0       	rjmp	.+134    	; 0x4ac8 <LCD_displayCharacter+0x148>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4a42:	fe 01       	movw	r30, r28
    4a44:	e1 5a       	subi	r30, 0xA1	; 161
    4a46:	ff 4f       	sbci	r31, 0xFF	; 255
    4a48:	60 81       	ld	r22, Z
    4a4a:	71 81       	ldd	r23, Z+1	; 0x01
    4a4c:	82 81       	ldd	r24, Z+2	; 0x02
    4a4e:	93 81       	ldd	r25, Z+3	; 0x03
    4a50:	20 e0       	ldi	r18, 0x00	; 0
    4a52:	30 e0       	ldi	r19, 0x00	; 0
    4a54:	40 e2       	ldi	r20, 0x20	; 32
    4a56:	51 e4       	ldi	r21, 0x41	; 65
    4a58:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4a5c:	dc 01       	movw	r26, r24
    4a5e:	cb 01       	movw	r24, r22
    4a60:	8e 01       	movw	r16, r28
    4a62:	07 5a       	subi	r16, 0xA7	; 167
    4a64:	1f 4f       	sbci	r17, 0xFF	; 255
    4a66:	bc 01       	movw	r22, r24
    4a68:	cd 01       	movw	r24, r26
    4a6a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4a6e:	dc 01       	movw	r26, r24
    4a70:	cb 01       	movw	r24, r22
    4a72:	f8 01       	movw	r30, r16
    4a74:	91 83       	std	Z+1, r25	; 0x01
    4a76:	80 83       	st	Z, r24
    4a78:	1f c0       	rjmp	.+62     	; 0x4ab8 <LCD_displayCharacter+0x138>
    4a7a:	fe 01       	movw	r30, r28
    4a7c:	e9 5a       	subi	r30, 0xA9	; 169
    4a7e:	ff 4f       	sbci	r31, 0xFF	; 255
    4a80:	80 e9       	ldi	r24, 0x90	; 144
    4a82:	91 e0       	ldi	r25, 0x01	; 1
    4a84:	91 83       	std	Z+1, r25	; 0x01
    4a86:	80 83       	st	Z, r24
    4a88:	fe 01       	movw	r30, r28
    4a8a:	e9 5a       	subi	r30, 0xA9	; 169
    4a8c:	ff 4f       	sbci	r31, 0xFF	; 255
    4a8e:	80 81       	ld	r24, Z
    4a90:	91 81       	ldd	r25, Z+1	; 0x01
    4a92:	01 97       	sbiw	r24, 0x01	; 1
    4a94:	f1 f7       	brne	.-4      	; 0x4a92 <LCD_displayCharacter+0x112>
    4a96:	fe 01       	movw	r30, r28
    4a98:	e9 5a       	subi	r30, 0xA9	; 169
    4a9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4a9c:	91 83       	std	Z+1, r25	; 0x01
    4a9e:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4aa0:	de 01       	movw	r26, r28
    4aa2:	a7 5a       	subi	r26, 0xA7	; 167
    4aa4:	bf 4f       	sbci	r27, 0xFF	; 255
    4aa6:	fe 01       	movw	r30, r28
    4aa8:	e7 5a       	subi	r30, 0xA7	; 167
    4aaa:	ff 4f       	sbci	r31, 0xFF	; 255
    4aac:	80 81       	ld	r24, Z
    4aae:	91 81       	ldd	r25, Z+1	; 0x01
    4ab0:	01 97       	sbiw	r24, 0x01	; 1
    4ab2:	11 96       	adiw	r26, 0x01	; 1
    4ab4:	9c 93       	st	X, r25
    4ab6:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4ab8:	fe 01       	movw	r30, r28
    4aba:	e7 5a       	subi	r30, 0xA7	; 167
    4abc:	ff 4f       	sbci	r31, 0xFF	; 255
    4abe:	80 81       	ld	r24, Z
    4ac0:	91 81       	ldd	r25, Z+1	; 0x01
    4ac2:	00 97       	sbiw	r24, 0x00	; 0
    4ac4:	d1 f6       	brne	.-76     	; 0x4a7a <LCD_displayCharacter+0xfa>
    4ac6:	27 c0       	rjmp	.+78     	; 0x4b16 <LCD_displayCharacter+0x196>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4ac8:	8e 01       	movw	r16, r28
    4aca:	07 5a       	subi	r16, 0xA7	; 167
    4acc:	1f 4f       	sbci	r17, 0xFF	; 255
    4ace:	fe 01       	movw	r30, r28
    4ad0:	e5 5a       	subi	r30, 0xA5	; 165
    4ad2:	ff 4f       	sbci	r31, 0xFF	; 255
    4ad4:	60 81       	ld	r22, Z
    4ad6:	71 81       	ldd	r23, Z+1	; 0x01
    4ad8:	82 81       	ldd	r24, Z+2	; 0x02
    4ada:	93 81       	ldd	r25, Z+3	; 0x03
    4adc:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4ae0:	dc 01       	movw	r26, r24
    4ae2:	cb 01       	movw	r24, r22
    4ae4:	f8 01       	movw	r30, r16
    4ae6:	91 83       	std	Z+1, r25	; 0x01
    4ae8:	80 83       	st	Z, r24
    4aea:	de 01       	movw	r26, r28
    4aec:	ab 5a       	subi	r26, 0xAB	; 171
    4aee:	bf 4f       	sbci	r27, 0xFF	; 255
    4af0:	fe 01       	movw	r30, r28
    4af2:	e7 5a       	subi	r30, 0xA7	; 167
    4af4:	ff 4f       	sbci	r31, 0xFF	; 255
    4af6:	80 81       	ld	r24, Z
    4af8:	91 81       	ldd	r25, Z+1	; 0x01
    4afa:	8d 93       	st	X+, r24
    4afc:	9c 93       	st	X, r25
    4afe:	fe 01       	movw	r30, r28
    4b00:	eb 5a       	subi	r30, 0xAB	; 171
    4b02:	ff 4f       	sbci	r31, 0xFF	; 255
    4b04:	80 81       	ld	r24, Z
    4b06:	91 81       	ldd	r25, Z+1	; 0x01
    4b08:	01 97       	sbiw	r24, 0x01	; 1
    4b0a:	f1 f7       	brne	.-4      	; 0x4b08 <LCD_displayCharacter+0x188>
    4b0c:	fe 01       	movw	r30, r28
    4b0e:	eb 5a       	subi	r30, 0xAB	; 171
    4b10:	ff 4f       	sbci	r31, 0xFF	; 255
    4b12:	91 83       	std	Z+1, r25	; 0x01
    4b14:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tas = 50ns */
	SET_BIT(PORTA,2); /* Enable LCD E=1 */
    4b16:	ab e3       	ldi	r26, 0x3B	; 59
    4b18:	b0 e0       	ldi	r27, 0x00	; 0
    4b1a:	eb e3       	ldi	r30, 0x3B	; 59
    4b1c:	f0 e0       	ldi	r31, 0x00	; 0
    4b1e:	80 81       	ld	r24, Z
    4b20:	84 60       	ori	r24, 0x04	; 4
    4b22:	8c 93       	st	X, r24
    4b24:	fe 01       	movw	r30, r28
    4b26:	ef 5a       	subi	r30, 0xAF	; 175
    4b28:	ff 4f       	sbci	r31, 0xFF	; 255
    4b2a:	80 e0       	ldi	r24, 0x00	; 0
    4b2c:	90 e0       	ldi	r25, 0x00	; 0
    4b2e:	a0 e8       	ldi	r26, 0x80	; 128
    4b30:	bf e3       	ldi	r27, 0x3F	; 63
    4b32:	80 83       	st	Z, r24
    4b34:	91 83       	std	Z+1, r25	; 0x01
    4b36:	a2 83       	std	Z+2, r26	; 0x02
    4b38:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4b3a:	8e 01       	movw	r16, r28
    4b3c:	03 5b       	subi	r16, 0xB3	; 179
    4b3e:	1f 4f       	sbci	r17, 0xFF	; 255
    4b40:	fe 01       	movw	r30, r28
    4b42:	ef 5a       	subi	r30, 0xAF	; 175
    4b44:	ff 4f       	sbci	r31, 0xFF	; 255
    4b46:	60 81       	ld	r22, Z
    4b48:	71 81       	ldd	r23, Z+1	; 0x01
    4b4a:	82 81       	ldd	r24, Z+2	; 0x02
    4b4c:	93 81       	ldd	r25, Z+3	; 0x03
    4b4e:	20 e0       	ldi	r18, 0x00	; 0
    4b50:	30 e0       	ldi	r19, 0x00	; 0
    4b52:	4a e7       	ldi	r20, 0x7A	; 122
    4b54:	55 e4       	ldi	r21, 0x45	; 69
    4b56:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4b5a:	dc 01       	movw	r26, r24
    4b5c:	cb 01       	movw	r24, r22
    4b5e:	f8 01       	movw	r30, r16
    4b60:	80 83       	st	Z, r24
    4b62:	91 83       	std	Z+1, r25	; 0x01
    4b64:	a2 83       	std	Z+2, r26	; 0x02
    4b66:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4b68:	fe 01       	movw	r30, r28
    4b6a:	e3 5b       	subi	r30, 0xB3	; 179
    4b6c:	ff 4f       	sbci	r31, 0xFF	; 255
    4b6e:	60 81       	ld	r22, Z
    4b70:	71 81       	ldd	r23, Z+1	; 0x01
    4b72:	82 81       	ldd	r24, Z+2	; 0x02
    4b74:	93 81       	ldd	r25, Z+3	; 0x03
    4b76:	20 e0       	ldi	r18, 0x00	; 0
    4b78:	30 e0       	ldi	r19, 0x00	; 0
    4b7a:	40 e8       	ldi	r20, 0x80	; 128
    4b7c:	5f e3       	ldi	r21, 0x3F	; 63
    4b7e:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4b82:	88 23       	and	r24, r24
    4b84:	44 f4       	brge	.+16     	; 0x4b96 <LCD_displayCharacter+0x216>
		__ticks = 1;
    4b86:	fe 01       	movw	r30, r28
    4b88:	e5 5b       	subi	r30, 0xB5	; 181
    4b8a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b8c:	81 e0       	ldi	r24, 0x01	; 1
    4b8e:	90 e0       	ldi	r25, 0x00	; 0
    4b90:	91 83       	std	Z+1, r25	; 0x01
    4b92:	80 83       	st	Z, r24
    4b94:	64 c0       	rjmp	.+200    	; 0x4c5e <LCD_displayCharacter+0x2de>
	else if (__tmp > 65535)
    4b96:	fe 01       	movw	r30, r28
    4b98:	e3 5b       	subi	r30, 0xB3	; 179
    4b9a:	ff 4f       	sbci	r31, 0xFF	; 255
    4b9c:	60 81       	ld	r22, Z
    4b9e:	71 81       	ldd	r23, Z+1	; 0x01
    4ba0:	82 81       	ldd	r24, Z+2	; 0x02
    4ba2:	93 81       	ldd	r25, Z+3	; 0x03
    4ba4:	20 e0       	ldi	r18, 0x00	; 0
    4ba6:	3f ef       	ldi	r19, 0xFF	; 255
    4ba8:	4f e7       	ldi	r20, 0x7F	; 127
    4baa:	57 e4       	ldi	r21, 0x47	; 71
    4bac:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4bb0:	18 16       	cp	r1, r24
    4bb2:	0c f0       	brlt	.+2      	; 0x4bb6 <LCD_displayCharacter+0x236>
    4bb4:	43 c0       	rjmp	.+134    	; 0x4c3c <LCD_displayCharacter+0x2bc>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4bb6:	fe 01       	movw	r30, r28
    4bb8:	ef 5a       	subi	r30, 0xAF	; 175
    4bba:	ff 4f       	sbci	r31, 0xFF	; 255
    4bbc:	60 81       	ld	r22, Z
    4bbe:	71 81       	ldd	r23, Z+1	; 0x01
    4bc0:	82 81       	ldd	r24, Z+2	; 0x02
    4bc2:	93 81       	ldd	r25, Z+3	; 0x03
    4bc4:	20 e0       	ldi	r18, 0x00	; 0
    4bc6:	30 e0       	ldi	r19, 0x00	; 0
    4bc8:	40 e2       	ldi	r20, 0x20	; 32
    4bca:	51 e4       	ldi	r21, 0x41	; 65
    4bcc:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4bd0:	dc 01       	movw	r26, r24
    4bd2:	cb 01       	movw	r24, r22
    4bd4:	8e 01       	movw	r16, r28
    4bd6:	05 5b       	subi	r16, 0xB5	; 181
    4bd8:	1f 4f       	sbci	r17, 0xFF	; 255
    4bda:	bc 01       	movw	r22, r24
    4bdc:	cd 01       	movw	r24, r26
    4bde:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4be2:	dc 01       	movw	r26, r24
    4be4:	cb 01       	movw	r24, r22
    4be6:	f8 01       	movw	r30, r16
    4be8:	91 83       	std	Z+1, r25	; 0x01
    4bea:	80 83       	st	Z, r24
    4bec:	1f c0       	rjmp	.+62     	; 0x4c2c <LCD_displayCharacter+0x2ac>
    4bee:	fe 01       	movw	r30, r28
    4bf0:	e7 5b       	subi	r30, 0xB7	; 183
    4bf2:	ff 4f       	sbci	r31, 0xFF	; 255
    4bf4:	80 e9       	ldi	r24, 0x90	; 144
    4bf6:	91 e0       	ldi	r25, 0x01	; 1
    4bf8:	91 83       	std	Z+1, r25	; 0x01
    4bfa:	80 83       	st	Z, r24
    4bfc:	fe 01       	movw	r30, r28
    4bfe:	e7 5b       	subi	r30, 0xB7	; 183
    4c00:	ff 4f       	sbci	r31, 0xFF	; 255
    4c02:	80 81       	ld	r24, Z
    4c04:	91 81       	ldd	r25, Z+1	; 0x01
    4c06:	01 97       	sbiw	r24, 0x01	; 1
    4c08:	f1 f7       	brne	.-4      	; 0x4c06 <LCD_displayCharacter+0x286>
    4c0a:	fe 01       	movw	r30, r28
    4c0c:	e7 5b       	subi	r30, 0xB7	; 183
    4c0e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c10:	91 83       	std	Z+1, r25	; 0x01
    4c12:	80 83       	st	Z, r24
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4c14:	de 01       	movw	r26, r28
    4c16:	a5 5b       	subi	r26, 0xB5	; 181
    4c18:	bf 4f       	sbci	r27, 0xFF	; 255
    4c1a:	fe 01       	movw	r30, r28
    4c1c:	e5 5b       	subi	r30, 0xB5	; 181
    4c1e:	ff 4f       	sbci	r31, 0xFF	; 255
    4c20:	80 81       	ld	r24, Z
    4c22:	91 81       	ldd	r25, Z+1	; 0x01
    4c24:	01 97       	sbiw	r24, 0x01	; 1
    4c26:	11 96       	adiw	r26, 0x01	; 1
    4c28:	9c 93       	st	X, r25
    4c2a:	8e 93       	st	-X, r24
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4c2c:	fe 01       	movw	r30, r28
    4c2e:	e5 5b       	subi	r30, 0xB5	; 181
    4c30:	ff 4f       	sbci	r31, 0xFF	; 255
    4c32:	80 81       	ld	r24, Z
    4c34:	91 81       	ldd	r25, Z+1	; 0x01
    4c36:	00 97       	sbiw	r24, 0x00	; 0
    4c38:	d1 f6       	brne	.-76     	; 0x4bee <LCD_displayCharacter+0x26e>
    4c3a:	27 c0       	rjmp	.+78     	; 0x4c8a <LCD_displayCharacter+0x30a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4c3c:	8e 01       	movw	r16, r28
    4c3e:	05 5b       	subi	r16, 0xB5	; 181
    4c40:	1f 4f       	sbci	r17, 0xFF	; 255
    4c42:	fe 01       	movw	r30, r28
    4c44:	e3 5b       	subi	r30, 0xB3	; 179
    4c46:	ff 4f       	sbci	r31, 0xFF	; 255
    4c48:	60 81       	ld	r22, Z
    4c4a:	71 81       	ldd	r23, Z+1	; 0x01
    4c4c:	82 81       	ldd	r24, Z+2	; 0x02
    4c4e:	93 81       	ldd	r25, Z+3	; 0x03
    4c50:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4c54:	dc 01       	movw	r26, r24
    4c56:	cb 01       	movw	r24, r22
    4c58:	f8 01       	movw	r30, r16
    4c5a:	91 83       	std	Z+1, r25	; 0x01
    4c5c:	80 83       	st	Z, r24
    4c5e:	de 01       	movw	r26, r28
    4c60:	a9 5b       	subi	r26, 0xB9	; 185
    4c62:	bf 4f       	sbci	r27, 0xFF	; 255
    4c64:	fe 01       	movw	r30, r28
    4c66:	e5 5b       	subi	r30, 0xB5	; 181
    4c68:	ff 4f       	sbci	r31, 0xFF	; 255
    4c6a:	80 81       	ld	r24, Z
    4c6c:	91 81       	ldd	r25, Z+1	; 0x01
    4c6e:	8d 93       	st	X+, r24
    4c70:	9c 93       	st	X, r25
    4c72:	fe 01       	movw	r30, r28
    4c74:	e9 5b       	subi	r30, 0xB9	; 185
    4c76:	ff 4f       	sbci	r31, 0xFF	; 255
    4c78:	80 81       	ld	r24, Z
    4c7a:	91 81       	ldd	r25, Z+1	; 0x01
    4c7c:	01 97       	sbiw	r24, 0x01	; 1
    4c7e:	f1 f7       	brne	.-4      	; 0x4c7c <LCD_displayCharacter+0x2fc>
    4c80:	fe 01       	movw	r30, r28
    4c82:	e9 5b       	subi	r30, 0xB9	; 185
    4c84:	ff 4f       	sbci	r31, 0xFF	; 255
    4c86:	91 83       	std	Z+1, r25	; 0x01
    4c88:	80 83       	st	Z, r24
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	/* Send first 4 bits in data(Most Significant four bits) on PA3 --> PA6   */
	PORTA = (PORTA & 0x87) | ((data & 0xF0) >> 1);
    4c8a:	ab e3       	ldi	r26, 0x3B	; 59
    4c8c:	b0 e0       	ldi	r27, 0x00	; 0
    4c8e:	eb e3       	ldi	r30, 0x3B	; 59
    4c90:	f0 e0       	ldi	r31, 0x00	; 0
    4c92:	80 81       	ld	r24, Z
    4c94:	28 2f       	mov	r18, r24
    4c96:	27 78       	andi	r18, 0x87	; 135
    4c98:	fe 01       	movw	r30, r28
    4c9a:	ed 59       	subi	r30, 0x9D	; 157
    4c9c:	ff 4f       	sbci	r31, 0xFF	; 255
    4c9e:	80 81       	ld	r24, Z
    4ca0:	88 2f       	mov	r24, r24
    4ca2:	90 e0       	ldi	r25, 0x00	; 0
    4ca4:	80 7f       	andi	r24, 0xF0	; 240
    4ca6:	90 70       	andi	r25, 0x00	; 0
    4ca8:	95 95       	asr	r25
    4caa:	87 95       	ror	r24
    4cac:	82 2b       	or	r24, r18
    4cae:	8c 93       	st	X, r24
    4cb0:	fe 01       	movw	r30, r28
    4cb2:	ed 5b       	subi	r30, 0xBD	; 189
    4cb4:	ff 4f       	sbci	r31, 0xFF	; 255
    4cb6:	80 e0       	ldi	r24, 0x00	; 0
    4cb8:	90 e0       	ldi	r25, 0x00	; 0
    4cba:	a0 e8       	ldi	r26, 0x80	; 128
    4cbc:	bf e3       	ldi	r27, 0x3F	; 63
    4cbe:	80 83       	st	Z, r24
    4cc0:	91 83       	std	Z+1, r25	; 0x01
    4cc2:	a2 83       	std	Z+2, r26	; 0x02
    4cc4:	b3 83       	std	Z+3, r27	; 0x03
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4cc6:	8e 01       	movw	r16, r28
    4cc8:	01 5c       	subi	r16, 0xC1	; 193
    4cca:	1f 4f       	sbci	r17, 0xFF	; 255
    4ccc:	fe 01       	movw	r30, r28
    4cce:	ed 5b       	subi	r30, 0xBD	; 189
    4cd0:	ff 4f       	sbci	r31, 0xFF	; 255
    4cd2:	60 81       	ld	r22, Z
    4cd4:	71 81       	ldd	r23, Z+1	; 0x01
    4cd6:	82 81       	ldd	r24, Z+2	; 0x02
    4cd8:	93 81       	ldd	r25, Z+3	; 0x03
    4cda:	20 e0       	ldi	r18, 0x00	; 0
    4cdc:	30 e0       	ldi	r19, 0x00	; 0
    4cde:	4a e7       	ldi	r20, 0x7A	; 122
    4ce0:	55 e4       	ldi	r21, 0x45	; 69
    4ce2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ce6:	dc 01       	movw	r26, r24
    4ce8:	cb 01       	movw	r24, r22
    4cea:	f8 01       	movw	r30, r16
    4cec:	80 83       	st	Z, r24
    4cee:	91 83       	std	Z+1, r25	; 0x01
    4cf0:	a2 83       	std	Z+2, r26	; 0x02
    4cf2:	b3 83       	std	Z+3, r27	; 0x03
	if (__tmp < 1.0)
    4cf4:	fe 01       	movw	r30, r28
    4cf6:	ff 96       	adiw	r30, 0x3f	; 63
    4cf8:	60 81       	ld	r22, Z
    4cfa:	71 81       	ldd	r23, Z+1	; 0x01
    4cfc:	82 81       	ldd	r24, Z+2	; 0x02
    4cfe:	93 81       	ldd	r25, Z+3	; 0x03
    4d00:	20 e0       	ldi	r18, 0x00	; 0
    4d02:	30 e0       	ldi	r19, 0x00	; 0
    4d04:	40 e8       	ldi	r20, 0x80	; 128
    4d06:	5f e3       	ldi	r21, 0x3F	; 63
    4d08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4d0c:	88 23       	and	r24, r24
    4d0e:	2c f4       	brge	.+10     	; 0x4d1a <LCD_displayCharacter+0x39a>
		__ticks = 1;
    4d10:	81 e0       	ldi	r24, 0x01	; 1
    4d12:	90 e0       	ldi	r25, 0x00	; 0
    4d14:	9e af       	std	Y+62, r25	; 0x3e
    4d16:	8d af       	std	Y+61, r24	; 0x3d
    4d18:	46 c0       	rjmp	.+140    	; 0x4da6 <LCD_displayCharacter+0x426>
	else if (__tmp > 65535)
    4d1a:	fe 01       	movw	r30, r28
    4d1c:	ff 96       	adiw	r30, 0x3f	; 63
    4d1e:	60 81       	ld	r22, Z
    4d20:	71 81       	ldd	r23, Z+1	; 0x01
    4d22:	82 81       	ldd	r24, Z+2	; 0x02
    4d24:	93 81       	ldd	r25, Z+3	; 0x03
    4d26:	20 e0       	ldi	r18, 0x00	; 0
    4d28:	3f ef       	ldi	r19, 0xFF	; 255
    4d2a:	4f e7       	ldi	r20, 0x7F	; 127
    4d2c:	57 e4       	ldi	r21, 0x47	; 71
    4d2e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4d32:	18 16       	cp	r1, r24
    4d34:	64 f5       	brge	.+88     	; 0x4d8e <LCD_displayCharacter+0x40e>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4d36:	fe 01       	movw	r30, r28
    4d38:	ed 5b       	subi	r30, 0xBD	; 189
    4d3a:	ff 4f       	sbci	r31, 0xFF	; 255
    4d3c:	60 81       	ld	r22, Z
    4d3e:	71 81       	ldd	r23, Z+1	; 0x01
    4d40:	82 81       	ldd	r24, Z+2	; 0x02
    4d42:	93 81       	ldd	r25, Z+3	; 0x03
    4d44:	20 e0       	ldi	r18, 0x00	; 0
    4d46:	30 e0       	ldi	r19, 0x00	; 0
    4d48:	40 e2       	ldi	r20, 0x20	; 32
    4d4a:	51 e4       	ldi	r21, 0x41	; 65
    4d4c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4d50:	dc 01       	movw	r26, r24
    4d52:	cb 01       	movw	r24, r22
    4d54:	bc 01       	movw	r22, r24
    4d56:	cd 01       	movw	r24, r26
    4d58:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d5c:	dc 01       	movw	r26, r24
    4d5e:	cb 01       	movw	r24, r22
    4d60:	9e af       	std	Y+62, r25	; 0x3e
    4d62:	8d af       	std	Y+61, r24	; 0x3d
    4d64:	0f c0       	rjmp	.+30     	; 0x4d84 <LCD_displayCharacter+0x404>
    4d66:	80 e9       	ldi	r24, 0x90	; 144
    4d68:	91 e0       	ldi	r25, 0x01	; 1
    4d6a:	9c af       	std	Y+60, r25	; 0x3c
    4d6c:	8b af       	std	Y+59, r24	; 0x3b
    4d6e:	8b ad       	ldd	r24, Y+59	; 0x3b
    4d70:	9c ad       	ldd	r25, Y+60	; 0x3c
    4d72:	01 97       	sbiw	r24, 0x01	; 1
    4d74:	f1 f7       	brne	.-4      	; 0x4d72 <LCD_displayCharacter+0x3f2>
    4d76:	9c af       	std	Y+60, r25	; 0x3c
    4d78:	8b af       	std	Y+59, r24	; 0x3b
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4d7a:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d7c:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d7e:	01 97       	sbiw	r24, 0x01	; 1
    4d80:	9e af       	std	Y+62, r25	; 0x3e
    4d82:	8d af       	std	Y+61, r24	; 0x3d
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4d84:	8d ad       	ldd	r24, Y+61	; 0x3d
    4d86:	9e ad       	ldd	r25, Y+62	; 0x3e
    4d88:	00 97       	sbiw	r24, 0x00	; 0
    4d8a:	69 f7       	brne	.-38     	; 0x4d66 <LCD_displayCharacter+0x3e6>
    4d8c:	16 c0       	rjmp	.+44     	; 0x4dba <LCD_displayCharacter+0x43a>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4d8e:	fe 01       	movw	r30, r28
    4d90:	ff 96       	adiw	r30, 0x3f	; 63
    4d92:	60 81       	ld	r22, Z
    4d94:	71 81       	ldd	r23, Z+1	; 0x01
    4d96:	82 81       	ldd	r24, Z+2	; 0x02
    4d98:	93 81       	ldd	r25, Z+3	; 0x03
    4d9a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4d9e:	dc 01       	movw	r26, r24
    4da0:	cb 01       	movw	r24, r22
    4da2:	9e af       	std	Y+62, r25	; 0x3e
    4da4:	8d af       	std	Y+61, r24	; 0x3d
    4da6:	8d ad       	ldd	r24, Y+61	; 0x3d
    4da8:	9e ad       	ldd	r25, Y+62	; 0x3e
    4daa:	9a af       	std	Y+58, r25	; 0x3a
    4dac:	89 af       	std	Y+57, r24	; 0x39
    4dae:	89 ad       	ldd	r24, Y+57	; 0x39
    4db0:	9a ad       	ldd	r25, Y+58	; 0x3a
    4db2:	01 97       	sbiw	r24, 0x01	; 1
    4db4:	f1 f7       	brne	.-4      	; 0x4db2 <LCD_displayCharacter+0x432>
    4db6:	9a af       	std	Y+58, r25	; 0x3a
    4db8:	89 af       	std	Y+57, r24	; 0x39

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLR_BIT(PORTA,2);  /* Disable LCD E=0 */
    4dba:	ab e3       	ldi	r26, 0x3B	; 59
    4dbc:	b0 e0       	ldi	r27, 0x00	; 0
    4dbe:	eb e3       	ldi	r30, 0x3B	; 59
    4dc0:	f0 e0       	ldi	r31, 0x00	; 0
    4dc2:	80 81       	ld	r24, Z
    4dc4:	8b 7f       	andi	r24, 0xFB	; 251
    4dc6:	8c 93       	st	X, r24
    4dc8:	80 e0       	ldi	r24, 0x00	; 0
    4dca:	90 e0       	ldi	r25, 0x00	; 0
    4dcc:	a0 e8       	ldi	r26, 0x80	; 128
    4dce:	bf e3       	ldi	r27, 0x3F	; 63
    4dd0:	8d ab       	std	Y+53, r24	; 0x35
    4dd2:	9e ab       	std	Y+54, r25	; 0x36
    4dd4:	af ab       	std	Y+55, r26	; 0x37
    4dd6:	b8 af       	std	Y+56, r27	; 0x38
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4dd8:	6d a9       	ldd	r22, Y+53	; 0x35
    4dda:	7e a9       	ldd	r23, Y+54	; 0x36
    4ddc:	8f a9       	ldd	r24, Y+55	; 0x37
    4dde:	98 ad       	ldd	r25, Y+56	; 0x38
    4de0:	20 e0       	ldi	r18, 0x00	; 0
    4de2:	30 e0       	ldi	r19, 0x00	; 0
    4de4:	4a e7       	ldi	r20, 0x7A	; 122
    4de6:	55 e4       	ldi	r21, 0x45	; 69
    4de8:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4dec:	dc 01       	movw	r26, r24
    4dee:	cb 01       	movw	r24, r22
    4df0:	89 ab       	std	Y+49, r24	; 0x31
    4df2:	9a ab       	std	Y+50, r25	; 0x32
    4df4:	ab ab       	std	Y+51, r26	; 0x33
    4df6:	bc ab       	std	Y+52, r27	; 0x34
	if (__tmp < 1.0)
    4df8:	69 a9       	ldd	r22, Y+49	; 0x31
    4dfa:	7a a9       	ldd	r23, Y+50	; 0x32
    4dfc:	8b a9       	ldd	r24, Y+51	; 0x33
    4dfe:	9c a9       	ldd	r25, Y+52	; 0x34
    4e00:	20 e0       	ldi	r18, 0x00	; 0
    4e02:	30 e0       	ldi	r19, 0x00	; 0
    4e04:	40 e8       	ldi	r20, 0x80	; 128
    4e06:	5f e3       	ldi	r21, 0x3F	; 63
    4e08:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4e0c:	88 23       	and	r24, r24
    4e0e:	2c f4       	brge	.+10     	; 0x4e1a <LCD_displayCharacter+0x49a>
		__ticks = 1;
    4e10:	81 e0       	ldi	r24, 0x01	; 1
    4e12:	90 e0       	ldi	r25, 0x00	; 0
    4e14:	98 ab       	std	Y+48, r25	; 0x30
    4e16:	8f a7       	std	Y+47, r24	; 0x2f
    4e18:	3f c0       	rjmp	.+126    	; 0x4e98 <LCD_displayCharacter+0x518>
	else if (__tmp > 65535)
    4e1a:	69 a9       	ldd	r22, Y+49	; 0x31
    4e1c:	7a a9       	ldd	r23, Y+50	; 0x32
    4e1e:	8b a9       	ldd	r24, Y+51	; 0x33
    4e20:	9c a9       	ldd	r25, Y+52	; 0x34
    4e22:	20 e0       	ldi	r18, 0x00	; 0
    4e24:	3f ef       	ldi	r19, 0xFF	; 255
    4e26:	4f e7       	ldi	r20, 0x7F	; 127
    4e28:	57 e4       	ldi	r21, 0x47	; 71
    4e2a:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4e2e:	18 16       	cp	r1, r24
    4e30:	4c f5       	brge	.+82     	; 0x4e84 <LCD_displayCharacter+0x504>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4e32:	6d a9       	ldd	r22, Y+53	; 0x35
    4e34:	7e a9       	ldd	r23, Y+54	; 0x36
    4e36:	8f a9       	ldd	r24, Y+55	; 0x37
    4e38:	98 ad       	ldd	r25, Y+56	; 0x38
    4e3a:	20 e0       	ldi	r18, 0x00	; 0
    4e3c:	30 e0       	ldi	r19, 0x00	; 0
    4e3e:	40 e2       	ldi	r20, 0x20	; 32
    4e40:	51 e4       	ldi	r21, 0x41	; 65
    4e42:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4e46:	dc 01       	movw	r26, r24
    4e48:	cb 01       	movw	r24, r22
    4e4a:	bc 01       	movw	r22, r24
    4e4c:	cd 01       	movw	r24, r26
    4e4e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e52:	dc 01       	movw	r26, r24
    4e54:	cb 01       	movw	r24, r22
    4e56:	98 ab       	std	Y+48, r25	; 0x30
    4e58:	8f a7       	std	Y+47, r24	; 0x2f
    4e5a:	0f c0       	rjmp	.+30     	; 0x4e7a <LCD_displayCharacter+0x4fa>
    4e5c:	80 e9       	ldi	r24, 0x90	; 144
    4e5e:	91 e0       	ldi	r25, 0x01	; 1
    4e60:	9e a7       	std	Y+46, r25	; 0x2e
    4e62:	8d a7       	std	Y+45, r24	; 0x2d
    4e64:	8d a5       	ldd	r24, Y+45	; 0x2d
    4e66:	9e a5       	ldd	r25, Y+46	; 0x2e
    4e68:	01 97       	sbiw	r24, 0x01	; 1
    4e6a:	f1 f7       	brne	.-4      	; 0x4e68 <LCD_displayCharacter+0x4e8>
    4e6c:	9e a7       	std	Y+46, r25	; 0x2e
    4e6e:	8d a7       	std	Y+45, r24	; 0x2d
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4e70:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e72:	98 a9       	ldd	r25, Y+48	; 0x30
    4e74:	01 97       	sbiw	r24, 0x01	; 1
    4e76:	98 ab       	std	Y+48, r25	; 0x30
    4e78:	8f a7       	std	Y+47, r24	; 0x2f
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4e7a:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e7c:	98 a9       	ldd	r25, Y+48	; 0x30
    4e7e:	00 97       	sbiw	r24, 0x00	; 0
    4e80:	69 f7       	brne	.-38     	; 0x4e5c <LCD_displayCharacter+0x4dc>
    4e82:	14 c0       	rjmp	.+40     	; 0x4eac <LCD_displayCharacter+0x52c>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4e84:	69 a9       	ldd	r22, Y+49	; 0x31
    4e86:	7a a9       	ldd	r23, Y+50	; 0x32
    4e88:	8b a9       	ldd	r24, Y+51	; 0x33
    4e8a:	9c a9       	ldd	r25, Y+52	; 0x34
    4e8c:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4e90:	dc 01       	movw	r26, r24
    4e92:	cb 01       	movw	r24, r22
    4e94:	98 ab       	std	Y+48, r25	; 0x30
    4e96:	8f a7       	std	Y+47, r24	; 0x2f
    4e98:	8f a5       	ldd	r24, Y+47	; 0x2f
    4e9a:	98 a9       	ldd	r25, Y+48	; 0x30
    4e9c:	9c a7       	std	Y+44, r25	; 0x2c
    4e9e:	8b a7       	std	Y+43, r24	; 0x2b
    4ea0:	8b a5       	ldd	r24, Y+43	; 0x2b
    4ea2:	9c a5       	ldd	r25, Y+44	; 0x2c
    4ea4:	01 97       	sbiw	r24, 0x01	; 1
    4ea6:	f1 f7       	brne	.-4      	; 0x4ea4 <LCD_displayCharacter+0x524>
    4ea8:	9c a7       	std	Y+44, r25	; 0x2c
    4eaa:	8b a7       	std	Y+43, r24	; 0x2b
	_delay_ms(1); /* delay for processing Th = 13ns */
	SET_BIT(PORTA,2);  /* Enable LCD E=1 */
    4eac:	ab e3       	ldi	r26, 0x3B	; 59
    4eae:	b0 e0       	ldi	r27, 0x00	; 0
    4eb0:	eb e3       	ldi	r30, 0x3B	; 59
    4eb2:	f0 e0       	ldi	r31, 0x00	; 0
    4eb4:	80 81       	ld	r24, Z
    4eb6:	84 60       	ori	r24, 0x04	; 4
    4eb8:	8c 93       	st	X, r24
    4eba:	80 e0       	ldi	r24, 0x00	; 0
    4ebc:	90 e0       	ldi	r25, 0x00	; 0
    4ebe:	a0 e8       	ldi	r26, 0x80	; 128
    4ec0:	bf e3       	ldi	r27, 0x3F	; 63
    4ec2:	8f a3       	std	Y+39, r24	; 0x27
    4ec4:	98 a7       	std	Y+40, r25	; 0x28
    4ec6:	a9 a7       	std	Y+41, r26	; 0x29
    4ec8:	ba a7       	std	Y+42, r27	; 0x2a
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4eca:	6f a1       	ldd	r22, Y+39	; 0x27
    4ecc:	78 a5       	ldd	r23, Y+40	; 0x28
    4ece:	89 a5       	ldd	r24, Y+41	; 0x29
    4ed0:	9a a5       	ldd	r25, Y+42	; 0x2a
    4ed2:	20 e0       	ldi	r18, 0x00	; 0
    4ed4:	30 e0       	ldi	r19, 0x00	; 0
    4ed6:	4a e7       	ldi	r20, 0x7A	; 122
    4ed8:	55 e4       	ldi	r21, 0x45	; 69
    4eda:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ede:	dc 01       	movw	r26, r24
    4ee0:	cb 01       	movw	r24, r22
    4ee2:	8b a3       	std	Y+35, r24	; 0x23
    4ee4:	9c a3       	std	Y+36, r25	; 0x24
    4ee6:	ad a3       	std	Y+37, r26	; 0x25
    4ee8:	be a3       	std	Y+38, r27	; 0x26
	if (__tmp < 1.0)
    4eea:	6b a1       	ldd	r22, Y+35	; 0x23
    4eec:	7c a1       	ldd	r23, Y+36	; 0x24
    4eee:	8d a1       	ldd	r24, Y+37	; 0x25
    4ef0:	9e a1       	ldd	r25, Y+38	; 0x26
    4ef2:	20 e0       	ldi	r18, 0x00	; 0
    4ef4:	30 e0       	ldi	r19, 0x00	; 0
    4ef6:	40 e8       	ldi	r20, 0x80	; 128
    4ef8:	5f e3       	ldi	r21, 0x3F	; 63
    4efa:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    4efe:	88 23       	and	r24, r24
    4f00:	2c f4       	brge	.+10     	; 0x4f0c <LCD_displayCharacter+0x58c>
		__ticks = 1;
    4f02:	81 e0       	ldi	r24, 0x01	; 1
    4f04:	90 e0       	ldi	r25, 0x00	; 0
    4f06:	9a a3       	std	Y+34, r25	; 0x22
    4f08:	89 a3       	std	Y+33, r24	; 0x21
    4f0a:	3f c0       	rjmp	.+126    	; 0x4f8a <LCD_displayCharacter+0x60a>
	else if (__tmp > 65535)
    4f0c:	6b a1       	ldd	r22, Y+35	; 0x23
    4f0e:	7c a1       	ldd	r23, Y+36	; 0x24
    4f10:	8d a1       	ldd	r24, Y+37	; 0x25
    4f12:	9e a1       	ldd	r25, Y+38	; 0x26
    4f14:	20 e0       	ldi	r18, 0x00	; 0
    4f16:	3f ef       	ldi	r19, 0xFF	; 255
    4f18:	4f e7       	ldi	r20, 0x7F	; 127
    4f1a:	57 e4       	ldi	r21, 0x47	; 71
    4f1c:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    4f20:	18 16       	cp	r1, r24
    4f22:	4c f5       	brge	.+82     	; 0x4f76 <LCD_displayCharacter+0x5f6>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    4f24:	6f a1       	ldd	r22, Y+39	; 0x27
    4f26:	78 a5       	ldd	r23, Y+40	; 0x28
    4f28:	89 a5       	ldd	r24, Y+41	; 0x29
    4f2a:	9a a5       	ldd	r25, Y+42	; 0x2a
    4f2c:	20 e0       	ldi	r18, 0x00	; 0
    4f2e:	30 e0       	ldi	r19, 0x00	; 0
    4f30:	40 e2       	ldi	r20, 0x20	; 32
    4f32:	51 e4       	ldi	r21, 0x41	; 65
    4f34:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4f38:	dc 01       	movw	r26, r24
    4f3a:	cb 01       	movw	r24, r22
    4f3c:	bc 01       	movw	r22, r24
    4f3e:	cd 01       	movw	r24, r26
    4f40:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f44:	dc 01       	movw	r26, r24
    4f46:	cb 01       	movw	r24, r22
    4f48:	9a a3       	std	Y+34, r25	; 0x22
    4f4a:	89 a3       	std	Y+33, r24	; 0x21
    4f4c:	0f c0       	rjmp	.+30     	; 0x4f6c <LCD_displayCharacter+0x5ec>
    4f4e:	80 e9       	ldi	r24, 0x90	; 144
    4f50:	91 e0       	ldi	r25, 0x01	; 1
    4f52:	98 a3       	std	Y+32, r25	; 0x20
    4f54:	8f 8f       	std	Y+31, r24	; 0x1f
    4f56:	8f 8d       	ldd	r24, Y+31	; 0x1f
    4f58:	98 a1       	ldd	r25, Y+32	; 0x20
    4f5a:	01 97       	sbiw	r24, 0x01	; 1
    4f5c:	f1 f7       	brne	.-4      	; 0x4f5a <LCD_displayCharacter+0x5da>
    4f5e:	98 a3       	std	Y+32, r25	; 0x20
    4f60:	8f 8f       	std	Y+31, r24	; 0x1f
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    4f62:	89 a1       	ldd	r24, Y+33	; 0x21
    4f64:	9a a1       	ldd	r25, Y+34	; 0x22
    4f66:	01 97       	sbiw	r24, 0x01	; 1
    4f68:	9a a3       	std	Y+34, r25	; 0x22
    4f6a:	89 a3       	std	Y+33, r24	; 0x21
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    4f6c:	89 a1       	ldd	r24, Y+33	; 0x21
    4f6e:	9a a1       	ldd	r25, Y+34	; 0x22
    4f70:	00 97       	sbiw	r24, 0x00	; 0
    4f72:	69 f7       	brne	.-38     	; 0x4f4e <LCD_displayCharacter+0x5ce>
    4f74:	14 c0       	rjmp	.+40     	; 0x4f9e <LCD_displayCharacter+0x61e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    4f76:	6b a1       	ldd	r22, Y+35	; 0x23
    4f78:	7c a1       	ldd	r23, Y+36	; 0x24
    4f7a:	8d a1       	ldd	r24, Y+37	; 0x25
    4f7c:	9e a1       	ldd	r25, Y+38	; 0x26
    4f7e:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    4f82:	dc 01       	movw	r26, r24
    4f84:	cb 01       	movw	r24, r22
    4f86:	9a a3       	std	Y+34, r25	; 0x22
    4f88:	89 a3       	std	Y+33, r24	; 0x21
    4f8a:	89 a1       	ldd	r24, Y+33	; 0x21
    4f8c:	9a a1       	ldd	r25, Y+34	; 0x22
    4f8e:	9e 8f       	std	Y+30, r25	; 0x1e
    4f90:	8d 8f       	std	Y+29, r24	; 0x1d
    4f92:	8d 8d       	ldd	r24, Y+29	; 0x1d
    4f94:	9e 8d       	ldd	r25, Y+30	; 0x1e
    4f96:	01 97       	sbiw	r24, 0x01	; 1
    4f98:	f1 f7       	brne	.-4      	; 0x4f96 <LCD_displayCharacter+0x616>
    4f9a:	9e 8f       	std	Y+30, r25	; 0x1e
    4f9c:	8d 8f       	std	Y+29, r24	; 0x1d
	_delay_ms(1); /* delay for processing Tpw - Tdws = 190ns */

	/* Send second 4 bits in data(Least Significant four bits) on PA3 --> PA6   */
	PORTA = (PORTA & 0x87) | ((data & 0x0F) << 3);
    4f9e:	ab e3       	ldi	r26, 0x3B	; 59
    4fa0:	b0 e0       	ldi	r27, 0x00	; 0
    4fa2:	eb e3       	ldi	r30, 0x3B	; 59
    4fa4:	f0 e0       	ldi	r31, 0x00	; 0
    4fa6:	80 81       	ld	r24, Z
    4fa8:	28 2f       	mov	r18, r24
    4faa:	27 78       	andi	r18, 0x87	; 135
    4fac:	fe 01       	movw	r30, r28
    4fae:	ed 59       	subi	r30, 0x9D	; 157
    4fb0:	ff 4f       	sbci	r31, 0xFF	; 255
    4fb2:	80 81       	ld	r24, Z
    4fb4:	88 2f       	mov	r24, r24
    4fb6:	90 e0       	ldi	r25, 0x00	; 0
    4fb8:	8f 70       	andi	r24, 0x0F	; 15
    4fba:	90 70       	andi	r25, 0x00	; 0
    4fbc:	88 0f       	add	r24, r24
    4fbe:	99 1f       	adc	r25, r25
    4fc0:	88 0f       	add	r24, r24
    4fc2:	99 1f       	adc	r25, r25
    4fc4:	88 0f       	add	r24, r24
    4fc6:	99 1f       	adc	r25, r25
    4fc8:	82 2b       	or	r24, r18
    4fca:	8c 93       	st	X, r24
    4fcc:	80 e0       	ldi	r24, 0x00	; 0
    4fce:	90 e0       	ldi	r25, 0x00	; 0
    4fd0:	a0 e8       	ldi	r26, 0x80	; 128
    4fd2:	bf e3       	ldi	r27, 0x3F	; 63
    4fd4:	89 8f       	std	Y+25, r24	; 0x19
    4fd6:	9a 8f       	std	Y+26, r25	; 0x1a
    4fd8:	ab 8f       	std	Y+27, r26	; 0x1b
    4fda:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    4fdc:	69 8d       	ldd	r22, Y+25	; 0x19
    4fde:	7a 8d       	ldd	r23, Y+26	; 0x1a
    4fe0:	8b 8d       	ldd	r24, Y+27	; 0x1b
    4fe2:	9c 8d       	ldd	r25, Y+28	; 0x1c
    4fe4:	20 e0       	ldi	r18, 0x00	; 0
    4fe6:	30 e0       	ldi	r19, 0x00	; 0
    4fe8:	4a e7       	ldi	r20, 0x7A	; 122
    4fea:	55 e4       	ldi	r21, 0x45	; 69
    4fec:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    4ff0:	dc 01       	movw	r26, r24
    4ff2:	cb 01       	movw	r24, r22
    4ff4:	8d 8b       	std	Y+21, r24	; 0x15
    4ff6:	9e 8b       	std	Y+22, r25	; 0x16
    4ff8:	af 8b       	std	Y+23, r26	; 0x17
    4ffa:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    4ffc:	6d 89       	ldd	r22, Y+21	; 0x15
    4ffe:	7e 89       	ldd	r23, Y+22	; 0x16
    5000:	8f 89       	ldd	r24, Y+23	; 0x17
    5002:	98 8d       	ldd	r25, Y+24	; 0x18
    5004:	20 e0       	ldi	r18, 0x00	; 0
    5006:	30 e0       	ldi	r19, 0x00	; 0
    5008:	40 e8       	ldi	r20, 0x80	; 128
    500a:	5f e3       	ldi	r21, 0x3F	; 63
    500c:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5010:	88 23       	and	r24, r24
    5012:	2c f4       	brge	.+10     	; 0x501e <LCD_displayCharacter+0x69e>
		__ticks = 1;
    5014:	81 e0       	ldi	r24, 0x01	; 1
    5016:	90 e0       	ldi	r25, 0x00	; 0
    5018:	9c 8b       	std	Y+20, r25	; 0x14
    501a:	8b 8b       	std	Y+19, r24	; 0x13
    501c:	3f c0       	rjmp	.+126    	; 0x509c <LCD_displayCharacter+0x71c>
	else if (__tmp > 65535)
    501e:	6d 89       	ldd	r22, Y+21	; 0x15
    5020:	7e 89       	ldd	r23, Y+22	; 0x16
    5022:	8f 89       	ldd	r24, Y+23	; 0x17
    5024:	98 8d       	ldd	r25, Y+24	; 0x18
    5026:	20 e0       	ldi	r18, 0x00	; 0
    5028:	3f ef       	ldi	r19, 0xFF	; 255
    502a:	4f e7       	ldi	r20, 0x7F	; 127
    502c:	57 e4       	ldi	r21, 0x47	; 71
    502e:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5032:	18 16       	cp	r1, r24
    5034:	4c f5       	brge	.+82     	; 0x5088 <LCD_displayCharacter+0x708>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5036:	69 8d       	ldd	r22, Y+25	; 0x19
    5038:	7a 8d       	ldd	r23, Y+26	; 0x1a
    503a:	8b 8d       	ldd	r24, Y+27	; 0x1b
    503c:	9c 8d       	ldd	r25, Y+28	; 0x1c
    503e:	20 e0       	ldi	r18, 0x00	; 0
    5040:	30 e0       	ldi	r19, 0x00	; 0
    5042:	40 e2       	ldi	r20, 0x20	; 32
    5044:	51 e4       	ldi	r21, 0x41	; 65
    5046:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    504a:	dc 01       	movw	r26, r24
    504c:	cb 01       	movw	r24, r22
    504e:	bc 01       	movw	r22, r24
    5050:	cd 01       	movw	r24, r26
    5052:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5056:	dc 01       	movw	r26, r24
    5058:	cb 01       	movw	r24, r22
    505a:	9c 8b       	std	Y+20, r25	; 0x14
    505c:	8b 8b       	std	Y+19, r24	; 0x13
    505e:	0f c0       	rjmp	.+30     	; 0x507e <LCD_displayCharacter+0x6fe>
    5060:	80 e9       	ldi	r24, 0x90	; 144
    5062:	91 e0       	ldi	r25, 0x01	; 1
    5064:	9a 8b       	std	Y+18, r25	; 0x12
    5066:	89 8b       	std	Y+17, r24	; 0x11
    5068:	89 89       	ldd	r24, Y+17	; 0x11
    506a:	9a 89       	ldd	r25, Y+18	; 0x12
    506c:	01 97       	sbiw	r24, 0x01	; 1
    506e:	f1 f7       	brne	.-4      	; 0x506c <LCD_displayCharacter+0x6ec>
    5070:	9a 8b       	std	Y+18, r25	; 0x12
    5072:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5074:	8b 89       	ldd	r24, Y+19	; 0x13
    5076:	9c 89       	ldd	r25, Y+20	; 0x14
    5078:	01 97       	sbiw	r24, 0x01	; 1
    507a:	9c 8b       	std	Y+20, r25	; 0x14
    507c:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    507e:	8b 89       	ldd	r24, Y+19	; 0x13
    5080:	9c 89       	ldd	r25, Y+20	; 0x14
    5082:	00 97       	sbiw	r24, 0x00	; 0
    5084:	69 f7       	brne	.-38     	; 0x5060 <LCD_displayCharacter+0x6e0>
    5086:	14 c0       	rjmp	.+40     	; 0x50b0 <LCD_displayCharacter+0x730>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    5088:	6d 89       	ldd	r22, Y+21	; 0x15
    508a:	7e 89       	ldd	r23, Y+22	; 0x16
    508c:	8f 89       	ldd	r24, Y+23	; 0x17
    508e:	98 8d       	ldd	r25, Y+24	; 0x18
    5090:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5094:	dc 01       	movw	r26, r24
    5096:	cb 01       	movw	r24, r22
    5098:	9c 8b       	std	Y+20, r25	; 0x14
    509a:	8b 8b       	std	Y+19, r24	; 0x13
    509c:	8b 89       	ldd	r24, Y+19	; 0x13
    509e:	9c 89       	ldd	r25, Y+20	; 0x14
    50a0:	98 8b       	std	Y+16, r25	; 0x10
    50a2:	8f 87       	std	Y+15, r24	; 0x0f
    50a4:	8f 85       	ldd	r24, Y+15	; 0x0f
    50a6:	98 89       	ldd	r25, Y+16	; 0x10
    50a8:	01 97       	sbiw	r24, 0x01	; 1
    50aa:	f1 f7       	brne	.-4      	; 0x50a8 <LCD_displayCharacter+0x728>
    50ac:	98 8b       	std	Y+16, r25	; 0x10
    50ae:	8f 87       	std	Y+15, r24	; 0x0f

	_delay_ms(1); /* delay for processing Tdsw = 100ns */
	CLR_BIT(PORTA,2);  /* Disable LCD E=0 */
    50b0:	ab e3       	ldi	r26, 0x3B	; 59
    50b2:	b0 e0       	ldi	r27, 0x00	; 0
    50b4:	eb e3       	ldi	r30, 0x3B	; 59
    50b6:	f0 e0       	ldi	r31, 0x00	; 0
    50b8:	80 81       	ld	r24, Z
    50ba:	8b 7f       	andi	r24, 0xFB	; 251
    50bc:	8c 93       	st	X, r24
    50be:	80 e0       	ldi	r24, 0x00	; 0
    50c0:	90 e0       	ldi	r25, 0x00	; 0
    50c2:	a0 e8       	ldi	r26, 0x80	; 128
    50c4:	bf e3       	ldi	r27, 0x3F	; 63
    50c6:	8b 87       	std	Y+11, r24	; 0x0b
    50c8:	9c 87       	std	Y+12, r25	; 0x0c
    50ca:	ad 87       	std	Y+13, r26	; 0x0d
    50cc:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    50ce:	6b 85       	ldd	r22, Y+11	; 0x0b
    50d0:	7c 85       	ldd	r23, Y+12	; 0x0c
    50d2:	8d 85       	ldd	r24, Y+13	; 0x0d
    50d4:	9e 85       	ldd	r25, Y+14	; 0x0e
    50d6:	20 e0       	ldi	r18, 0x00	; 0
    50d8:	30 e0       	ldi	r19, 0x00	; 0
    50da:	4a e7       	ldi	r20, 0x7A	; 122
    50dc:	55 e4       	ldi	r21, 0x45	; 69
    50de:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    50e2:	dc 01       	movw	r26, r24
    50e4:	cb 01       	movw	r24, r22
    50e6:	8f 83       	std	Y+7, r24	; 0x07
    50e8:	98 87       	std	Y+8, r25	; 0x08
    50ea:	a9 87       	std	Y+9, r26	; 0x09
    50ec:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    50ee:	6f 81       	ldd	r22, Y+7	; 0x07
    50f0:	78 85       	ldd	r23, Y+8	; 0x08
    50f2:	89 85       	ldd	r24, Y+9	; 0x09
    50f4:	9a 85       	ldd	r25, Y+10	; 0x0a
    50f6:	20 e0       	ldi	r18, 0x00	; 0
    50f8:	30 e0       	ldi	r19, 0x00	; 0
    50fa:	40 e8       	ldi	r20, 0x80	; 128
    50fc:	5f e3       	ldi	r21, 0x3F	; 63
    50fe:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5102:	88 23       	and	r24, r24
    5104:	2c f4       	brge	.+10     	; 0x5110 <LCD_displayCharacter+0x790>
		__ticks = 1;
    5106:	81 e0       	ldi	r24, 0x01	; 1
    5108:	90 e0       	ldi	r25, 0x00	; 0
    510a:	9e 83       	std	Y+6, r25	; 0x06
    510c:	8d 83       	std	Y+5, r24	; 0x05
    510e:	3f c0       	rjmp	.+126    	; 0x518e <LCD_displayCharacter+0x80e>
	else if (__tmp > 65535)
    5110:	6f 81       	ldd	r22, Y+7	; 0x07
    5112:	78 85       	ldd	r23, Y+8	; 0x08
    5114:	89 85       	ldd	r24, Y+9	; 0x09
    5116:	9a 85       	ldd	r25, Y+10	; 0x0a
    5118:	20 e0       	ldi	r18, 0x00	; 0
    511a:	3f ef       	ldi	r19, 0xFF	; 255
    511c:	4f e7       	ldi	r20, 0x7F	; 127
    511e:	57 e4       	ldi	r21, 0x47	; 71
    5120:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    5124:	18 16       	cp	r1, r24
    5126:	4c f5       	brge	.+82     	; 0x517a <LCD_displayCharacter+0x7fa>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    5128:	6b 85       	ldd	r22, Y+11	; 0x0b
    512a:	7c 85       	ldd	r23, Y+12	; 0x0c
    512c:	8d 85       	ldd	r24, Y+13	; 0x0d
    512e:	9e 85       	ldd	r25, Y+14	; 0x0e
    5130:	20 e0       	ldi	r18, 0x00	; 0
    5132:	30 e0       	ldi	r19, 0x00	; 0
    5134:	40 e2       	ldi	r20, 0x20	; 32
    5136:	51 e4       	ldi	r21, 0x41	; 65
    5138:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    513c:	dc 01       	movw	r26, r24
    513e:	cb 01       	movw	r24, r22
    5140:	bc 01       	movw	r22, r24
    5142:	cd 01       	movw	r24, r26
    5144:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5148:	dc 01       	movw	r26, r24
    514a:	cb 01       	movw	r24, r22
    514c:	9e 83       	std	Y+6, r25	; 0x06
    514e:	8d 83       	std	Y+5, r24	; 0x05
    5150:	0f c0       	rjmp	.+30     	; 0x5170 <LCD_displayCharacter+0x7f0>
    5152:	80 e9       	ldi	r24, 0x90	; 144
    5154:	91 e0       	ldi	r25, 0x01	; 1
    5156:	9c 83       	std	Y+4, r25	; 0x04
    5158:	8b 83       	std	Y+3, r24	; 0x03
    515a:	8b 81       	ldd	r24, Y+3	; 0x03
    515c:	9c 81       	ldd	r25, Y+4	; 0x04
    515e:	01 97       	sbiw	r24, 0x01	; 1
    5160:	f1 f7       	brne	.-4      	; 0x515e <LCD_displayCharacter+0x7de>
    5162:	9c 83       	std	Y+4, r25	; 0x04
    5164:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    5166:	8d 81       	ldd	r24, Y+5	; 0x05
    5168:	9e 81       	ldd	r25, Y+6	; 0x06
    516a:	01 97       	sbiw	r24, 0x01	; 1
    516c:	9e 83       	std	Y+6, r25	; 0x06
    516e:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5170:	8d 81       	ldd	r24, Y+5	; 0x05
    5172:	9e 81       	ldd	r25, Y+6	; 0x06
    5174:	00 97       	sbiw	r24, 0x00	; 0
    5176:	69 f7       	brne	.-38     	; 0x5152 <LCD_displayCharacter+0x7d2>
    5178:	14 c0       	rjmp	.+40     	; 0x51a2 <LCD_displayCharacter+0x822>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    517a:	6f 81       	ldd	r22, Y+7	; 0x07
    517c:	78 85       	ldd	r23, Y+8	; 0x08
    517e:	89 85       	ldd	r24, Y+9	; 0x09
    5180:	9a 85       	ldd	r25, Y+10	; 0x0a
    5182:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    5186:	dc 01       	movw	r26, r24
    5188:	cb 01       	movw	r24, r22
    518a:	9e 83       	std	Y+6, r25	; 0x06
    518c:	8d 83       	std	Y+5, r24	; 0x05
    518e:	8d 81       	ldd	r24, Y+5	; 0x05
    5190:	9e 81       	ldd	r25, Y+6	; 0x06
    5192:	9a 83       	std	Y+2, r25	; 0x02
    5194:	89 83       	std	Y+1, r24	; 0x01
    5196:	89 81       	ldd	r24, Y+1	; 0x01
    5198:	9a 81       	ldd	r25, Y+2	; 0x02
    519a:	01 97       	sbiw	r24, 0x01	; 1
    519c:	f1 f7       	brne	.-4      	; 0x519a <LCD_displayCharacter+0x81a>
    519e:	9a 83       	std	Y+2, r25	; 0x02
    51a0:	89 83       	std	Y+1, r24	; 0x01
	_delay_ms(1); /* delay for processing Th = 13ns */
}
    51a2:	cd 59       	subi	r28, 0x9D	; 157
    51a4:	df 4f       	sbci	r29, 0xFF	; 255
    51a6:	0f b6       	in	r0, 0x3f	; 63
    51a8:	f8 94       	cli
    51aa:	de bf       	out	0x3e, r29	; 62
    51ac:	0f be       	out	0x3f, r0	; 63
    51ae:	cd bf       	out	0x3d, r28	; 61
    51b0:	cf 91       	pop	r28
    51b2:	df 91       	pop	r29
    51b4:	1f 91       	pop	r17
    51b6:	0f 91       	pop	r16
    51b8:	08 95       	ret

000051ba <LCD_displayString>:

void LCD_displayString(char *Str)
{
    51ba:	df 93       	push	r29
    51bc:	cf 93       	push	r28
    51be:	00 d0       	rcall	.+0      	; 0x51c0 <LCD_displayString+0x6>
    51c0:	0f 92       	push	r0
    51c2:	cd b7       	in	r28, 0x3d	; 61
    51c4:	de b7       	in	r29, 0x3e	; 62
    51c6:	9b 83       	std	Y+3, r25	; 0x03
    51c8:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char i = 0;
    51ca:	19 82       	std	Y+1, r1	; 0x01
    51cc:	0e c0       	rjmp	.+28     	; 0x51ea <LCD_displayString+0x30>
	while(Str[i] != '\0')
	{
		LCD_displayCharacter(Str[i]);
    51ce:	89 81       	ldd	r24, Y+1	; 0x01
    51d0:	28 2f       	mov	r18, r24
    51d2:	30 e0       	ldi	r19, 0x00	; 0
    51d4:	8a 81       	ldd	r24, Y+2	; 0x02
    51d6:	9b 81       	ldd	r25, Y+3	; 0x03
    51d8:	fc 01       	movw	r30, r24
    51da:	e2 0f       	add	r30, r18
    51dc:	f3 1f       	adc	r31, r19
    51de:	80 81       	ld	r24, Z
    51e0:	0e 94 c0 24 	call	0x4980	; 0x4980 <LCD_displayCharacter>
		i++;
    51e4:	89 81       	ldd	r24, Y+1	; 0x01
    51e6:	8f 5f       	subi	r24, 0xFF	; 255
    51e8:	89 83       	std	Y+1, r24	; 0x01
}

void LCD_displayString(char *Str)
{
	unsigned char i = 0;
	while(Str[i] != '\0')
    51ea:	89 81       	ldd	r24, Y+1	; 0x01
    51ec:	28 2f       	mov	r18, r24
    51ee:	30 e0       	ldi	r19, 0x00	; 0
    51f0:	8a 81       	ldd	r24, Y+2	; 0x02
    51f2:	9b 81       	ldd	r25, Y+3	; 0x03
    51f4:	fc 01       	movw	r30, r24
    51f6:	e2 0f       	add	r30, r18
    51f8:	f3 1f       	adc	r31, r19
    51fa:	80 81       	ld	r24, Z
    51fc:	88 23       	and	r24, r24
    51fe:	39 f7       	brne	.-50     	; 0x51ce <LCD_displayString+0x14>
	{
		LCD_displayCharacter(Str[i]);
		i++;
	}
}
    5200:	0f 90       	pop	r0
    5202:	0f 90       	pop	r0
    5204:	0f 90       	pop	r0
    5206:	cf 91       	pop	r28
    5208:	df 91       	pop	r29
    520a:	08 95       	ret

0000520c <LCD_moveCursor>:

void LCD_moveCursor(unsigned char row,unsigned char col)
{
    520c:	df 93       	push	r29
    520e:	cf 93       	push	r28
    5210:	00 d0       	rcall	.+0      	; 0x5212 <LCD_moveCursor+0x6>
    5212:	00 d0       	rcall	.+0      	; 0x5214 <LCD_moveCursor+0x8>
    5214:	0f 92       	push	r0
    5216:	cd b7       	in	r28, 0x3d	; 61
    5218:	de b7       	in	r29, 0x3e	; 62
    521a:	8a 83       	std	Y+2, r24	; 0x02
    521c:	6b 83       	std	Y+3, r22	; 0x03
	unsigned char lcd_memory_address;

	/* Calculate the required address in the LCD DDRAM */
	switch(row)
    521e:	8a 81       	ldd	r24, Y+2	; 0x02
    5220:	28 2f       	mov	r18, r24
    5222:	30 e0       	ldi	r19, 0x00	; 0
    5224:	3d 83       	std	Y+5, r19	; 0x05
    5226:	2c 83       	std	Y+4, r18	; 0x04
    5228:	8c 81       	ldd	r24, Y+4	; 0x04
    522a:	9d 81       	ldd	r25, Y+5	; 0x05
    522c:	81 30       	cpi	r24, 0x01	; 1
    522e:	91 05       	cpc	r25, r1
    5230:	c1 f0       	breq	.+48     	; 0x5262 <LCD_moveCursor+0x56>
    5232:	2c 81       	ldd	r18, Y+4	; 0x04
    5234:	3d 81       	ldd	r19, Y+5	; 0x05
    5236:	22 30       	cpi	r18, 0x02	; 2
    5238:	31 05       	cpc	r19, r1
    523a:	2c f4       	brge	.+10     	; 0x5246 <LCD_moveCursor+0x3a>
    523c:	8c 81       	ldd	r24, Y+4	; 0x04
    523e:	9d 81       	ldd	r25, Y+5	; 0x05
    5240:	00 97       	sbiw	r24, 0x00	; 0
    5242:	61 f0       	breq	.+24     	; 0x525c <LCD_moveCursor+0x50>
    5244:	19 c0       	rjmp	.+50     	; 0x5278 <LCD_moveCursor+0x6c>
    5246:	2c 81       	ldd	r18, Y+4	; 0x04
    5248:	3d 81       	ldd	r19, Y+5	; 0x05
    524a:	22 30       	cpi	r18, 0x02	; 2
    524c:	31 05       	cpc	r19, r1
    524e:	69 f0       	breq	.+26     	; 0x526a <LCD_moveCursor+0x5e>
    5250:	8c 81       	ldd	r24, Y+4	; 0x04
    5252:	9d 81       	ldd	r25, Y+5	; 0x05
    5254:	83 30       	cpi	r24, 0x03	; 3
    5256:	91 05       	cpc	r25, r1
    5258:	61 f0       	breq	.+24     	; 0x5272 <LCD_moveCursor+0x66>
    525a:	0e c0       	rjmp	.+28     	; 0x5278 <LCD_moveCursor+0x6c>
	{
	case 0:
		lcd_memory_address=col;
    525c:	8b 81       	ldd	r24, Y+3	; 0x03
    525e:	89 83       	std	Y+1, r24	; 0x01
    5260:	0b c0       	rjmp	.+22     	; 0x5278 <LCD_moveCursor+0x6c>
		break;
	case 1:
		lcd_memory_address=col+0x40;
    5262:	8b 81       	ldd	r24, Y+3	; 0x03
    5264:	80 5c       	subi	r24, 0xC0	; 192
    5266:	89 83       	std	Y+1, r24	; 0x01
    5268:	07 c0       	rjmp	.+14     	; 0x5278 <LCD_moveCursor+0x6c>
		break;
	case 2:
		lcd_memory_address=col+0x10;
    526a:	8b 81       	ldd	r24, Y+3	; 0x03
    526c:	80 5f       	subi	r24, 0xF0	; 240
    526e:	89 83       	std	Y+1, r24	; 0x01
    5270:	03 c0       	rjmp	.+6      	; 0x5278 <LCD_moveCursor+0x6c>
		break;
	case 3:
		lcd_memory_address=col+0x50;
    5272:	8b 81       	ldd	r24, Y+3	; 0x03
    5274:	80 5b       	subi	r24, 0xB0	; 176
    5276:	89 83       	std	Y+1, r24	; 0x01
		break;
	}
	/* Move the LCD cursor to this specific address */
	LCD_sendCommand(lcd_memory_address | LCD_SET_CURSOR_LOCATION);
    5278:	89 81       	ldd	r24, Y+1	; 0x01
    527a:	80 68       	ori	r24, 0x80	; 128
    527c:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
}
    5280:	0f 90       	pop	r0
    5282:	0f 90       	pop	r0
    5284:	0f 90       	pop	r0
    5286:	0f 90       	pop	r0
    5288:	0f 90       	pop	r0
    528a:	cf 91       	pop	r28
    528c:	df 91       	pop	r29
    528e:	08 95       	ret

00005290 <LCD_displayStringRowColumn>:

void LCD_displayStringRowColumn(unsigned char row,unsigned char col,char *Str)
{
    5290:	df 93       	push	r29
    5292:	cf 93       	push	r28
    5294:	00 d0       	rcall	.+0      	; 0x5296 <LCD_displayStringRowColumn+0x6>
    5296:	00 d0       	rcall	.+0      	; 0x5298 <LCD_displayStringRowColumn+0x8>
    5298:	cd b7       	in	r28, 0x3d	; 61
    529a:	de b7       	in	r29, 0x3e	; 62
    529c:	89 83       	std	Y+1, r24	; 0x01
    529e:	6a 83       	std	Y+2, r22	; 0x02
    52a0:	5c 83       	std	Y+4, r21	; 0x04
    52a2:	4b 83       	std	Y+3, r20	; 0x03
	LCD_moveCursor(row,col); /* go to to the required LCD position */
    52a4:	89 81       	ldd	r24, Y+1	; 0x01
    52a6:	6a 81       	ldd	r22, Y+2	; 0x02
    52a8:	0e 94 06 29 	call	0x520c	; 0x520c <LCD_moveCursor>
	LCD_displayString(Str); /* display the string */
    52ac:	8b 81       	ldd	r24, Y+3	; 0x03
    52ae:	9c 81       	ldd	r25, Y+4	; 0x04
    52b0:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
}
    52b4:	0f 90       	pop	r0
    52b6:	0f 90       	pop	r0
    52b8:	0f 90       	pop	r0
    52ba:	0f 90       	pop	r0
    52bc:	cf 91       	pop	r28
    52be:	df 91       	pop	r29
    52c0:	08 95       	ret

000052c2 <LCD_intgerToString>:

void LCD_intgerToString(int data)
{
    52c2:	df 93       	push	r29
    52c4:	cf 93       	push	r28
    52c6:	cd b7       	in	r28, 0x3d	; 61
    52c8:	de b7       	in	r29, 0x3e	; 62
    52ca:	62 97       	sbiw	r28, 0x12	; 18
    52cc:	0f b6       	in	r0, 0x3f	; 63
    52ce:	f8 94       	cli
    52d0:	de bf       	out	0x3e, r29	; 62
    52d2:	0f be       	out	0x3f, r0	; 63
    52d4:	cd bf       	out	0x3d, r28	; 61
    52d6:	9a 8b       	std	Y+18, r25	; 0x12
    52d8:	89 8b       	std	Y+17, r24	; 0x11
	char buff[16]; /* String to hold the ascii result */
	itoa(data,buff,10); /* Use itoa C function to convert the data to its corresponding ASCII value, 10 for decimal */
    52da:	89 89       	ldd	r24, Y+17	; 0x11
    52dc:	9a 89       	ldd	r25, Y+18	; 0x12
    52de:	9e 01       	movw	r18, r28
    52e0:	2f 5f       	subi	r18, 0xFF	; 255
    52e2:	3f 4f       	sbci	r19, 0xFF	; 255
    52e4:	b9 01       	movw	r22, r18
    52e6:	4a e0       	ldi	r20, 0x0A	; 10
    52e8:	50 e0       	ldi	r21, 0x00	; 0
    52ea:	0e 94 1a 2c 	call	0x5834	; 0x5834 <itoa>
	LCD_displayString(buff); /* Display the string */
    52ee:	ce 01       	movw	r24, r28
    52f0:	01 96       	adiw	r24, 0x01	; 1
    52f2:	0e 94 dd 28 	call	0x51ba	; 0x51ba <LCD_displayString>
}
    52f6:	62 96       	adiw	r28, 0x12	; 18
    52f8:	0f b6       	in	r0, 0x3f	; 63
    52fa:	f8 94       	cli
    52fc:	de bf       	out	0x3e, r29	; 62
    52fe:	0f be       	out	0x3f, r0	; 63
    5300:	cd bf       	out	0x3d, r28	; 61
    5302:	cf 91       	pop	r28
    5304:	df 91       	pop	r29
    5306:	08 95       	ret

00005308 <LCD_clearScreen>:

void LCD_clearScreen(void)
{
    5308:	df 93       	push	r29
    530a:	cf 93       	push	r28
    530c:	cd b7       	in	r28, 0x3d	; 61
    530e:	de b7       	in	r29, 0x3e	; 62
	LCD_sendCommand(LCD_CLEAR_COMMAND); /* Send clear display command */
    5310:	81 e0       	ldi	r24, 0x01	; 1
    5312:	0e 94 a3 20 	call	0x4146	; 0x4146 <LCD_sendCommand>
}
    5316:	cf 91       	pop	r28
    5318:	df 91       	pop	r29
    531a:	08 95       	ret

0000531c <KEYPAD_getPressedKey>:

/*******************************************************************************
 *                             KeyPad Functions                                *
 *******************************************************************************/
unsigned char KEYPAD_getPressedKey(void)
{
    531c:	df 93       	push	r29
    531e:	cf 93       	push	r28
    5320:	cd b7       	in	r28, 0x3d	; 61
    5322:	de b7       	in	r29, 0x3e	; 62
    5324:	6e 97       	sbiw	r28, 0x1e	; 30
    5326:	0f b6       	in	r0, 0x3f	; 63
    5328:	f8 94       	cli
    532a:	de bf       	out	0x3e, r29	; 62
    532c:	0f be       	out	0x3f, r0	; 63
    532e:	cd bf       	out	0x3d, r28	; 61
	unsigned char col, row;

	DDRB &= 0x0F;  /*Set rows connected to PORTB as Input pins*/
    5330:	a7 e3       	ldi	r26, 0x37	; 55
    5332:	b0 e0       	ldi	r27, 0x00	; 0
    5334:	e7 e3       	ldi	r30, 0x37	; 55
    5336:	f0 e0       	ldi	r31, 0x00	; 0
    5338:	80 81       	ld	r24, Z
    533a:	8f 70       	andi	r24, 0x0F	; 15
    533c:	8c 93       	st	X, r24
	DDRD &= 0xC3;  /*Set cols connected to PORTD as Input pins*/
    533e:	a1 e3       	ldi	r26, 0x31	; 49
    5340:	b0 e0       	ldi	r27, 0x00	; 0
    5342:	e1 e3       	ldi	r30, 0x31	; 49
    5344:	f0 e0       	ldi	r31, 0x00	; 0
    5346:	80 81       	ld	r24, Z
    5348:	83 7c       	andi	r24, 0xC3	; 195
    534a:	8c 93       	st	X, r24
	PORTD |= 0x3C; /*Set Pull-Up Resistor for cols connected to PORTD*/
    534c:	a2 e3       	ldi	r26, 0x32	; 50
    534e:	b0 e0       	ldi	r27, 0x00	; 0
    5350:	e2 e3       	ldi	r30, 0x32	; 50
    5352:	f0 e0       	ldi	r31, 0x00	; 0
    5354:	80 81       	ld	r24, Z
    5356:	8c 63       	ori	r24, 0x3C	; 60
    5358:	8c 93       	st	X, r24

	while(1)
	{
		for(row = 0; row < ROWS_NUM; row++) /* loop for rows */
    535a:	1d 8e       	std	Y+29, r1	; 0x1d
    535c:	16 c1       	rjmp	.+556    	; 0x558a <KEYPAD_getPressedKey+0x26e>
		{
			/*
			 * Each time setup the direction for all keypad port as input pins,
			 * except this row will be output pin
			 */
			DDRB |= (1 << (row + FIRST_ROWS_PIN));
    535e:	a7 e3       	ldi	r26, 0x37	; 55
    5360:	b0 e0       	ldi	r27, 0x00	; 0
    5362:	e7 e3       	ldi	r30, 0x37	; 55
    5364:	f0 e0       	ldi	r31, 0x00	; 0
    5366:	80 81       	ld	r24, Z
    5368:	48 2f       	mov	r20, r24
    536a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    536c:	88 2f       	mov	r24, r24
    536e:	90 e0       	ldi	r25, 0x00	; 0
    5370:	9c 01       	movw	r18, r24
    5372:	2c 5f       	subi	r18, 0xFC	; 252
    5374:	3f 4f       	sbci	r19, 0xFF	; 255
    5376:	81 e0       	ldi	r24, 0x01	; 1
    5378:	90 e0       	ldi	r25, 0x00	; 0
    537a:	02 c0       	rjmp	.+4      	; 0x5380 <KEYPAD_getPressedKey+0x64>
    537c:	88 0f       	add	r24, r24
    537e:	99 1f       	adc	r25, r25
    5380:	2a 95       	dec	r18
    5382:	e2 f7       	brpl	.-8      	; 0x537c <KEYPAD_getPressedKey+0x60>
    5384:	84 2b       	or	r24, r20
    5386:	8c 93       	st	X, r24

			/* Set/Clear the row output pin */
			PORTB &= ~(1 << (row + FIRST_ROWS_PIN));
    5388:	a8 e3       	ldi	r26, 0x38	; 56
    538a:	b0 e0       	ldi	r27, 0x00	; 0
    538c:	e8 e3       	ldi	r30, 0x38	; 56
    538e:	f0 e0       	ldi	r31, 0x00	; 0
    5390:	80 81       	ld	r24, Z
    5392:	48 2f       	mov	r20, r24
    5394:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5396:	88 2f       	mov	r24, r24
    5398:	90 e0       	ldi	r25, 0x00	; 0
    539a:	9c 01       	movw	r18, r24
    539c:	2c 5f       	subi	r18, 0xFC	; 252
    539e:	3f 4f       	sbci	r19, 0xFF	; 255
    53a0:	81 e0       	ldi	r24, 0x01	; 1
    53a2:	90 e0       	ldi	r25, 0x00	; 0
    53a4:	02 2e       	mov	r0, r18
    53a6:	02 c0       	rjmp	.+4      	; 0x53ac <KEYPAD_getPressedKey+0x90>
    53a8:	88 0f       	add	r24, r24
    53aa:	99 1f       	adc	r25, r25
    53ac:	0a 94       	dec	r0
    53ae:	e2 f7       	brpl	.-8      	; 0x53a8 <KEYPAD_getPressedKey+0x8c>
    53b0:	80 95       	com	r24
    53b2:	84 23       	and	r24, r20
    53b4:	8c 93       	st	X, r24

			for(col = 0; col < COLS_NUM; col++) /* loop for columns */
    53b6:	1e 8e       	std	Y+30, r1	; 0x1e
    53b8:	ca c0       	rjmp	.+404    	; 0x554e <KEYPAD_getPressedKey+0x232>
			{
				/* Check if the switch is pressed in this column */
				if(!(PIND & (1 << (col + FIRST_COLS_PIN)))) // Check if button is pressed
    53ba:	e0 e3       	ldi	r30, 0x30	; 48
    53bc:	f0 e0       	ldi	r31, 0x00	; 0
    53be:	80 81       	ld	r24, Z
    53c0:	28 2f       	mov	r18, r24
    53c2:	30 e0       	ldi	r19, 0x00	; 0
    53c4:	8e 8d       	ldd	r24, Y+30	; 0x1e
    53c6:	88 2f       	mov	r24, r24
    53c8:	90 e0       	ldi	r25, 0x00	; 0
    53ca:	02 96       	adiw	r24, 0x02	; 2
    53cc:	a9 01       	movw	r20, r18
    53ce:	02 c0       	rjmp	.+4      	; 0x53d4 <KEYPAD_getPressedKey+0xb8>
    53d0:	55 95       	asr	r21
    53d2:	47 95       	ror	r20
    53d4:	8a 95       	dec	r24
    53d6:	e2 f7       	brpl	.-8      	; 0x53d0 <KEYPAD_getPressedKey+0xb4>
    53d8:	ca 01       	movw	r24, r20
    53da:	81 70       	andi	r24, 0x01	; 1
    53dc:	90 70       	andi	r25, 0x00	; 0
    53de:	00 97       	sbiw	r24, 0x00	; 0
    53e0:	09 f0       	breq	.+2      	; 0x53e4 <KEYPAD_getPressedKey+0xc8>
    53e2:	b2 c0       	rjmp	.+356    	; 0x5548 <KEYPAD_getPressedKey+0x22c>
    53e4:	80 e0       	ldi	r24, 0x00	; 0
    53e6:	90 e0       	ldi	r25, 0x00	; 0
    53e8:	a0 ef       	ldi	r26, 0xF0	; 240
    53ea:	b1 e4       	ldi	r27, 0x41	; 65
    53ec:	89 8f       	std	Y+25, r24	; 0x19
    53ee:	9a 8f       	std	Y+26, r25	; 0x1a
    53f0:	ab 8f       	std	Y+27, r26	; 0x1b
    53f2:	bc 8f       	std	Y+28, r27	; 0x1c
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    53f4:	69 8d       	ldd	r22, Y+25	; 0x19
    53f6:	7a 8d       	ldd	r23, Y+26	; 0x1a
    53f8:	8b 8d       	ldd	r24, Y+27	; 0x1b
    53fa:	9c 8d       	ldd	r25, Y+28	; 0x1c
    53fc:	20 e0       	ldi	r18, 0x00	; 0
    53fe:	30 e0       	ldi	r19, 0x00	; 0
    5400:	4a e7       	ldi	r20, 0x7A	; 122
    5402:	55 e4       	ldi	r21, 0x45	; 69
    5404:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5408:	dc 01       	movw	r26, r24
    540a:	cb 01       	movw	r24, r22
    540c:	8d 8b       	std	Y+21, r24	; 0x15
    540e:	9e 8b       	std	Y+22, r25	; 0x16
    5410:	af 8b       	std	Y+23, r26	; 0x17
    5412:	b8 8f       	std	Y+24, r27	; 0x18
	if (__tmp < 1.0)
    5414:	6d 89       	ldd	r22, Y+21	; 0x15
    5416:	7e 89       	ldd	r23, Y+22	; 0x16
    5418:	8f 89       	ldd	r24, Y+23	; 0x17
    541a:	98 8d       	ldd	r25, Y+24	; 0x18
    541c:	20 e0       	ldi	r18, 0x00	; 0
    541e:	30 e0       	ldi	r19, 0x00	; 0
    5420:	40 e8       	ldi	r20, 0x80	; 128
    5422:	5f e3       	ldi	r21, 0x3F	; 63
    5424:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    5428:	88 23       	and	r24, r24
    542a:	2c f4       	brge	.+10     	; 0x5436 <KEYPAD_getPressedKey+0x11a>
		__ticks = 1;
    542c:	81 e0       	ldi	r24, 0x01	; 1
    542e:	90 e0       	ldi	r25, 0x00	; 0
    5430:	9c 8b       	std	Y+20, r25	; 0x14
    5432:	8b 8b       	std	Y+19, r24	; 0x13
    5434:	3f c0       	rjmp	.+126    	; 0x54b4 <KEYPAD_getPressedKey+0x198>
	else if (__tmp > 65535)
    5436:	6d 89       	ldd	r22, Y+21	; 0x15
    5438:	7e 89       	ldd	r23, Y+22	; 0x16
    543a:	8f 89       	ldd	r24, Y+23	; 0x17
    543c:	98 8d       	ldd	r25, Y+24	; 0x18
    543e:	20 e0       	ldi	r18, 0x00	; 0
    5440:	3f ef       	ldi	r19, 0xFF	; 255
    5442:	4f e7       	ldi	r20, 0x7F	; 127
    5444:	57 e4       	ldi	r21, 0x47	; 71
    5446:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    544a:	18 16       	cp	r1, r24
    544c:	4c f5       	brge	.+82     	; 0x54a0 <KEYPAD_getPressedKey+0x184>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    544e:	69 8d       	ldd	r22, Y+25	; 0x19
    5450:	7a 8d       	ldd	r23, Y+26	; 0x1a
    5452:	8b 8d       	ldd	r24, Y+27	; 0x1b
    5454:	9c 8d       	ldd	r25, Y+28	; 0x1c
    5456:	20 e0       	ldi	r18, 0x00	; 0
    5458:	30 e0       	ldi	r19, 0x00	; 0
    545a:	40 e2       	ldi	r20, 0x20	; 32
    545c:	51 e4       	ldi	r21, 0x41	; 65
    545e:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5462:	dc 01       	movw	r26, r24
    5464:	cb 01       	movw	r24, r22
    5466:	bc 01       	movw	r22, r24
    5468:	cd 01       	movw	r24, r26
    546a:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    546e:	dc 01       	movw	r26, r24
    5470:	cb 01       	movw	r24, r22
    5472:	9c 8b       	std	Y+20, r25	; 0x14
    5474:	8b 8b       	std	Y+19, r24	; 0x13
    5476:	0f c0       	rjmp	.+30     	; 0x5496 <KEYPAD_getPressedKey+0x17a>
    5478:	80 e9       	ldi	r24, 0x90	; 144
    547a:	91 e0       	ldi	r25, 0x01	; 1
    547c:	9a 8b       	std	Y+18, r25	; 0x12
    547e:	89 8b       	std	Y+17, r24	; 0x11
    5480:	89 89       	ldd	r24, Y+17	; 0x11
    5482:	9a 89       	ldd	r25, Y+18	; 0x12
    5484:	01 97       	sbiw	r24, 0x01	; 1
    5486:	f1 f7       	brne	.-4      	; 0x5484 <KEYPAD_getPressedKey+0x168>
    5488:	9a 8b       	std	Y+18, r25	; 0x12
    548a:	89 8b       	std	Y+17, r24	; 0x11
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    548c:	8b 89       	ldd	r24, Y+19	; 0x13
    548e:	9c 89       	ldd	r25, Y+20	; 0x14
    5490:	01 97       	sbiw	r24, 0x01	; 1
    5492:	9c 8b       	std	Y+20, r25	; 0x14
    5494:	8b 8b       	std	Y+19, r24	; 0x13
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5496:	8b 89       	ldd	r24, Y+19	; 0x13
    5498:	9c 89       	ldd	r25, Y+20	; 0x14
    549a:	00 97       	sbiw	r24, 0x00	; 0
    549c:	69 f7       	brne	.-38     	; 0x5478 <KEYPAD_getPressedKey+0x15c>
    549e:	14 c0       	rjmp	.+40     	; 0x54c8 <KEYPAD_getPressedKey+0x1ac>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    54a0:	6d 89       	ldd	r22, Y+21	; 0x15
    54a2:	7e 89       	ldd	r23, Y+22	; 0x16
    54a4:	8f 89       	ldd	r24, Y+23	; 0x17
    54a6:	98 8d       	ldd	r25, Y+24	; 0x18
    54a8:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    54ac:	dc 01       	movw	r26, r24
    54ae:	cb 01       	movw	r24, r22
    54b0:	9c 8b       	std	Y+20, r25	; 0x14
    54b2:	8b 8b       	std	Y+19, r24	; 0x13
    54b4:	8b 89       	ldd	r24, Y+19	; 0x13
    54b6:	9c 89       	ldd	r25, Y+20	; 0x14
    54b8:	98 8b       	std	Y+16, r25	; 0x10
    54ba:	8f 87       	std	Y+15, r24	; 0x0f
    54bc:	8f 85       	ldd	r24, Y+15	; 0x0f
    54be:	98 89       	ldd	r25, Y+16	; 0x10
    54c0:	01 97       	sbiw	r24, 0x01	; 1
    54c2:	f1 f7       	brne	.-4      	; 0x54c0 <KEYPAD_getPressedKey+0x1a4>
    54c4:	98 8b       	std	Y+16, r25	; 0x10
    54c6:	8f 87       	std	Y+15, r24	; 0x0f
				{
					_delay_ms(30);
					if(!(PIND & (1 << (col + FIRST_COLS_PIN)))) // Check again if button is pressed because keypad can produce noisy signals
    54c8:	e0 e3       	ldi	r30, 0x30	; 48
    54ca:	f0 e0       	ldi	r31, 0x00	; 0
    54cc:	80 81       	ld	r24, Z
    54ce:	28 2f       	mov	r18, r24
    54d0:	30 e0       	ldi	r19, 0x00	; 0
    54d2:	8e 8d       	ldd	r24, Y+30	; 0x1e
    54d4:	88 2f       	mov	r24, r24
    54d6:	90 e0       	ldi	r25, 0x00	; 0
    54d8:	02 96       	adiw	r24, 0x02	; 2
    54da:	a9 01       	movw	r20, r18
    54dc:	02 c0       	rjmp	.+4      	; 0x54e2 <KEYPAD_getPressedKey+0x1c6>
    54de:	55 95       	asr	r21
    54e0:	47 95       	ror	r20
    54e2:	8a 95       	dec	r24
    54e4:	e2 f7       	brpl	.-8      	; 0x54de <KEYPAD_getPressedKey+0x1c2>
    54e6:	ca 01       	movw	r24, r20
    54e8:	81 70       	andi	r24, 0x01	; 1
    54ea:	90 70       	andi	r25, 0x00	; 0
    54ec:	00 97       	sbiw	r24, 0x00	; 0
    54ee:	61 f5       	brne	.+88     	; 0x5548 <KEYPAD_getPressedKey+0x22c>
					{
						DDRB &= ~(1 << (row + FIRST_ROWS_PIN));
    54f0:	a7 e3       	ldi	r26, 0x37	; 55
    54f2:	b0 e0       	ldi	r27, 0x00	; 0
    54f4:	e7 e3       	ldi	r30, 0x37	; 55
    54f6:	f0 e0       	ldi	r31, 0x00	; 0
    54f8:	80 81       	ld	r24, Z
    54fa:	48 2f       	mov	r20, r24
    54fc:	8d 8d       	ldd	r24, Y+29	; 0x1d
    54fe:	88 2f       	mov	r24, r24
    5500:	90 e0       	ldi	r25, 0x00	; 0
    5502:	9c 01       	movw	r18, r24
    5504:	2c 5f       	subi	r18, 0xFC	; 252
    5506:	3f 4f       	sbci	r19, 0xFF	; 255
    5508:	81 e0       	ldi	r24, 0x01	; 1
    550a:	90 e0       	ldi	r25, 0x00	; 0
    550c:	02 c0       	rjmp	.+4      	; 0x5512 <KEYPAD_getPressedKey+0x1f6>
    550e:	88 0f       	add	r24, r24
    5510:	99 1f       	adc	r25, r25
    5512:	2a 95       	dec	r18
    5514:	e2 f7       	brpl	.-8      	; 0x550e <KEYPAD_getPressedKey+0x1f2>
    5516:	80 95       	com	r24
    5518:	84 23       	and	r24, r20
    551a:	8c 93       	st	X, r24
						return KEYPAD_4x4_adjustKeyNumber((row*COLS_NUM)+col+1);
    551c:	8d 8d       	ldd	r24, Y+29	; 0x1d
    551e:	88 2f       	mov	r24, r24
    5520:	90 e0       	ldi	r25, 0x00	; 0
    5522:	88 0f       	add	r24, r24
    5524:	99 1f       	adc	r25, r25
    5526:	88 0f       	add	r24, r24
    5528:	99 1f       	adc	r25, r25
    552a:	98 2f       	mov	r25, r24
    552c:	8e 8d       	ldd	r24, Y+30	; 0x1e
    552e:	89 0f       	add	r24, r25
    5530:	8f 5f       	subi	r24, 0xFF	; 255
    5532:	0e 94 3c 2b 	call	0x5678	; 0x5678 <KEYPAD_4x4_adjustKeyNumber>
			}
			DDRB &= ~(1 << (row + FIRST_ROWS_PIN));
		}
		_delay_ms(10);
	}
}
    5536:	6e 96       	adiw	r28, 0x1e	; 30
    5538:	0f b6       	in	r0, 0x3f	; 63
    553a:	f8 94       	cli
    553c:	de bf       	out	0x3e, r29	; 62
    553e:	0f be       	out	0x3f, r0	; 63
    5540:	cd bf       	out	0x3d, r28	; 61
    5542:	cf 91       	pop	r28
    5544:	df 91       	pop	r29
    5546:	08 95       	ret
			DDRB |= (1 << (row + FIRST_ROWS_PIN));

			/* Set/Clear the row output pin */
			PORTB &= ~(1 << (row + FIRST_ROWS_PIN));

			for(col = 0; col < COLS_NUM; col++) /* loop for columns */
    5548:	8e 8d       	ldd	r24, Y+30	; 0x1e
    554a:	8f 5f       	subi	r24, 0xFF	; 255
    554c:	8e 8f       	std	Y+30, r24	; 0x1e
    554e:	8e 8d       	ldd	r24, Y+30	; 0x1e
    5550:	84 30       	cpi	r24, 0x04	; 4
    5552:	08 f4       	brcc	.+2      	; 0x5556 <KEYPAD_getPressedKey+0x23a>
    5554:	32 cf       	rjmp	.-412    	; 0x53ba <KEYPAD_getPressedKey+0x9e>
						DDRB &= ~(1 << (row + FIRST_ROWS_PIN));
						return KEYPAD_4x4_adjustKeyNumber((row*COLS_NUM)+col+1);
					}
				}
			}
			DDRB &= ~(1 << (row + FIRST_ROWS_PIN));
    5556:	a7 e3       	ldi	r26, 0x37	; 55
    5558:	b0 e0       	ldi	r27, 0x00	; 0
    555a:	e7 e3       	ldi	r30, 0x37	; 55
    555c:	f0 e0       	ldi	r31, 0x00	; 0
    555e:	80 81       	ld	r24, Z
    5560:	48 2f       	mov	r20, r24
    5562:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5564:	88 2f       	mov	r24, r24
    5566:	90 e0       	ldi	r25, 0x00	; 0
    5568:	9c 01       	movw	r18, r24
    556a:	2c 5f       	subi	r18, 0xFC	; 252
    556c:	3f 4f       	sbci	r19, 0xFF	; 255
    556e:	81 e0       	ldi	r24, 0x01	; 1
    5570:	90 e0       	ldi	r25, 0x00	; 0
    5572:	02 2e       	mov	r0, r18
    5574:	02 c0       	rjmp	.+4      	; 0x557a <KEYPAD_getPressedKey+0x25e>
    5576:	88 0f       	add	r24, r24
    5578:	99 1f       	adc	r25, r25
    557a:	0a 94       	dec	r0
    557c:	e2 f7       	brpl	.-8      	; 0x5576 <KEYPAD_getPressedKey+0x25a>
    557e:	80 95       	com	r24
    5580:	84 23       	and	r24, r20
    5582:	8c 93       	st	X, r24
	DDRD &= 0xC3;  /*Set cols connected to PORTD as Input pins*/
	PORTD |= 0x3C; /*Set Pull-Up Resistor for cols connected to PORTD*/

	while(1)
	{
		for(row = 0; row < ROWS_NUM; row++) /* loop for rows */
    5584:	8d 8d       	ldd	r24, Y+29	; 0x1d
    5586:	8f 5f       	subi	r24, 0xFF	; 255
    5588:	8d 8f       	std	Y+29, r24	; 0x1d
    558a:	8d 8d       	ldd	r24, Y+29	; 0x1d
    558c:	84 30       	cpi	r24, 0x04	; 4
    558e:	08 f4       	brcc	.+2      	; 0x5592 <KEYPAD_getPressedKey+0x276>
    5590:	e6 ce       	rjmp	.-564    	; 0x535e <KEYPAD_getPressedKey+0x42>
    5592:	80 e0       	ldi	r24, 0x00	; 0
    5594:	90 e0       	ldi	r25, 0x00	; 0
    5596:	a0 e2       	ldi	r26, 0x20	; 32
    5598:	b1 e4       	ldi	r27, 0x41	; 65
    559a:	8b 87       	std	Y+11, r24	; 0x0b
    559c:	9c 87       	std	Y+12, r25	; 0x0c
    559e:	ad 87       	std	Y+13, r26	; 0x0d
    55a0:	be 87       	std	Y+14, r27	; 0x0e
 */
void
_delay_ms(double __ms)
{
	uint16_t __ticks;
	double __tmp = ((F_CPU) / 4e3) * __ms;
    55a2:	6b 85       	ldd	r22, Y+11	; 0x0b
    55a4:	7c 85       	ldd	r23, Y+12	; 0x0c
    55a6:	8d 85       	ldd	r24, Y+13	; 0x0d
    55a8:	9e 85       	ldd	r25, Y+14	; 0x0e
    55aa:	20 e0       	ldi	r18, 0x00	; 0
    55ac:	30 e0       	ldi	r19, 0x00	; 0
    55ae:	4a e7       	ldi	r20, 0x7A	; 122
    55b0:	55 e4       	ldi	r21, 0x45	; 69
    55b2:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    55b6:	dc 01       	movw	r26, r24
    55b8:	cb 01       	movw	r24, r22
    55ba:	8f 83       	std	Y+7, r24	; 0x07
    55bc:	98 87       	std	Y+8, r25	; 0x08
    55be:	a9 87       	std	Y+9, r26	; 0x09
    55c0:	ba 87       	std	Y+10, r27	; 0x0a
	if (__tmp < 1.0)
    55c2:	6f 81       	ldd	r22, Y+7	; 0x07
    55c4:	78 85       	ldd	r23, Y+8	; 0x08
    55c6:	89 85       	ldd	r24, Y+9	; 0x09
    55c8:	9a 85       	ldd	r25, Y+10	; 0x0a
    55ca:	20 e0       	ldi	r18, 0x00	; 0
    55cc:	30 e0       	ldi	r19, 0x00	; 0
    55ce:	40 e8       	ldi	r20, 0x80	; 128
    55d0:	5f e3       	ldi	r21, 0x3F	; 63
    55d2:	0e 94 71 03 	call	0x6e2	; 0x6e2 <__ltsf2>
    55d6:	88 23       	and	r24, r24
    55d8:	2c f4       	brge	.+10     	; 0x55e4 <KEYPAD_getPressedKey+0x2c8>
		__ticks = 1;
    55da:	81 e0       	ldi	r24, 0x01	; 1
    55dc:	90 e0       	ldi	r25, 0x00	; 0
    55de:	9e 83       	std	Y+6, r25	; 0x06
    55e0:	8d 83       	std	Y+5, r24	; 0x05
    55e2:	3f c0       	rjmp	.+126    	; 0x5662 <KEYPAD_getPressedKey+0x346>
	else if (__tmp > 65535)
    55e4:	6f 81       	ldd	r22, Y+7	; 0x07
    55e6:	78 85       	ldd	r23, Y+8	; 0x08
    55e8:	89 85       	ldd	r24, Y+9	; 0x09
    55ea:	9a 85       	ldd	r25, Y+10	; 0x0a
    55ec:	20 e0       	ldi	r18, 0x00	; 0
    55ee:	3f ef       	ldi	r19, 0xFF	; 255
    55f0:	4f e7       	ldi	r20, 0x7F	; 127
    55f2:	57 e4       	ldi	r21, 0x47	; 71
    55f4:	0e 94 11 03 	call	0x622	; 0x622 <__gtsf2>
    55f8:	18 16       	cp	r1, r24
    55fa:	4c f5       	brge	.+82     	; 0x564e <KEYPAD_getPressedKey+0x332>
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
    55fc:	6b 85       	ldd	r22, Y+11	; 0x0b
    55fe:	7c 85       	ldd	r23, Y+12	; 0x0c
    5600:	8d 85       	ldd	r24, Y+13	; 0x0d
    5602:	9e 85       	ldd	r25, Y+14	; 0x0e
    5604:	20 e0       	ldi	r18, 0x00	; 0
    5606:	30 e0       	ldi	r19, 0x00	; 0
    5608:	40 e2       	ldi	r20, 0x20	; 32
    560a:	51 e4       	ldi	r21, 0x41	; 65
    560c:	0e 94 17 02 	call	0x42e	; 0x42e <__mulsf3>
    5610:	dc 01       	movw	r26, r24
    5612:	cb 01       	movw	r24, r22
    5614:	bc 01       	movw	r22, r24
    5616:	cd 01       	movw	r24, r26
    5618:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    561c:	dc 01       	movw	r26, r24
    561e:	cb 01       	movw	r24, r22
    5620:	9e 83       	std	Y+6, r25	; 0x06
    5622:	8d 83       	std	Y+5, r24	; 0x05
    5624:	0f c0       	rjmp	.+30     	; 0x5644 <KEYPAD_getPressedKey+0x328>
    5626:	80 e9       	ldi	r24, 0x90	; 144
    5628:	91 e0       	ldi	r25, 0x01	; 1
    562a:	9c 83       	std	Y+4, r25	; 0x04
    562c:	8b 83       	std	Y+3, r24	; 0x03
    562e:	8b 81       	ldd	r24, Y+3	; 0x03
    5630:	9c 81       	ldd	r25, Y+4	; 0x04
    5632:	01 97       	sbiw	r24, 0x01	; 1
    5634:	f1 f7       	brne	.-4      	; 0x5632 <KEYPAD_getPressedKey+0x316>
    5636:	9c 83       	std	Y+4, r25	; 0x04
    5638:	8b 83       	std	Y+3, r24	; 0x03
		while(__ticks)
		{
			// wait 1/10 ms
			_delay_loop_2(((F_CPU) / 4e3) / 10);
			__ticks --;
    563a:	8d 81       	ldd	r24, Y+5	; 0x05
    563c:	9e 81       	ldd	r25, Y+6	; 0x06
    563e:	01 97       	sbiw	r24, 0x01	; 1
    5640:	9e 83       	std	Y+6, r25	; 0x06
    5642:	8d 83       	std	Y+5, r24	; 0x05
		__ticks = 1;
	else if (__tmp > 65535)
	{
		//	__ticks = requested delay in 1/10 ms
		__ticks = (uint16_t) (__ms * 10.0);
		while(__ticks)
    5644:	8d 81       	ldd	r24, Y+5	; 0x05
    5646:	9e 81       	ldd	r25, Y+6	; 0x06
    5648:	00 97       	sbiw	r24, 0x00	; 0
    564a:	69 f7       	brne	.-38     	; 0x5626 <KEYPAD_getPressedKey+0x30a>
    564c:	86 ce       	rjmp	.-756    	; 0x535a <KEYPAD_getPressedKey+0x3e>
			__ticks --;
		}
		return;
	}
	else
		__ticks = (uint16_t)__tmp;
    564e:	6f 81       	ldd	r22, Y+7	; 0x07
    5650:	78 85       	ldd	r23, Y+8	; 0x08
    5652:	89 85       	ldd	r24, Y+9	; 0x09
    5654:	9a 85       	ldd	r25, Y+10	; 0x0a
    5656:	0e 94 41 00 	call	0x82	; 0x82 <__fixunssfsi>
    565a:	dc 01       	movw	r26, r24
    565c:	cb 01       	movw	r24, r22
    565e:	9e 83       	std	Y+6, r25	; 0x06
    5660:	8d 83       	std	Y+5, r24	; 0x05
    5662:	8d 81       	ldd	r24, Y+5	; 0x05
    5664:	9e 81       	ldd	r25, Y+6	; 0x06
    5666:	9a 83       	std	Y+2, r25	; 0x02
    5668:	89 83       	std	Y+1, r24	; 0x01
    566a:	89 81       	ldd	r24, Y+1	; 0x01
    566c:	9a 81       	ldd	r25, Y+2	; 0x02
    566e:	01 97       	sbiw	r24, 0x01	; 1
    5670:	f1 f7       	brne	.-4      	; 0x566e <KEYPAD_getPressedKey+0x352>
    5672:	9a 83       	std	Y+2, r25	; 0x02
    5674:	89 83       	std	Y+1, r24	; 0x01
    5676:	71 ce       	rjmp	.-798    	; 0x535a <KEYPAD_getPressedKey+0x3e>

00005678 <KEYPAD_4x4_adjustKeyNumber>:
/*
 * Description :
 * Update the keypad pressed button value with the correct one in keypad 4x4 shape
 */
unsigned char KEYPAD_4x4_adjustKeyNumber(unsigned char button_number)
{
    5678:	df 93       	push	r29
    567a:	cf 93       	push	r28
    567c:	00 d0       	rcall	.+0      	; 0x567e <KEYPAD_4x4_adjustKeyNumber+0x6>
    567e:	00 d0       	rcall	.+0      	; 0x5680 <KEYPAD_4x4_adjustKeyNumber+0x8>
    5680:	cd b7       	in	r28, 0x3d	; 61
    5682:	de b7       	in	r29, 0x3e	; 62
    5684:	8a 83       	std	Y+2, r24	; 0x02
	unsigned char keypad_button = 0;
    5686:	19 82       	std	Y+1, r1	; 0x01
	switch(button_number)
    5688:	8a 81       	ldd	r24, Y+2	; 0x02
    568a:	28 2f       	mov	r18, r24
    568c:	30 e0       	ldi	r19, 0x00	; 0
    568e:	3c 83       	std	Y+4, r19	; 0x04
    5690:	2b 83       	std	Y+3, r18	; 0x03
    5692:	8b 81       	ldd	r24, Y+3	; 0x03
    5694:	9c 81       	ldd	r25, Y+4	; 0x04
    5696:	88 30       	cpi	r24, 0x08	; 8
    5698:	91 05       	cpc	r25, r1
    569a:	09 f4       	brne	.+2      	; 0x569e <KEYPAD_4x4_adjustKeyNumber+0x26>
    569c:	70 c0       	rjmp	.+224    	; 0x577e <KEYPAD_4x4_adjustKeyNumber+0x106>
    569e:	2b 81       	ldd	r18, Y+3	; 0x03
    56a0:	3c 81       	ldd	r19, Y+4	; 0x04
    56a2:	29 30       	cpi	r18, 0x09	; 9
    56a4:	31 05       	cpc	r19, r1
    56a6:	5c f5       	brge	.+86     	; 0x56fe <KEYPAD_4x4_adjustKeyNumber+0x86>
    56a8:	8b 81       	ldd	r24, Y+3	; 0x03
    56aa:	9c 81       	ldd	r25, Y+4	; 0x04
    56ac:	84 30       	cpi	r24, 0x04	; 4
    56ae:	91 05       	cpc	r25, r1
    56b0:	09 f4       	brne	.+2      	; 0x56b4 <KEYPAD_4x4_adjustKeyNumber+0x3c>
    56b2:	59 c0       	rjmp	.+178    	; 0x5766 <KEYPAD_4x4_adjustKeyNumber+0xee>
    56b4:	2b 81       	ldd	r18, Y+3	; 0x03
    56b6:	3c 81       	ldd	r19, Y+4	; 0x04
    56b8:	25 30       	cpi	r18, 0x05	; 5
    56ba:	31 05       	cpc	r19, r1
    56bc:	9c f4       	brge	.+38     	; 0x56e4 <KEYPAD_4x4_adjustKeyNumber+0x6c>
    56be:	8b 81       	ldd	r24, Y+3	; 0x03
    56c0:	9c 81       	ldd	r25, Y+4	; 0x04
    56c2:	82 30       	cpi	r24, 0x02	; 2
    56c4:	91 05       	cpc	r25, r1
    56c6:	09 f4       	brne	.+2      	; 0x56ca <KEYPAD_4x4_adjustKeyNumber+0x52>
    56c8:	48 c0       	rjmp	.+144    	; 0x575a <KEYPAD_4x4_adjustKeyNumber+0xe2>
    56ca:	2b 81       	ldd	r18, Y+3	; 0x03
    56cc:	3c 81       	ldd	r19, Y+4	; 0x04
    56ce:	23 30       	cpi	r18, 0x03	; 3
    56d0:	31 05       	cpc	r19, r1
    56d2:	0c f0       	brlt	.+2      	; 0x56d6 <KEYPAD_4x4_adjustKeyNumber+0x5e>
    56d4:	45 c0       	rjmp	.+138    	; 0x5760 <KEYPAD_4x4_adjustKeyNumber+0xe8>
    56d6:	8b 81       	ldd	r24, Y+3	; 0x03
    56d8:	9c 81       	ldd	r25, Y+4	; 0x04
    56da:	81 30       	cpi	r24, 0x01	; 1
    56dc:	91 05       	cpc	r25, r1
    56de:	09 f4       	brne	.+2      	; 0x56e2 <KEYPAD_4x4_adjustKeyNumber+0x6a>
    56e0:	39 c0       	rjmp	.+114    	; 0x5754 <KEYPAD_4x4_adjustKeyNumber+0xdc>
    56e2:	67 c0       	rjmp	.+206    	; 0x57b2 <KEYPAD_4x4_adjustKeyNumber+0x13a>
    56e4:	2b 81       	ldd	r18, Y+3	; 0x03
    56e6:	3c 81       	ldd	r19, Y+4	; 0x04
    56e8:	26 30       	cpi	r18, 0x06	; 6
    56ea:	31 05       	cpc	r19, r1
    56ec:	09 f4       	brne	.+2      	; 0x56f0 <KEYPAD_4x4_adjustKeyNumber+0x78>
    56ee:	41 c0       	rjmp	.+130    	; 0x5772 <KEYPAD_4x4_adjustKeyNumber+0xfa>
    56f0:	8b 81       	ldd	r24, Y+3	; 0x03
    56f2:	9c 81       	ldd	r25, Y+4	; 0x04
    56f4:	87 30       	cpi	r24, 0x07	; 7
    56f6:	91 05       	cpc	r25, r1
    56f8:	0c f0       	brlt	.+2      	; 0x56fc <KEYPAD_4x4_adjustKeyNumber+0x84>
    56fa:	3e c0       	rjmp	.+124    	; 0x5778 <KEYPAD_4x4_adjustKeyNumber+0x100>
    56fc:	37 c0       	rjmp	.+110    	; 0x576c <KEYPAD_4x4_adjustKeyNumber+0xf4>
    56fe:	2b 81       	ldd	r18, Y+3	; 0x03
    5700:	3c 81       	ldd	r19, Y+4	; 0x04
    5702:	2c 30       	cpi	r18, 0x0C	; 12
    5704:	31 05       	cpc	r19, r1
    5706:	09 f4       	brne	.+2      	; 0x570a <KEYPAD_4x4_adjustKeyNumber+0x92>
    5708:	46 c0       	rjmp	.+140    	; 0x5796 <KEYPAD_4x4_adjustKeyNumber+0x11e>
    570a:	8b 81       	ldd	r24, Y+3	; 0x03
    570c:	9c 81       	ldd	r25, Y+4	; 0x04
    570e:	8d 30       	cpi	r24, 0x0D	; 13
    5710:	91 05       	cpc	r25, r1
    5712:	5c f4       	brge	.+22     	; 0x572a <KEYPAD_4x4_adjustKeyNumber+0xb2>
    5714:	2b 81       	ldd	r18, Y+3	; 0x03
    5716:	3c 81       	ldd	r19, Y+4	; 0x04
    5718:	2a 30       	cpi	r18, 0x0A	; 10
    571a:	31 05       	cpc	r19, r1
    571c:	b1 f1       	breq	.+108    	; 0x578a <KEYPAD_4x4_adjustKeyNumber+0x112>
    571e:	8b 81       	ldd	r24, Y+3	; 0x03
    5720:	9c 81       	ldd	r25, Y+4	; 0x04
    5722:	8b 30       	cpi	r24, 0x0B	; 11
    5724:	91 05       	cpc	r25, r1
    5726:	a4 f5       	brge	.+104    	; 0x5790 <KEYPAD_4x4_adjustKeyNumber+0x118>
    5728:	2d c0       	rjmp	.+90     	; 0x5784 <KEYPAD_4x4_adjustKeyNumber+0x10c>
    572a:	2b 81       	ldd	r18, Y+3	; 0x03
    572c:	3c 81       	ldd	r19, Y+4	; 0x04
    572e:	2e 30       	cpi	r18, 0x0E	; 14
    5730:	31 05       	cpc	r19, r1
    5732:	b9 f1       	breq	.+110    	; 0x57a2 <KEYPAD_4x4_adjustKeyNumber+0x12a>
    5734:	8b 81       	ldd	r24, Y+3	; 0x03
    5736:	9c 81       	ldd	r25, Y+4	; 0x04
    5738:	8e 30       	cpi	r24, 0x0E	; 14
    573a:	91 05       	cpc	r25, r1
    573c:	7c f1       	brlt	.+94     	; 0x579c <KEYPAD_4x4_adjustKeyNumber+0x124>
    573e:	2b 81       	ldd	r18, Y+3	; 0x03
    5740:	3c 81       	ldd	r19, Y+4	; 0x04
    5742:	2f 30       	cpi	r18, 0x0F	; 15
    5744:	31 05       	cpc	r19, r1
    5746:	79 f1       	breq	.+94     	; 0x57a6 <KEYPAD_4x4_adjustKeyNumber+0x12e>
    5748:	8b 81       	ldd	r24, Y+3	; 0x03
    574a:	9c 81       	ldd	r25, Y+4	; 0x04
    574c:	80 31       	cpi	r24, 0x10	; 16
    574e:	91 05       	cpc	r25, r1
    5750:	69 f1       	breq	.+90     	; 0x57ac <KEYPAD_4x4_adjustKeyNumber+0x134>
    5752:	2f c0       	rjmp	.+94     	; 0x57b2 <KEYPAD_4x4_adjustKeyNumber+0x13a>
	{
	case 1: keypad_button = 7;
    5754:	87 e0       	ldi	r24, 0x07	; 7
    5756:	89 83       	std	Y+1, r24	; 0x01
    5758:	2e c0       	rjmp	.+92     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 2: keypad_button = 8;
    575a:	88 e0       	ldi	r24, 0x08	; 8
    575c:	89 83       	std	Y+1, r24	; 0x01
    575e:	2b c0       	rjmp	.+86     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 3: keypad_button = 9;
    5760:	89 e0       	ldi	r24, 0x09	; 9
    5762:	89 83       	std	Y+1, r24	; 0x01
    5764:	28 c0       	rjmp	.+80     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 4: keypad_button = '%'; // ASCII Code of %
    5766:	85 e2       	ldi	r24, 0x25	; 37
    5768:	89 83       	std	Y+1, r24	; 0x01
    576a:	25 c0       	rjmp	.+74     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 5: keypad_button = 4;
    576c:	84 e0       	ldi	r24, 0x04	; 4
    576e:	89 83       	std	Y+1, r24	; 0x01
    5770:	22 c0       	rjmp	.+68     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 6: keypad_button = 5;
    5772:	85 e0       	ldi	r24, 0x05	; 5
    5774:	89 83       	std	Y+1, r24	; 0x01
    5776:	1f c0       	rjmp	.+62     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 7: keypad_button = 6;
    5778:	86 e0       	ldi	r24, 0x06	; 6
    577a:	89 83       	std	Y+1, r24	; 0x01
    577c:	1c c0       	rjmp	.+56     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 8: keypad_button = '*'; /* ASCII Code of '*' */
    577e:	8a e2       	ldi	r24, 0x2A	; 42
    5780:	89 83       	std	Y+1, r24	; 0x01
    5782:	19 c0       	rjmp	.+50     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 9: keypad_button = 1;
    5784:	81 e0       	ldi	r24, 0x01	; 1
    5786:	89 83       	std	Y+1, r24	; 0x01
    5788:	16 c0       	rjmp	.+44     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 10: keypad_button = 2;
    578a:	82 e0       	ldi	r24, 0x02	; 2
    578c:	89 83       	std	Y+1, r24	; 0x01
    578e:	13 c0       	rjmp	.+38     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 11: keypad_button = 3;
    5790:	83 e0       	ldi	r24, 0x03	; 3
    5792:	89 83       	std	Y+1, r24	; 0x01
    5794:	10 c0       	rjmp	.+32     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 12: keypad_button = '-'; /* ASCII Code of '-' */
    5796:	8d e2       	ldi	r24, 0x2D	; 45
    5798:	89 83       	std	Y+1, r24	; 0x01
    579a:	0d c0       	rjmp	.+26     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 13: keypad_button = 13;  /* ASCII of Enter */
    579c:	8d e0       	ldi	r24, 0x0D	; 13
    579e:	89 83       	std	Y+1, r24	; 0x01
    57a0:	0a c0       	rjmp	.+20     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 14: keypad_button = 0;
    57a2:	19 82       	std	Y+1, r1	; 0x01
    57a4:	08 c0       	rjmp	.+16     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 15: keypad_button = '='; /* ASCII Code of '=' */
    57a6:	8d e3       	ldi	r24, 0x3D	; 61
    57a8:	89 83       	std	Y+1, r24	; 0x01
    57aa:	05 c0       	rjmp	.+10     	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	case 16: keypad_button = '+'; /* ASCII Code of '+' */
    57ac:	8b e2       	ldi	r24, 0x2B	; 43
    57ae:	89 83       	std	Y+1, r24	; 0x01
    57b0:	02 c0       	rjmp	.+4      	; 0x57b6 <KEYPAD_4x4_adjustKeyNumber+0x13e>
	break;
	default: keypad_button = button_number;
    57b2:	8a 81       	ldd	r24, Y+2	; 0x02
    57b4:	89 83       	std	Y+1, r24	; 0x01
	break;
	}
	return keypad_button;
    57b6:	89 81       	ldd	r24, Y+1	; 0x01
}
    57b8:	0f 90       	pop	r0
    57ba:	0f 90       	pop	r0
    57bc:	0f 90       	pop	r0
    57be:	0f 90       	pop	r0
    57c0:	cf 91       	pop	r28
    57c2:	df 91       	pop	r29
    57c4:	08 95       	ret

000057c6 <__prologue_saves__>:
    57c6:	2f 92       	push	r2
    57c8:	3f 92       	push	r3
    57ca:	4f 92       	push	r4
    57cc:	5f 92       	push	r5
    57ce:	6f 92       	push	r6
    57d0:	7f 92       	push	r7
    57d2:	8f 92       	push	r8
    57d4:	9f 92       	push	r9
    57d6:	af 92       	push	r10
    57d8:	bf 92       	push	r11
    57da:	cf 92       	push	r12
    57dc:	df 92       	push	r13
    57de:	ef 92       	push	r14
    57e0:	ff 92       	push	r15
    57e2:	0f 93       	push	r16
    57e4:	1f 93       	push	r17
    57e6:	cf 93       	push	r28
    57e8:	df 93       	push	r29
    57ea:	cd b7       	in	r28, 0x3d	; 61
    57ec:	de b7       	in	r29, 0x3e	; 62
    57ee:	ca 1b       	sub	r28, r26
    57f0:	db 0b       	sbc	r29, r27
    57f2:	0f b6       	in	r0, 0x3f	; 63
    57f4:	f8 94       	cli
    57f6:	de bf       	out	0x3e, r29	; 62
    57f8:	0f be       	out	0x3f, r0	; 63
    57fa:	cd bf       	out	0x3d, r28	; 61
    57fc:	09 94       	ijmp

000057fe <__epilogue_restores__>:
    57fe:	2a 88       	ldd	r2, Y+18	; 0x12
    5800:	39 88       	ldd	r3, Y+17	; 0x11
    5802:	48 88       	ldd	r4, Y+16	; 0x10
    5804:	5f 84       	ldd	r5, Y+15	; 0x0f
    5806:	6e 84       	ldd	r6, Y+14	; 0x0e
    5808:	7d 84       	ldd	r7, Y+13	; 0x0d
    580a:	8c 84       	ldd	r8, Y+12	; 0x0c
    580c:	9b 84       	ldd	r9, Y+11	; 0x0b
    580e:	aa 84       	ldd	r10, Y+10	; 0x0a
    5810:	b9 84       	ldd	r11, Y+9	; 0x09
    5812:	c8 84       	ldd	r12, Y+8	; 0x08
    5814:	df 80       	ldd	r13, Y+7	; 0x07
    5816:	ee 80       	ldd	r14, Y+6	; 0x06
    5818:	fd 80       	ldd	r15, Y+5	; 0x05
    581a:	0c 81       	ldd	r16, Y+4	; 0x04
    581c:	1b 81       	ldd	r17, Y+3	; 0x03
    581e:	aa 81       	ldd	r26, Y+2	; 0x02
    5820:	b9 81       	ldd	r27, Y+1	; 0x01
    5822:	ce 0f       	add	r28, r30
    5824:	d1 1d       	adc	r29, r1
    5826:	0f b6       	in	r0, 0x3f	; 63
    5828:	f8 94       	cli
    582a:	de bf       	out	0x3e, r29	; 62
    582c:	0f be       	out	0x3f, r0	; 63
    582e:	cd bf       	out	0x3d, r28	; 61
    5830:	ed 01       	movw	r28, r26
    5832:	08 95       	ret

00005834 <itoa>:
    5834:	fb 01       	movw	r30, r22
    5836:	9f 01       	movw	r18, r30
    5838:	e8 94       	clt
    583a:	42 30       	cpi	r20, 0x02	; 2
    583c:	c4 f0       	brlt	.+48     	; 0x586e <itoa+0x3a>
    583e:	45 32       	cpi	r20, 0x25	; 37
    5840:	b4 f4       	brge	.+44     	; 0x586e <itoa+0x3a>
    5842:	4a 30       	cpi	r20, 0x0A	; 10
    5844:	29 f4       	brne	.+10     	; 0x5850 <itoa+0x1c>
    5846:	97 fb       	bst	r25, 7
    5848:	1e f4       	brtc	.+6      	; 0x5850 <itoa+0x1c>
    584a:	90 95       	com	r25
    584c:	81 95       	neg	r24
    584e:	9f 4f       	sbci	r25, 0xFF	; 255
    5850:	64 2f       	mov	r22, r20
    5852:	77 27       	eor	r23, r23
    5854:	0e 94 4b 2c 	call	0x5896	; 0x5896 <__udivmodhi4>
    5858:	80 5d       	subi	r24, 0xD0	; 208
    585a:	8a 33       	cpi	r24, 0x3A	; 58
    585c:	0c f0       	brlt	.+2      	; 0x5860 <itoa+0x2c>
    585e:	89 5d       	subi	r24, 0xD9	; 217
    5860:	81 93       	st	Z+, r24
    5862:	cb 01       	movw	r24, r22
    5864:	00 97       	sbiw	r24, 0x00	; 0
    5866:	a1 f7       	brne	.-24     	; 0x5850 <itoa+0x1c>
    5868:	16 f4       	brtc	.+4      	; 0x586e <itoa+0x3a>
    586a:	5d e2       	ldi	r21, 0x2D	; 45
    586c:	51 93       	st	Z+, r21
    586e:	10 82       	st	Z, r1
    5870:	c9 01       	movw	r24, r18
    5872:	0c 94 3b 2c 	jmp	0x5876	; 0x5876 <strrev>

00005876 <strrev>:
    5876:	dc 01       	movw	r26, r24
    5878:	fc 01       	movw	r30, r24
    587a:	67 2f       	mov	r22, r23
    587c:	71 91       	ld	r23, Z+
    587e:	77 23       	and	r23, r23
    5880:	e1 f7       	brne	.-8      	; 0x587a <strrev+0x4>
    5882:	32 97       	sbiw	r30, 0x02	; 2
    5884:	04 c0       	rjmp	.+8      	; 0x588e <strrev+0x18>
    5886:	7c 91       	ld	r23, X
    5888:	6d 93       	st	X+, r22
    588a:	70 83       	st	Z, r23
    588c:	62 91       	ld	r22, -Z
    588e:	ae 17       	cp	r26, r30
    5890:	bf 07       	cpc	r27, r31
    5892:	c8 f3       	brcs	.-14     	; 0x5886 <strrev+0x10>
    5894:	08 95       	ret

00005896 <__udivmodhi4>:
    5896:	aa 1b       	sub	r26, r26
    5898:	bb 1b       	sub	r27, r27
    589a:	51 e1       	ldi	r21, 0x11	; 17
    589c:	07 c0       	rjmp	.+14     	; 0x58ac <__udivmodhi4_ep>

0000589e <__udivmodhi4_loop>:
    589e:	aa 1f       	adc	r26, r26
    58a0:	bb 1f       	adc	r27, r27
    58a2:	a6 17       	cp	r26, r22
    58a4:	b7 07       	cpc	r27, r23
    58a6:	10 f0       	brcs	.+4      	; 0x58ac <__udivmodhi4_ep>
    58a8:	a6 1b       	sub	r26, r22
    58aa:	b7 0b       	sbc	r27, r23

000058ac <__udivmodhi4_ep>:
    58ac:	88 1f       	adc	r24, r24
    58ae:	99 1f       	adc	r25, r25
    58b0:	5a 95       	dec	r21
    58b2:	a9 f7       	brne	.-22     	; 0x589e <__udivmodhi4_loop>
    58b4:	80 95       	com	r24
    58b6:	90 95       	com	r25
    58b8:	bc 01       	movw	r22, r24
    58ba:	cd 01       	movw	r24, r26
    58bc:	08 95       	ret

000058be <_exit>:
    58be:	f8 94       	cli

000058c0 <__stop_program>:
    58c0:	ff cf       	rjmp	.-2      	; 0x58c0 <__stop_program>
